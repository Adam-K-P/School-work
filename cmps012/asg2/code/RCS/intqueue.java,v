head	1.15;
access;
symbols;
locks;
comment	@# @;


1.15
date	2015.02.03.05.25.20;	author -;	state -;
branches;
next	1.14;

1.14
date	2015.01.30.05.18.20;	author -;	state -;
branches;
next	1.13;

1.13
date	2015.01.30.05.17.53;	author -;	state -;
branches;
next	1.12;

1.12
date	2015.01.30.05.17.12;	author -;	state -;
branches;
next	1.11;

1.11
date	2015.01.30.05.16.23;	author -;	state -;
branches;
next	1.10;

1.10
date	2015.01.30.04.29.40;	author -;	state -;
branches;
next	1.9;

1.9
date	2015.01.30.04.17.59;	author -;	state -;
branches;
next	1.8;

1.8
date	2015.01.30.04.17.46;	author -;	state -;
branches;
next	1.7;

1.7
date	2015.01.30.04.12.10;	author -;	state -;
branches;
next	1.6;

1.6
date	2015.01.30.04.11.40;	author -;	state -;
branches;
next	1.5;

1.5
date	2015.01.30.04.05.27;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.10.17.00.10.32;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.01.25.03.44.29;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.01.25.03.32.48;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.01.25.03.22.48;	author -;	state -;
branches;
next	;


desc
@@


1.15
log
@-
@
text
@// Adam Pinarbasi akpinarb
// $Id: intqueue.java,v 1.4 2013-10-16 17:10:32-07 - - $

import java.util.Iterator;
import java.util.NoSuchElementException;

class intqueue implements Iterable<Integer> {
   private class node{ 
      int linenr;
      node link;
   }

   private node front = null;
   private node rear = null;
   private node line;
   private int count = 0;

   public int getLinenr(){
      if(line == null)
         line = front;
      node temp = line;
      if(line.link == null)
         return line.linenr;
      line = line.link;
      return temp.linenr;
   }

   public void insert (int linenr) {
      ++count;
      node curr = new node();
      if(front == null) {
         curr.linenr = linenr;
         curr.link = null;
         front = curr;
         rear = curr;
      }
      else{
         curr.linenr = linenr;
         rear.link = curr;
         rear = curr;
      }
   }

   public boolean empty() {
      return count == 0;
   }

   public int getcount() {
      return count;
   }

   public Iterator<Integer> iterator() {
      return new iterator();
   }

   private class iterator implements Iterator<Integer> {
      node curr = front;

      public boolean hasNext() {
         return curr != null;
      }

      public Integer next() {
         if (curr == null) throw new NoSuchElementException();
         Integer next = curr.linenr;
         curr = curr.link;
         return next;
      }

      public void remove() {
         throw new UnsupportedOperationException();
      }
   }

}

@


1.14
log
@-
@
text
@d8 1
a8 2

   private class node {
d12 1
a12 1
   private int count = 0;
d15 12
a27 1
   //linenr was originally number
d30 12
a41 1
      System.out.printf("%d\n", count); 
@


1.13
log
@-
@
text
@a20 1
      }
@


1.12
log
@-
@
text
@a19 6
      if(front == null){
         front.link = rear;
      }
      else{
         

@


1.11
log
@-
@
text
@d27 1
@


1.10
log
@-
@
text
@d20 7
a26 1
      System.out.printf("%d %d\n", count, linenr); 
@


1.9
log
@-
@
text
@d20 1
a20 1
      out.printf("%d\n", count); 
@


1.8
log
@-
@
text
@d20 1
a20 1
      System.out.printf("%d\n", count); 
@


1.7
log
@-
@
text
@d20 1
a20 1
      System.err.printf("%d\n", linenr); 
@


1.6
log
@-
@
text
@d20 1
a20 1
      System.err.printf("%d\n", count); 
@


1.5
log
@-
@
text
@d20 1
a20 1
      System.out.printf("%d\n", count); 
@


1.4
log
@-
@
text
@d1 2
a2 1
// $Id: intqueue.java,v 1.3 2013-01-24 19:44:29-08 - - $
d17 2
a18 1
   public void insert (int number) {
d20 1
a20 2
      misc.trace (count);
      //FIXME
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: intqueue.java,v 1.2 2013-01-24 19:32:48-08 - - $
d19 1
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: intqueue.java,v 1.1 2013-01-24 19:22:48-08 - - $
a7 3
   private int count = 0;
   private node front = null;
   private node rear = null;
d12 3
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: intqueue.java,v 1.4 2012-01-19 19:43:07-08 - - $
d18 1
@
