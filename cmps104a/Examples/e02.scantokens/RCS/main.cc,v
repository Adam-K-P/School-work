head	1.3;
access;
symbols;
locks;
comment	@// @;


1.3
date	2014.10.10.01.39.25;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.10.10.01.38.45;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.09.06.00.36.36;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@// $Id: main.cc,v 1.2 2014-10-09 18:38:45-07 - - $

#include <errno.h>
#include <getopt.h>
#include <libgen.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "tokens.h"

int main (void) {
   yy_flex_debug = 1;
   int linenr = 1;

   for (;;) {
      int token = yylex();
      if (yy_flex_debug) fflush (NULL);
      switch (token) {
         case YYEOF:
            printf ("END OF FILE\n");
            return 0;
         case IDENT:
            printf ("IDENT \"%s\"\n", yytext);
            break;
         case NUMBER:
            printf ("NUMBER \"%s\"\n", yytext);
            break;
         case '+':
         case '-':
         case '*':
         case '/':
         case '=':
         case ';':
            printf ("OPERATOR \"%s\"\n", yytext);
            break;
         case '\n':
            printf ("NEWLINE\n");
            ++linenr;
            break;
         default:
            printf ("ERROR \"%s\"\n", yytext);
      }
   }

   return EXIT_SUCCESS;
}

@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: main.cc,v 1.1 2013-09-05 17:36:36-07 - - $
d46 1
a46 1
   return 0;
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.7 2013-08-30 14:09:53-07 - - $
d33 2
d42 1
a42 1
            printf ("ERROR_TOKEN \"%s\"\n", yytext);
@
