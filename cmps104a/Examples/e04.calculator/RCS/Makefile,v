head	1.12;
access;
symbols;
locks;
comment	@# @;


1.12
date	2014.10.24.23.28.32;	author -;	state -;
branches;
next	1.11;

1.11
date	2013.09.06.03.25.21;	author -;	state -;
branches;
next	1.10;

1.10
date	2013.09.06.03.24.24;	author -;	state -;
branches;
next	1.9;

1.9
date	2013.09.06.02.28.54;	author -;	state -;
branches;
next	1.8;

1.8
date	2013.09.06.02.21.46;	author -;	state -;
branches;
next	1.7;

1.7
date	2013.09.06.01.40.21;	author -;	state -;
branches;
next	1.6;

1.6
date	2009.10.21.03.36.01;	author -;	state -;
branches;
next	1.5;

1.5
date	2009.10.21.03.34.23;	author -;	state -;
branches;
next	1.4;

1.4
date	2009.10.21.03.31.52;	author -;	state -;
branches;
next	1.3;

1.3
date	2006.10.16.19.14.29;	author -;	state -;
branches;
next	1.2;

1.2
date	2006.10.16.19.12.40;	author -;	state -;
branches;
next	1.1;

1.1
date	2006.10.16.19.09.22;	author -;	state -;
branches;
next	;


desc
@@


1.12
log
@-
@
text
@# $Id: Makefile,v 1.11 2013-09-05 20:25:21-07 - - $

GPP      = g++ -g -O0 -Wall -Wextra -std=gnu++0x
GPPNW    = g++ -g -O0 -std=gnu++0x
GPPDEP   = g++ -MM

TXTS	= README
HDRS	= extern.h
SRCS	= main.cc scanner.l parser.y
GENS	= parser.h scanner.cc parser.cc
OBJS	= main.o scanner.o parser.o
BINS	= calculator
LOGS	= scanner.log parser.log

OUT1	= test1.out test1.err
OUT2	= test2.out test2.err
OUTS	= ${OUT1} ${OUT2}
IN1	= test1.in ${OUT1}
IN2	= test2.in ${OUT2}
INS	= ${IN1} ${IN2}
OUTPUT  = test1.lis test2.lis
LISTS	= Listing.pdf Listing.ps
MAKES	= Makefile Makefile.deps
DEPS    = ${filter %.cc, ${SRCS} ${GENS}}
NOINCL  = ${filter ci clean spotless, ${MAKECMDGOALS}}

LISTING	= ${TXTS} ${HDRS} parser.h ${SRCS} ${MAKES} ${OUTPUT}
CLEAN	= core ${OBJS} ${GENS} ${LOGS} ${OUTS} ${LISTS}
RCS	= ${TXTS} ${HDRS} ${SRCS} Makefile test*.in

define MORE
MORE() { \
   LIS=$$1; shift; \
   for i in $$*; do \
      echo ::::::::::::::::; \
      echo $$i; \
      echo ::::::::::::::::; \
      cat -nv $$i; \
   done >$$LIS; \
}
endef


all: ${BINS}

clean:
	- rm ${CLEAN}

spotless: clean
	- rm ${GENS} ${BINS} Makefile.deps ${OUTPUT}

deps:
	- rm Makefile.deps
	${MAKE} --no-print-directory Makefile.deps

out: ${OUTS}

lis: out
	mkpspdf Listing.ps ${LISTING}

calculator: ${OBJS}
	${GPP} -o calculator ${OBJS}

%.o: %.cc
	${GPP} ${CFLAGS} $< -c

scanner.cc: scanner.l
	flex -oscanner.cc scanner.l >scanner.log 2>&1
	- cat lex.backup >>scanner.log
	- rm lex.backup

parser.cc parser.h: parser.y
	bison -o parser.cc parser.y
	- mv parser.hh parser.h
	- mv parser.output parser.log

test1.lis test1.out test1.err: ${BINS} test1.in
	./calculator <test1.in >test1.out 2>test1.err
	${MORE}; MORE test1.lis test1.in test1.out test1.err

test2.lis test2.out test2.err: ${BINS} test2.in
	./calculator -ly <test2.in >test2.out 2>test2.err
	${MORE}; MORE test2.lis test2.in test2.out test2.err

ci : ${RCS}
	cid + ${RCS}

Makefile.deps: Makefile ${GENS}
	${GPP} -MM ${DEPS} >Makefile.deps

again :
	${MAKE} --no-print-directory spotless ci all lis

ifeq (${NOINCL},)
include Makefile.deps
endif

@


1.11
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.10 2013-09-05 20:24:24-07 - - $
d10 1
a10 1
GENS	= parser.h scanner.cxx parser.cxx
d24 1
a24 1
DEPS    = ${filter %.cc %.cxx, ${SRCS} ${GENS}}
a42 4
ifeq (${NOINCL},)
include Makefile.deps
endif

d44 1
a44 1
all: Makefile.deps ${BINS}
d50 1
a50 1
	- rm ${GENS} ${BINS} Makefile.deps
d67 2
a68 5
%.o: %.cxx
	${GPPNW} ${CFLAGS} $< -c

scanner.cxx: scanner.l
	flex -oscanner.cxx scanner.l >scanner.log 2>&1
d72 3
a74 3
parser.cxx parser.h: parser.y
	bison -o parser.cxx parser.y
	- mv parser.hxx parser.h
d93 5
@


1.10
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.9 2013-09-05 19:28:54-07 - - $
d43 4
d98 2
a99 4
ifeq (${NOINCL},)
include Makefile.deps
endif

@


1.9
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.8 2013-09-05 19:21:46-07 - - $
d4 1
a4 1
GCC      = g++ -g -O0 -std=gnu++0x
d10 1
a10 1
GENS	= parser.h scanner.cc parser.cc
d24 1
a24 1
DEPS    = ${filter %.cc, ${SRCS} ${GENS}}
d31 13
d67 5
a71 2
scanner.cc: scanner.l
	flex -oscanner.cc scanner.l >scanner.log 2>&1
d75 3
a77 3
parser.cc parser.h: parser.y
	bison -o parser.cc parser.y
	- mv parser.hh parser.h
d82 1
a82 1
	catnv test1.in test1.out test1.err >test1.lis
d86 1
a86 1
	catnv test2.in test2.out test2.err >test2.lis
d91 2
a92 2
Makefile.deps: ${DEPS} Makefile
	${GCC} -MM ${DEPS} >Makefile.deps
@


1.8
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.7 2013-09-05 18:40:21-07 - - $
d25 1
d37 1
a37 1
	- rm ${DEPS} ${BINS} Makefile.deps
d78 1
d80 1
@


1.7
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.6 2009-10-20 20:36:01-07 - - $
d10 1
a10 1
GENS	= parser.h scanner.c parser.c
d21 1
d24 1
a24 1
DEPS    = ${filter %.c, ${SRCS} ${GENS}}
d26 1
a26 1
LISTING	= ${TXTS} ${HDRS} parser.h ${SRCS} ${MAKES} ${DATS}
d28 1
a28 1
RCS	= ${TXTS} ${HDRS} ${SRCS} Makefile test*.dat
d38 3
a40 1
deps: Makefile.deps
d50 1
a50 1
%.o: %.c
d53 2
a54 2
scanner.c: scanner.l
	flex -oscanner.c scanner.l >scanner.log 2>&1
d58 3
a60 2
parser.c parser.h: parser.y
	bison -o parser.c parser.y
d63 7
a69 7
%.err: %.out

test1.out: ${BINS} test1.dat
	./calculator <test1.dat >test1.out 2>test1.err

test2.out: ${BINS} test2.dat
	./calculator -LY <test2.dat >test2.out 2>test2.err
d75 1
a75 1
	gcc -MM ${SRCS} ${GENS} >Makefile.deps
@


1.6
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.5 2009-10-20 20:34:23-07 - - $
d3 3
a5 4
CC	= /opt/SUNWspro/bin/cc
CFLAGS	= -D__EXTENSIONS__ -g -xO0 -Xc
LEX	= flex -ppd
YACC	= bison -dtv
d8 4
a11 4
HDRS	= cyystype.h csymbols.h
SRCS	= cmain.c yscanner.l yparser.y csymbols.c
GENS	= yparser.h yscanner.c yparser.c
OBJS	= cmain.o csymbols.o yscanner.o yparser.o
d13 1
a13 1
LOGS	= yscanner.log yparser.log
d18 3
a20 3
DAT1	= test1.dat ${OUT1}
DAT2	= test2.dat ${OUT2}
DATS	= ${DAT1} ${DAT2}
d25 1
a25 1
LISTING	= ${TXTS} ${HDRS} yparser.h ${SRCS} ${MAKES} ${DATS}
d45 1
a45 1
	cc -o calculator ${OBJS}
d48 1
a48 1
	cc ${CFLAGS} $< -c
d50 3
a52 3
yscanner.c: yscanner.l
	${LEX} -oyscanner.c yscanner.l >yscanner.log 2>&1
	- cat lex.backup >>yscanner.log
d55 3
a57 3
yparser.c yparser.h: yparser.y
	${YACC} -o yparser.c yparser.y
	- mv yparser.output yparser.log
d71 1
a71 1
	cc -xM1 ${SRCS} ${GENS} >Makefile.deps
@


1.5
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.4 2009-10-20 20:31:52-07 - - $
d22 1
a22 1
LISTS	= Listing.lis Listing.ps
@


1.4
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.3 2006-10-16 12:14:29-07 - - $
d28 1
a28 1
RCS	= ${TXTS} ${HDRS} ${SRCS} Makefile
@


1.3
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.2 2006-10-16 12:12:40-07 - - $
d3 4
a6 6
CC	= gcc -g
CFLAGS	= -MMD -Wall -ansi -pedantic -D__EXTENSIONS__
LEX	= flex
LFLAGS	= -8bdpsvI -Ce
YACC	= bison
YFLAGS	= -dtv
a10 1
DEPS	= cmain.d yscanner.d yparser.d csymbols.d
d24 1
d33 1
a33 1
	- rm -i ${CLEAN}
d36 1
a36 1
	- rm -i ${DEPS} ${BINS} Makefile.deps
d42 2
a43 6
lis: out Listing.lis

ps: Listing.ps

view: ps
	ghostview -landscape Listing.ps &
d46 1
a46 7
	${CC} -o calculator ${OBJS}

%.d: %.c
	${CC} -MM $< >$@@

y%.o: y%.c
	${CC} $< -c
d48 2
a49 2
c%.o: c%.c
	${CC} ${CFLAGS} $< -c
d51 3
a53 3
y%.log y%.c: y%.l
	${LEX} ${LFLAGS} -o$@@ $< >y$*.log 2>&1
	- cat lex.backup >>y$*.log
d56 2
a57 6

yscanner.d yscanner.o: yscanner.c yparser.h
yparser.o: yparser.c yparser.h

y%.log y%.c y%.h: y%.y
	${YACC} ${YFLAGS} -o yparser.c yparser.y
a70 3
Listing.ps: ${LISTING}
	-  enscript -GjC -pListing.ps -b`pwd` ${LISTING}

d72 1
a72 1
	cat ${DEPS} >Makefile.deps
@


1.2
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.1 2006-10-16 12:09:22-07 - - $
d28 1
a28 1
LISTING	= ${TXTS} ${HDRS} yparser.h ${SRCS} ${MAKES} ${LOGS} ${DATS}
@


1.1
log
@-
@
text
@d1 1
a1 1
# $Id$
d28 1
a28 2
LISTING	= ${TXTS} ${HDRS} yparser.h ${SRCS} ${DEPS} ${MAKES} \
		${LOGS} ${DATS}
d87 2
a88 6
Listing.lis: ${LISTING}
	lis ${LISTING} > Listing.lis

Listing.ps: Listing.lis
	enscript -G2r -p- `pwd`/Listing.lis \
		> Listing.ps
@
