head	1.5;
access;
symbols;
locks;
comment	@// @;


1.5
date	2014.10.10.21.48.42;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.10.10.21.47.54;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.10.10.21.40.38;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.10.10.21.40.19;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.09.04.03.17.41;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@// $Id: main.cc,v 1.4 2014-10-10 14:47:54-07 - - $

#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include "extern.h"

int status = EXIT_SUCCESS;

void scan_options (int argc, char** argv) {
   yy_flex_debug = yydebug = 0;
   for (;;) {
      int opt = getopt (argc, argv, "ly");
      if (opt == EOF) break;
      switch (opt) {
         case 'l': yy_flex_debug = 1; break;
         case 'y': yydebug = 1; break;
         default : status = EXIT_FAILURE;
      }
   }
}

void yyerror (const char *message) {
   status = EXIT_FAILURE;
   fflush (NULL);
   fprintf (stderr, "%s\n", message);
   fflush (NULL);
}

void printchar (char byte) {
   putchar (byte);
   fprintf (stderr, "Debug: printchar ('");
   fprintf (stderr, isprint (byte) ? "%c" : "\\x%02X", byte);
   fprintf (stderr, "')\n");
}

void scanerror (void) {
   static char message[] = "Invalid input character ";
   static char buffer[sizeof message + 16];
   sprintf (buffer, isprint (*yytext) ? "%s'%c'\n" : "%s'\\%03o'\n",
            message, *yytext);
   yyerror (buffer);
}

int main (int argc, char** argv){
   scan_options (argc, argv);
   yyparse();
   return status;
}

@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: main.cc,v 1.3 2014-10-10 14:40:38-07 - - $
d48 1
a48 1
   scan_options();
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: main.cc,v 1.2 2014-10-10 14:40:19-07 - - $
d12 1
a12 1
int main (int argc, char **argv){
d21 2
a22 4
      };
   };
   yyparse ();
   return status;
d41 2
a42 2
   static char buffer[ sizeof message + 8 ];
   sprintf (buffer, isprint (*yytext) ? "%s`%c'\n" : "%s`\\%03o'\n",
d47 6
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: main.cc,v 1.1 2013-09-03 20:17:41-07 - - $
a12 1
   int opt;
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d10 1
a10 1
int exitcode = EXIT_SUCCESS;
d15 3
a17 1
   while ((opt = getopt (argc, argv, "ly")) != EOF) {
d21 1
a21 1
         default : exitcode = EXIT_FAILURE;
d25 1
a25 1
   return exitcode;
d29 1
a29 1
   exitcode = EXIT_FAILURE;
@
