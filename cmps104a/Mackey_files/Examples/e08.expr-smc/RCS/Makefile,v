head	1.12;
access;
symbols;
locks;
comment	@# @;


1.12
date	2015.07.10.01.41.17;	author -;	state -;
branches;
next	1.11;

1.11
date	2015.07.10.01.33.22;	author -;	state -;
branches;
next	1.10;

1.10
date	2015.07.10.01.32.20;	author -;	state -;
branches;
next	1.9;

1.9
date	2015.07.10.01.10.52;	author -;	state -;
branches;
next	1.8;

1.8
date	2015.07.09.21.08.58;	author -;	state -;
branches;
next	1.7;

1.7
date	2015.07.09.02.21.19;	author -;	state -;
branches;
next	1.6;

1.6
date	2015.07.09.00.45.16;	author -;	state -;
branches;
next	1.5;

1.5
date	2015.07.08.21.39.44;	author -;	state -;
branches;
next	1.4;

1.4
date	2015.07.08.21.06.20;	author -;	state -;
branches;
next	1.3;

1.3
date	2015.07.08.20.31.37;	author -;	state -;
branches;
next	1.2;

1.2
date	2015.07.08.20.31.14;	author -;	state -;
branches;
next	1.1;

1.1
date	2015.07.08.20.29.32;	author -;	state -;
branches;
next	;


desc
@@


1.12
log
@-
@
text
@# $Id: Makefile,v 1.11 2015-07-09 18:33:22-07 - - $

DEPSFILE  = Makefile.deps
NOINCLUDE = ci clean spotless
NEEDINCL  = ${filter ${NOINCLUDE}, ${MAKECMDGOALS}}
CPP       = g++ -g -O0 -Wall -Wextra -std=gnu++11
MKDEPS    = g++ -MM -std=gnu++11
GRIND     = valgrind --leak-check=full --show-reachable=yes
FLEX      = flex --header-file=${LEXHDR} --outfile=${LEXCPP}
BISON     = bison --defines=${PARSEHDR} --output=${PARSECPP}

MODULES   = astree utils stringset emitter syslib
HDRSRC    = ${MODULES:=.h}
CPPSRC    = ${MODULES:=.cpp} main.cpp
FLEXSRC   = lexer.l
BISONSRC  = parser.y
LEXHDR    = yylex.h
PARSEHDR  = yyparse.h
LEXCPP    = yylex.cpp
PARSECPP  = yyparse.cpp
CGENS     = ${LEXCPP} ${PARSECPP}
ALLGENS   = ${LEXHDR} ${PARSEHDR} ${CGENS}
EXECBIN   = zexprsm
ALLCSRC   = ${CPPSRC} ${CGENS}
OBJECTS   = ${ALLCSRC:.cpp=.o}
LEXOUT    = yylex.output
PARSEOUT  = yyparse.output
REPORTS   = ${LEXOUT} ${PARSEOUT}
MODSRC    = ${foreach MOD, ${MODULES}, ${MOD}.h ${MOD}.cpp}
MISCSRC   = ${filter-out ${MODSRC}, ${HDRSRC} ${CPPSRC}}
ALLSRC    = README ${FLEXSRC} ${BISONSRC} ${MODSRC} ${MISCSRC} Makefile
TESTINS   = ${wildcard test*.in}
EXECTEST  = ${EXECBIN} -ly
LISTSRC   = ${ALLSRC} ${DEPSFILE} ${PARSEHDR}

all : ${EXECBIN}

${EXECBIN} : ${OBJECTS}
	${CPP} -o${EXECBIN} ${OBJECTS}

%.o : %.cpp
	${CPP} -c $<

${LEXCPP} : ${FLEXSRC}
	${FLEX} ${FLEXSRC} 2>${LEXOUT}
	- grep -v '^  ' ${LEXOUT}

${PARSECPP} ${PARSEHDR} : ${BISONSRC}
	${BISON} ${BISONSRC}
	echo -e '1,$$!cpp -fpreprocessed -dD\nw\nq\n' | ex ${PARSEHDR}


ci : ${ALLSRC} ${TESTINS}
	- checksource ${ALLSRC}
	- cpplint.py.perl ${CPPSRC}
	cid + ${ALLSRC} ${TESTINS} test?.inh

lis : ${LISTSRC} tests
	mkpspdf List.source.ps ${LISTSRC}
	mkpspdf List.output.ps ${REPORTS} \
		${foreach test, ${TESTINS:.in=}, \
		${patsubst %, ${test}.%, in out err log}}

clean :
	- rm ${OBJECTS} ${ALLGENS} ${REPORTS} ${DEPSFILE} core
	- rm ${foreach test, ${TESTINS:.in=}, \
		${patsubst %, ${test}.%, out err log}}

spotless : clean
	- rm ${EXECBIN} List.*.ps List.*.pdf

deps : ${ALLCSRC}
	@@ echo "# ${DEPSFILE} created `date` by ${MAKE}" >${DEPSFILE}
	${MKDEPS} ${ALLCSRC} >>${DEPSFILE}

${DEPSFILE} :
	@@ touch ${DEPSFILE}
	${MAKE} --no-print-directory deps

tests : ${EXECBIN}
	touch ${TESTINS}
	make --no-print-directory ${TESTINS:.in=.out}

%.out %.err : %.in ${EXECBIN}
	${GRIND} --log-file=$*.log ${EXECTEST} $< 1>$*.out 2>$*.err; \
	echo EXIT STATUS = $$? >>$*.log

again :
	gmake --no-print-directory spotless deps ci all lis
	
ifeq "${NEEDINCL}" ""
include ${DEPSFILE}
endif

@


1.11
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.10 2015-07-09 18:32:20-07 - - $
d32 1
a32 1
TESTINS   = ${wildcard test*.in*}
@


1.10
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.9 2015-07-09 18:10:52-07 - - $
d32 1
a32 1
TESTINS   = ${wildcard test?.in}
@


1.9
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.8 2015-07-09 14:08:58-07 - - $
d33 1
a33 1
EXECTEST  = ${EXECBIN} -ly -@@@@
@


1.8
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.7 2015-07-08 19:21:19-07 - - $
a71 1

@


1.7
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.6 2015-07-08 17:45:16-07 - - $
d12 1
a12 4
#
# Definitions of list of files:
#
MODULES   = astree utils stringset emit syslib
a35 8
#
# Definitions of the compiler and compilation options:
#

#
# The first target is always ``all'', and hence the default,
# and builds the executable images
#
a37 3
#
# Build the executable image from the object files.
#
a40 3
#
# Build an object file form a C source file.
#
a43 4

#
# Build the lexer.
#
a47 3
#
# Build the parser.
#
d52 1
a52 3
#
# Check sources into an RCS subdirectory.
#
a57 3
#
# Make a listing from all of the sources
#
a63 3
#
# Clean and spotless remove generated files.
#
a72 3
#
# Build the dependencies file using the C preprocessor
#
a80 4
#
# Test
#

a88 3
#
# Everything
#
@


1.6
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.5 2015-07-08 14:39:44-07 - - $
d6 2
d9 2
d20 6
a25 5
CLGEN     = yylex.cpp
HYGEN     = yyparse.h
CYGEN     = yyparse.cpp
CGENS     = ${CLGEN} ${CYGEN}
ALLGENS   = ${HYGEN} ${CGENS}
d29 3
a31 3
LREPORT   = yylex.output
YREPORT   = yyparse.output
REPORTS   = ${LREPORT} ${YREPORT}
d37 1
a37 1
LISTSRC   = ${ALLSRC} ${DEPSFILE} ${HYGEN}
a41 2
GCC       = g++ -g -O0 -Wall -Wextra -std=gnu++11
MKDEPS    = g++ -MM -std=gnu++11
d53 1
a53 1
	${GCC} -o${EXECBIN} ${OBJECTS}
d59 1
a59 1
	${GCC} -c $<
d65 3
a67 3
${CLGEN} : ${FLEXSRC}
	flex --outfile=${CLGEN} ${FLEXSRC} 2>${LREPORT}
	- grep -v '^  ' ${LREPORT}
d72 3
a74 3
${CYGEN} ${HYGEN} : ${BISONSRC}
	bison --defines=${HYGEN} --output=${CYGEN} ${BISONSRC}
	echo -e '1,$$!cpp -fpreprocessed -dD\nw\nq\n' | ex ${HYGEN}
@


1.5
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.4 2015-07-08 14:06:20-07 - - $
d11 1
a11 1
MODULES   = astree emit utils auxlib stringset 
@


1.4
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.3 2015-07-08 13:31:37-07 - - $
d11 1
a11 1
MODULES   = astree emit lyutils auxlib stringset 
d14 1
a14 1
FLEXSRC   = scanner.l
d60 1
a60 1
# Build the scanner.
@


1.3
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.2 2015-07-08 13:31:14-07 - - $
d26 1
a26 2
IREPORT   = ident.output
REPORTS   = ${LREPORT} ${YREPORT} ${IREPORT}
a50 1
	ident ${OBJECTS} ${EXECBIN} >${IREPORT}
@


1.2
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.1 2015-07-08 13:29:32-07 - - $
d79 2
a80 2
	checksource - ${ALLSRC}
	cpplint.py.perl ${CPPSRC}
@


1.1
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.1 2015-07-08 13:24:25-07 - - $
d79 2
@
