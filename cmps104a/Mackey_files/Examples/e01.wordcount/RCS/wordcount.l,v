head	1.10;
access;
symbols;
locks;
comment	@ * @;


1.10
date	2014.10.10.01.24.48;	author -;	state -;
branches;
next	1.9;

1.9
date	2014.10.10.01.23.36;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.10.10.01.18.02;	author -;	state -;
branches;
next	1.7;

1.7
date	2013.10.04.02.20.48;	author -;	state -;
branches;
next	1.6;

1.6
date	2013.10.04.02.20.06;	author -;	state -;
branches;
next	1.5;

1.5
date	2013.10.04.02.18.44;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.08.30.20.46.03;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.08.30.20.35.57;	author -;	state -;
branches;
next	1.2;

1.2
date	2008.10.06.20.41.49;	author -;	state -;
branches;
next	1.1;

1.1
date	2008.10.06.20.40.28;	author -;	state -;
branches;
next	;


desc
@@


1.10
log
@-
@
text
@%{
// $Id: wordcount.l,v 1.9 2014-10-09 18:23:36-07 - - $

//
// NAME
//    wordcount - count words in files or stdin
//
// SYNOPSIS
//    wordcount
//
// DESCRIPTION
//    Counts words found in stdin.  Also see wc(1).
//

#include <stdio.h>
#include <stdlib.h>

size_t lines = 0;
size_t words = 0;
size_t chars = 0;

%}

%option 8bit
%option debug
%option nodefault
%option nounput
%option noyywrap
%option warn

%%

\n		{ ++chars; ++lines; }
[ \t]+		{ chars += yyleng; }
[^ \t\n]+	{ chars += yyleng; ++words; }

%%

int main() {
   yy_flex_debug = 1;
   yylex ();
   printf ("%8ld lines\n%8ld words\n%8ld chars\n",
                 lines,      words,      chars);
   return EXIT_SUCCESS;
}

@


1.9
log
@-
@
text
@d2 1
a2 1
// $Id: wordcount.l,v 1.8 2014-10-09 18:18:02-07 - - $
a28 1
%option verbose
@


1.8
log
@-
@
text
@d2 1
a2 1
// $Id: wordcount.l,v 1.7 2013-10-03 19:20:48-07 - - $
a24 1
%option backup
a28 1
%option perf-report
@


1.7
log
@-
@
text
@d2 1
a2 1
// $Id: wordcount.l,v 1.6 2013-10-03 19:20:06-07 - - $
a26 1
%option ecs
@


1.6
log
@-
@
text
@d2 1
a2 1
// $Id: wordcount.l,v 1.5 2013-10-03 19:18:44-07 - - $
a13 3
// OPTIONS
//    -L  Sets the yylex() debug flag.
//
d43 2
a44 2
int main (int argc, char **argv) {
   yy_flex_debug = argc > 1;
@


1.5
log
@-
@
text
@d2 1
a2 1
// $Id: wordcount.l,v 1.4 2013-08-30 13:46:03-07 - - $
d21 3
a23 3
int lines = 0;
int words = 0;
int chars = 0;
d49 2
a50 1
   printf ("%d lines\n%d words\n%d chars\n", lines, words, chars);
@


1.4
log
@-
@
text
@d2 1
a2 1
// $Id: wordcount.l,v 1.3 2013-08-30 13:35:57-07 - - $
d9 1
a9 1
//    wordcount [-L] [filename...]
d28 1
d35 1
d49 1
a49 1
   printf ("%d lines, %d words, %d chars\n", lines, words, chars);
@


1.3
log
@-
@
text
@d2 1
a2 1
// $Id: wordcount.l,v 1.2 2008-10-06 13:41:49-07 - - $
d34 1
@


1.2
log
@-
@
text
@d2 15
a16 14
/* $Id: wordcount.l,v 1.1 2008-10-06 13:40:28-07 - - $ */
/*
* NAME
*    wordcount - count words in files or stdin
*
* SYNOPSIS
*    wordcount [-L] [filename...]
*
* DESCRIPTION
*    Counts words found in stdin.  Also see wc(1).
*
* OPTIONS
*    -L  Sets the yylex() debug flag.
*/
@


1.1
log
@-
@
text
@d2 1
a2 1
/* $Id: wordcount.l,v 1.4 2007-10-10 13:43:01-07 - - $ */
d45 1
a45 1
   printf ("%8d%8d%8d\n", lines, words, chars);
@
