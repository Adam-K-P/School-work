head	1.3;
access;
symbols;
locks;
comment	@ * @;


1.3
date	2014.10.24.23.32.04;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.09.06.03.24.24;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.09.06.01.40.21;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@%{
// $Id: parser.y,v 1.2 2013-09-05 20:24:24-07 - - $

#include "extern.h"

#define YYDEBUG 1
#define YYERROR_VERBOSE 1

%}

%debug
%defines
%token-table
%verbose

%token  IDENT NUMBER
%right  '='
%left   '+' '-'
%left   '*' '/'
%right  UNARY

%start  stmts

%%

stmts : stmts stmt           { }
      |                      { }
      ;

stmt  : expr '\n'            { printf ("****EXPR==%.10g\n", $1.val); }
      | error '\n'           { printf ("****ERROR #%d\n", yynerrs); }
      | '\n'                 { printf ("\n"); }
      ;

expr  : IDENT '=' expr       { $$.val = sym_put ($1.sym, $3.val); }
      | expr '+' expr        { $$.val = $1.val + $3.val; }
      | expr '-' expr        { $$.val = $1.val - $3.val; }
      | expr '*' expr        { $$.val = $1.val * $3.val; }
      | expr '/' expr        { $$.val = $1.val / $3.val; }
      | '+' expr %prec UNARY { $$.val = + $2.val; }
      | '-' expr %prec UNARY { $$.val = - $2.val; }
      | '(' expr ')'         { $$.val = $2.val; }
      | NUMBER               { $$.val = $1.val; }
      | IDENT                { $$.val = sym_get ($1.sym); }
      ; 

%%

@


1.2
log
@-
@
text
@d2 1
a2 1
// $Id: parser.y,v 1.1 2013-09-05 18:40:21-07 - - $
d40 1
a41 1
      | '+' expr %prec UNARY { $$.val = + $2.val; }
@


1.1
log
@-
@
text
@d2 1
a2 1
// $Id: yparser.y,v 1.2 2006-10-16 12:17:39-07 - - $
d30 2
a31 2
stmt  : expr '\n'            { printf ("*EXPR==%.10g\n\n", $1.val); }
      | error '\n'           { printf ("*ERROR #%d\n\n", yynerrs); }
@
