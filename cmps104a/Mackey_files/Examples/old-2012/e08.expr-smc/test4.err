DEBUGF(x): auxlib.c[117] set_debugflags():
Debugflags = "@", all = 1
zexprsm: bad option (d)
DEBUGF(m): main.c[69] scan_opts():
filename = test4.in, yyin = 0x661030, fileno (yyin) = 3
Starting parse
Entering state 0
Reducing stack by rule 5 (line 45):
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x6611f0-> 0:0.0: ROOT: 0x661230->"<<ROOT>>"
-> $$ = nterm stmtseq ()
Stack now 0
Entering state 2
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 36 ("# 1 "test4.in"")
DEBUGF(m): lyutils.c[118] scanner_include():
filename=test4.in, scan_linenr=0
--accepting rule at line 38 ("
")
--accepting rule at line 36 ("# 1 "<built-in>"")
DEBUGF(m): lyutils.c[118] scanner_include():
filename=<built-in>, scan_linenr=0
--accepting rule at line 38 ("
")
--accepting rule at line 36 ("# 1 "<command-line>"")
DEBUGF(m): lyutils.c[118] scanner_include():
filename=<command-line>, scan_linenr=0
--accepting rule at line 38 ("
")
--accepting rule at line 36 ("# 1 "test4.in"")
DEBUGF(m): lyutils.c[118] scanner_include():
filename=test4.in, scan_linenr=0
--accepting rule at line 38 ("
")
--accepting rule at line 37 (" ")
--accepting rule at line 41 ("t")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x6653d0-> 4:1.1: IDENT: 0x665410->"t"
Next token is token IDENT (259=IDENT)
         (0x6653d0-> astree {IDENT(259), 4:1.001, 0x665410->"t",
                     first=(nil), last=(nil), next=(nil)})
Shifting token IDENT (259=IDENT)
         (0x6653d0-> astree {IDENT(259), 4:1.001, 0x665410->"t",
                     first=(nil), last=(nil), next=(nil)})
Entering state 5
Reducing stack by rule 15 (line 57):
   $1 = token IDENT (259=IDENT)
         (0x6653d0-> astree {IDENT(259), 4:1.001, 0x665410->"t",
                     first=(nil), last=(nil), next=(nil)})
-> $$ = nterm expr ()
Stack now 0 2
Entering state 11
Reading a token: --accepting rule at line 38 ("
")
--accepting rule at line 36 ("# 1 "test4a.inh" 1")
DEBUGF(m): lyutils.c[118] scanner_include():
filename=test4a.inh, scan_linenr=0
--accepting rule at line 38 ("
")
--accepting rule at line 38 ("
")
--accepting rule at line 38 ("
")
--accepting rule at line 41 ("pi")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x665470-> 5:3.0: IDENT: 0x6654b0->"pi"
Next token is token IDENT (259=IDENT)
         (0x665470-> astree {IDENT(259), 5:3.000, 0x6654b0->"pi",
                     first=(nil), last=(nil), next=(nil)})
zexprsm: test4a.inh: 3: syntax error, unexpected IDENT
Error: popping nterm expr ()
Stack now 0 2
Shifting token error (256=error)
         (0x665470-> astree {IDENT(259), 5:3.000, 0x6654b0->"pi",
                     first=(nil), last=(nil), next=(nil)})
Entering state 4
Next token is token IDENT (259=IDENT)
         (0x665470-> astree {IDENT(259), 5:3.000, 0x6654b0->"pi",
                     first=(nil), last=(nil), next=(nil)})
Error: discarding token IDENT (259=IDENT)
         (0x665470-> astree {IDENT(259), 5:3.000, 0x6654b0->"pi",
                     first=(nil), last=(nil), next=(nil)})
Error: popping token error (256=error)
         (0x665470-> astree {IDENT(259), 5:3.000, 0x6654b0->"pi",
                     first=(nil), last=(nil), next=(nil)})
Stack now 0 2
Shifting token error (256=error)
         (0x665470-> astree {IDENT(259), 5:3.000, 0x6654b0->"pi",
                     first=(nil), last=(nil), next=(nil)})
Entering state 4
Reading a token: --accepting rule at line 43 ("=")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x6654d0-> 5:3.2: '=': 0x665510->"="
Next token is token '=' (61='=')
         (0x6654d0-> astree {'='(61), 5:3.002, 0x665510->"=",
                     first=(nil), last=(nil), next=(nil)})
Error: discarding token '=' (61='=')
         (0x6654d0-> astree {'='(61), 5:3.002, 0x665510->"=",
                     first=(nil), last=(nil), next=(nil)})
Error: popping token error (256=error)
         (0x665470-> astree {IDENT(259), 5:3.000, 0x6654b0->"pi",
                     first=(nil), last=(nil), next=(nil)})
Stack now 0 2
Shifting token error (256=error)
         (0x6654d0-> astree {'='(61), 5:3.002, 0x665510->"=",
                     first=(nil), last=(nil), next=(nil)})
Entering state 4
Reading a token: --accepting rule at line 40 ("3.141592653589793238462643383280")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x665530-> 5:3.3: NUMBER: 0x665570->"3.141592653589793238462643383280"
Next token is token NUMBER (260=NUMBER)
         (0x665530-> astree {NUMBER(260), 5:3.003, 0x665570->"3.141592653589793238462643383280",
                     first=(nil), last=(nil), next=(nil)})
Error: discarding token NUMBER (260=NUMBER)
         (0x665530-> astree {NUMBER(260), 5:3.003, 0x665570->"3.141592653589793238462643383280",
                     first=(nil), last=(nil), next=(nil)})
Error: popping token error (256=error)
         (0x6654d0-> astree {'='(61), 5:3.002, 0x665510->"=",
                     first=(nil), last=(nil), next=(nil)})
Stack now 0 2
Shifting token error (256=error)
         (0x665530-> astree {NUMBER(260), 5:3.003, 0x665570->"3.141592653589793238462643383280",
                     first=(nil), last=(nil), next=(nil)})
Entering state 4
Reading a token: --accepting rule at line 51 (";")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x6655a0-> 5:3.35: ';': 0x6655e0->";"
Next token is token ';' (59=';')
         (0x6655a0-> astree {';'(59), 5:3.035, 0x6655e0->";",
                     first=(nil), last=(nil), next=(nil)})
Shifting token ';' (59=';')
         (0x6655a0-> astree {';'(59), 5:3.035, 0x6655e0->";",
                     first=(nil), last=(nil), next=(nil)})
Entering state 12
Reducing stack by rule 3 (line 43):
   $1 = nterm stmtseq ()
   $2 = token error (256=error)
         (0x665530-> astree {NUMBER(260), 5:3.003, 0x665570->"3.141592653589793238462643383280",
                     first=(nil), last=(nil), next=(nil)})
   $3 = token ';' (59=';')
         (0x6655a0-> astree {';'(59), 5:3.035, 0x6655e0->";",
                     first=(nil), last=(nil), next=(nil)})
DEBUGF(f): astree.c[127] freeast():
free [6655A0]-> 5:3.35: ';': 0x6655e0->";")
-> $$ = nterm stmtseq ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 38 ("
")
--accepting rule at line 41 ("pi")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x6655a0-> 5:4.0: IDENT: 0x6655e0->"pi"
Next token is token IDENT (259=IDENT)
         (0x6655a0-> astree {IDENT(259), 5:4.000, 0x6655e0->"pi",
                     first=(nil), last=(nil), next=(nil)})
Shifting token IDENT (259=IDENT)
         (0x6655a0-> astree {IDENT(259), 5:4.000, 0x6655e0->"pi",
                     first=(nil), last=(nil), next=(nil)})
Entering state 5
Reducing stack by rule 15 (line 57):
   $1 = token IDENT (259=IDENT)
         (0x6655a0-> astree {IDENT(259), 5:4.000, 0x6655e0->"pi",
                     first=(nil), last=(nil), next=(nil)})
-> $$ = nterm expr ()
Stack now 0 2
Entering state 11
Reading a token: --accepting rule at line 51 (";")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x665600-> 5:4.2: ';': 0x665640->";"
Next token is token ';' (59=';')
         (0x665600-> astree {';'(59), 5:4.002, 0x665640->";",
                     first=(nil), last=(nil), next=(nil)})
Shifting token ';' (59=';')
         (0x665600-> astree {';'(59), 5:4.002, 0x665640->";",
                     first=(nil), last=(nil), next=(nil)})
Entering state 22
Reducing stack by rule 2 (line 42):
   $1 = nterm stmtseq ()
   $2 = nterm expr ()
   $3 = token ';' (59=';')
         (0x665600-> astree {';'(59), 5:4.002, 0x665640->";",
                     first=(nil), last=(nil), next=(nil)})
DEBUGF(f): astree.c[127] freeast():
free [665600]-> 5:4.2: ';': 0x665640->";")
DEBUGF(a): astree.c[55] adopt():
0x6611f0 (<<ROOT>>) adopting 0x6655a0 (pi)
-> $$ = nterm stmtseq ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 38 ("
")
--accepting rule at line 36 ("# 3 "test4.in" 2")
DEBUGF(m): lyutils.c[118] scanner_include():
filename=test4.in, scan_linenr=2
--accepting rule at line 38 ("
")
--accepting rule at line 36 ("# 1 "test4b.inh" 1")
DEBUGF(m): lyutils.c[118] scanner_include():
filename=test4b.inh, scan_linenr=0
--accepting rule at line 38 ("
")
--accepting rule at line 38 ("
")
--accepting rule at line 41 ("a")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x665600-> 7:2.0: IDENT: 0x6656c0->"a"
Next token is token IDENT (259=IDENT)
         (0x665600-> astree {IDENT(259), 7:2.000, 0x6656c0->"a",
                     first=(nil), last=(nil), next=(nil)})
Shifting token IDENT (259=IDENT)
         (0x665600-> astree {IDENT(259), 7:2.000, 0x6656c0->"a",
                     first=(nil), last=(nil), next=(nil)})
Entering state 5
Reducing stack by rule 15 (line 57):
   $1 = token IDENT (259=IDENT)
         (0x665600-> astree {IDENT(259), 7:2.000, 0x6656c0->"a",
                     first=(nil), last=(nil), next=(nil)})
-> $$ = nterm expr ()
Stack now 0 2
Entering state 11
Reading a token: --accepting rule at line 43 ("=")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x6656e0-> 7:2.1: '=': 0x665720->"="
Next token is token '=' (61='=')
         (0x6656e0-> astree {'='(61), 7:2.001, 0x665720->"=",
                     first=(nil), last=(nil), next=(nil)})
Shifting token '=' (61='=')
         (0x6656e0-> astree {'='(61), 7:2.001, 0x665720->"=",
                     first=(nil), last=(nil), next=(nil)})
Entering state 16
Reading a token: --accepting rule at line 41 ("pi")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x665740-> 7:2.2: IDENT: 0x665780->"pi"
Next token is token IDENT (259=IDENT)
         (0x665740-> astree {IDENT(259), 7:2.002, 0x665780->"pi",
                     first=(nil), last=(nil), next=(nil)})
Shifting token IDENT (259=IDENT)
         (0x665740-> astree {IDENT(259), 7:2.002, 0x665780->"pi",
                     first=(nil), last=(nil), next=(nil)})
Entering state 5
Reducing stack by rule 15 (line 57):
   $1 = token IDENT (259=IDENT)
         (0x665740-> astree {IDENT(259), 7:2.002, 0x665780->"pi",
                     first=(nil), last=(nil), next=(nil)})
-> $$ = nterm expr ()
Stack now 0 2 11 16
Entering state 24
Reading a token: --accepting rule at line 46 ("*")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x6657a0-> 7:2.4: '*': 0x6657e0->"*"
Next token is token '*' (42='*')
         (0x6657a0-> astree {'*'(42), 7:2.004, 0x6657e0->"*",
                     first=(nil), last=(nil), next=(nil)})
Shifting token '*' (42='*')
         (0x6657a0-> astree {'*'(42), 7:2.004, 0x6657e0->"*",
                     first=(nil), last=(nil), next=(nil)})
Entering state 19
Reading a token: --accepting rule at line 41 ("r")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x665800-> 7:2.5: IDENT: 0x665840->"r"
Next token is token IDENT (259=IDENT)
         (0x665800-> astree {IDENT(259), 7:2.005, 0x665840->"r",
                     first=(nil), last=(nil), next=(nil)})
Shifting token IDENT (259=IDENT)
         (0x665800-> astree {IDENT(259), 7:2.005, 0x665840->"r",
                     first=(nil), last=(nil), next=(nil)})
Entering state 5
Reducing stack by rule 15 (line 57):
   $1 = token IDENT (259=IDENT)
         (0x665800-> astree {IDENT(259), 7:2.005, 0x665840->"r",
                     first=(nil), last=(nil), next=(nil)})
-> $$ = nterm expr ()
Stack now 0 2 11 16 24 19
Entering state 27
Reading a token: --accepting rule at line 48 ("^")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x665860-> 7:2.6: '^': 0x6658a0->"^"
Next token is token '^' (94='^')
         (0x665860-> astree {'^'(94), 7:2.006, 0x6658a0->"^",
                     first=(nil), last=(nil), next=(nil)})
Shifting token '^' (94='^')
         (0x665860-> astree {'^'(94), 7:2.006, 0x6658a0->"^",
                     first=(nil), last=(nil), next=(nil)})
Entering state 21
Reading a token: --accepting rule at line 40 ("2")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x6658c0-> 7:2.7: NUMBER: 0x665900->"2"
Next token is token NUMBER (260=NUMBER)
         (0x6658c0-> astree {NUMBER(260), 7:2.007, 0x665900->"2",
                     first=(nil), last=(nil), next=(nil)})
Shifting token NUMBER (260=NUMBER)
         (0x6658c0-> astree {NUMBER(260), 7:2.007, 0x665900->"2",
                     first=(nil), last=(nil), next=(nil)})
Entering state 6
Reducing stack by rule 16 (line 58):
   $1 = token NUMBER (260=NUMBER)
         (0x6658c0-> astree {NUMBER(260), 7:2.007, 0x665900->"2",
                     first=(nil), last=(nil), next=(nil)})
-> $$ = nterm expr ()
Stack now 0 2 11 16 24 19 27 21
Entering state 29
Reading a token: --accepting rule at line 51 (";")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x665920-> 7:2.8: ';': 0x665960->";"
Next token is token ';' (59=';')
         (0x665920-> astree {';'(59), 7:2.008, 0x665960->";",
                     first=(nil), last=(nil), next=(nil)})
Reducing stack by rule 11 (line 53):
   $1 = nterm expr ()
   $2 = token '^' (94='^')
         (0x665860-> astree {'^'(94), 7:2.006, 0x6658a0->"^",
                     first=(nil), last=(nil), next=(nil)})
   $3 = nterm expr ()
DEBUGF(a): astree.c[55] adopt():
0x665860 (^) adopting 0x665800 (r)
DEBUGF(a): astree.c[55] adopt():
0x665860 (^) adopting 0x6658c0 (2)
-> $$ = nterm expr ()
Stack now 0 2 11 16 24 19
Entering state 27
Next token is token ';' (59=';')
         (0x665920-> astree {';'(59), 7:2.008, 0x665960->";",
                     first=(nil), last=(nil), next=(nil)})
Reducing stack by rule 9 (line 51):
   $1 = nterm expr ()
   $2 = token '*' (42='*')
         (0x6657a0-> astree {'*'(42), 7:2.004, 0x6657e0->"*",
                     first=(nil), last=(nil), next=(nil)})
   $3 = nterm expr ()
DEBUGF(a): astree.c[55] adopt():
0x6657a0 (*) adopting 0x665740 (pi)
DEBUGF(a): astree.c[55] adopt():
0x6657a0 (*) adopting 0x665860 (^)
-> $$ = nterm expr ()
Stack now 0 2 11 16
Entering state 24
Next token is token ';' (59=';')
         (0x665920-> astree {';'(59), 7:2.008, 0x665960->";",
                     first=(nil), last=(nil), next=(nil)})
Reducing stack by rule 6 (line 48):
   $1 = nterm expr ()
   $2 = token '=' (61='=')
         (0x6656e0-> astree {'='(61), 7:2.001, 0x665720->"=",
                     first=(nil), last=(nil), next=(nil)})
   $3 = nterm expr ()
DEBUGF(a): astree.c[55] adopt():
0x6656e0 (=) adopting 0x665600 (a)
DEBUGF(a): astree.c[55] adopt():
0x6656e0 (=) adopting 0x6657a0 (*)
-> $$ = nterm expr ()
Stack now 0 2
Entering state 11
Next token is token ';' (59=';')
         (0x665920-> astree {';'(59), 7:2.008, 0x665960->";",
                     first=(nil), last=(nil), next=(nil)})
Shifting token ';' (59=';')
         (0x665920-> astree {';'(59), 7:2.008, 0x665960->";",
                     first=(nil), last=(nil), next=(nil)})
Entering state 22
Reducing stack by rule 2 (line 42):
   $1 = nterm stmtseq ()
   $2 = nterm expr ()
   $3 = token ';' (59=';')
         (0x665920-> astree {';'(59), 7:2.008, 0x665960->";",
                     first=(nil), last=(nil), next=(nil)})
DEBUGF(f): astree.c[127] freeast():
free [665920]-> 7:2.8: ';': 0x665960->";")
DEBUGF(a): astree.c[55] adopt():
0x6611f0 (<<ROOT>>) adopting 0x6656e0 (=)
-> $$ = nterm stmtseq ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 38 ("
")
--accepting rule at line 40 ("3.141592653589793238462643383280")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x665920-> 7:3.0: NUMBER: 0x665980->"3.141592653589793238462643383280"
Next token is token NUMBER (260=NUMBER)
         (0x665920-> astree {NUMBER(260), 7:3.000, 0x665980->"3.141592653589793238462643383280",
                     first=(nil), last=(nil), next=(nil)})
Shifting token NUMBER (260=NUMBER)
         (0x665920-> astree {NUMBER(260), 7:3.000, 0x665980->"3.141592653589793238462643383280",
                     first=(nil), last=(nil), next=(nil)})
Entering state 6
Reducing stack by rule 16 (line 58):
   $1 = token NUMBER (260=NUMBER)
         (0x665920-> astree {NUMBER(260), 7:3.000, 0x665980->"3.141592653589793238462643383280",
                     first=(nil), last=(nil), next=(nil)})
-> $$ = nterm expr ()
Stack now 0 2
Entering state 11
Reading a token: --accepting rule at line 51 (";")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x6659b0-> 7:3.32: ';': 0x665960->";"
Next token is token ';' (59=';')
         (0x6659b0-> astree {';'(59), 7:3.032, 0x665960->";",
                     first=(nil), last=(nil), next=(nil)})
Shifting token ';' (59=';')
         (0x6659b0-> astree {';'(59), 7:3.032, 0x665960->";",
                     first=(nil), last=(nil), next=(nil)})
Entering state 22
Reducing stack by rule 2 (line 42):
   $1 = nterm stmtseq ()
   $2 = nterm expr ()
   $3 = token ';' (59=';')
         (0x6659b0-> astree {';'(59), 7:3.032, 0x665960->";",
                     first=(nil), last=(nil), next=(nil)})
DEBUGF(f): astree.c[127] freeast():
free [6659B0]-> 7:3.32: ';': 0x665960->";")
DEBUGF(a): astree.c[55] adopt():
0x6611f0 (<<ROOT>>) adopting 0x665920 (3.141592653589793238462643383280)
-> $$ = nterm stmtseq ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 38 ("
")
--accepting rule at line 36 ("# 4 "test4.in" 2")
DEBUGF(m): lyutils.c[118] scanner_include():
filename=test4.in, scan_linenr=3
--accepting rule at line 38 ("
")
--accepting rule at line 40 ("3")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x6659b0-> 8:4.0: NUMBER: 0x665a10->"3"
Next token is token NUMBER (260=NUMBER)
         (0x6659b0-> astree {NUMBER(260), 8:4.000, 0x665a10->"3",
                     first=(nil), last=(nil), next=(nil)})
Shifting token NUMBER (260=NUMBER)
         (0x6659b0-> astree {NUMBER(260), 8:4.000, 0x665a10->"3",
                     first=(nil), last=(nil), next=(nil)})
Entering state 6
Reducing stack by rule 16 (line 58):
   $1 = token NUMBER (260=NUMBER)
         (0x6659b0-> astree {NUMBER(260), 8:4.000, 0x665a10->"3",
                     first=(nil), last=(nil), next=(nil)})
-> $$ = nterm expr ()
Stack now 0 2
Entering state 11
Reading a token: --accepting rule at line 46 ("*")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x665a30-> 8:4.1: '*': 0x665a70->"*"
Next token is token '*' (42='*')
         (0x665a30-> astree {'*'(42), 8:4.001, 0x665a70->"*",
                     first=(nil), last=(nil), next=(nil)})
Shifting token '*' (42='*')
         (0x665a30-> astree {'*'(42), 8:4.001, 0x665a70->"*",
                     first=(nil), last=(nil), next=(nil)})
Entering state 19
Reading a token: --accepting rule at line 40 ("4")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x665a90-> 8:4.2: NUMBER: 0x665ad0->"4"
Next token is token NUMBER (260=NUMBER)
         (0x665a90-> astree {NUMBER(260), 8:4.002, 0x665ad0->"4",
                     first=(nil), last=(nil), next=(nil)})
Shifting token NUMBER (260=NUMBER)
         (0x665a90-> astree {NUMBER(260), 8:4.002, 0x665ad0->"4",
                     first=(nil), last=(nil), next=(nil)})
Entering state 6
Reducing stack by rule 16 (line 58):
   $1 = token NUMBER (260=NUMBER)
         (0x665a90-> astree {NUMBER(260), 8:4.002, 0x665ad0->"4",
                     first=(nil), last=(nil), next=(nil)})
-> $$ = nterm expr ()
Stack now 0 2 11 19
Entering state 27
Reading a token: --accepting rule at line 51 (";")
DEBUGF(f): astree.c[37] new_astree():
malloc (56) = 0x665af0-> 8:4.3: ';': 0x665b30->";"
Next token is token ';' (59=';')
         (0x665af0-> astree {';'(59), 8:4.003, 0x665b30->";",
                     first=(nil), last=(nil), next=(nil)})
Reducing stack by rule 9 (line 51):
   $1 = nterm expr ()
   $2 = token '*' (42='*')
         (0x665a30-> astree {'*'(42), 8:4.001, 0x665a70->"*",
                     first=(nil), last=(nil), next=(nil)})
   $3 = nterm expr ()
DEBUGF(a): astree.c[55] adopt():
0x665a30 (*) adopting 0x6659b0 (3)
DEBUGF(a): astree.c[55] adopt():
0x665a30 (*) adopting 0x665a90 (4)
-> $$ = nterm expr ()
Stack now 0 2
Entering state 11
Next token is token ';' (59=';')
         (0x665af0-> astree {';'(59), 8:4.003, 0x665b30->";",
                     first=(nil), last=(nil), next=(nil)})
Shifting token ';' (59=';')
         (0x665af0-> astree {';'(59), 8:4.003, 0x665b30->";",
                     first=(nil), last=(nil), next=(nil)})
Entering state 22
Reducing stack by rule 2 (line 42):
   $1 = nterm stmtseq ()
   $2 = nterm expr ()
   $3 = token ';' (59=';')
         (0x665af0-> astree {';'(59), 8:4.003, 0x665b30->";",
                     first=(nil), last=(nil), next=(nil)})
DEBUGF(f): astree.c[127] freeast():
free [665AF0]-> 8:4.3: ';': 0x665b30->";")
DEBUGF(a): astree.c[55] adopt():
0x6611f0 (<<ROOT>>) adopting 0x665a30 (*)
-> $$ = nterm stmtseq ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 38 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 39):
   $1 = nterm stmtseq ()
-> $$ = nterm program ()
Stack now 0
Entering state 1
Now at end of input.
Shifting token $end (0=$end)
         (yyvaluep = 0x665af0)
Entering state 3
Stack now 0 1 3
Cleanup: popping token $end (0=$end)
         (yyvaluep = 0x665af0)
Cleanup: popping nterm program ()
DEBUGF(a): main.c[88] main():

<<ROOT>> 0x6611f0-> astree {ROOT(258), 0:0.000, 0x661230->"<<ROOT>>",
            first=0x6655a0, last=0x665a30, next=(nil)}
   pi 0x6655a0-> astree {IDENT(259), 5:4.000, 0x6655e0->"pi",
               first=(nil), last=(nil), next=0x6656e0}
   = 0x6656e0-> astree {'='(61), 7:2.001, 0x665720->"=",
               first=0x665600, last=0x6657a0, next=0x665920}
      a 0x665600-> astree {IDENT(259), 7:2.000, 0x6656c0->"a",
                  first=(nil), last=(nil), next=0x6657a0}
      * 0x6657a0-> astree {'*'(42), 7:2.004, 0x6657e0->"*",
                  first=0x665740, last=0x665860, next=(nil)}
         pi 0x665740-> astree {IDENT(259), 7:2.002, 0x665780->"pi",
                     first=(nil), last=(nil), next=0x665860}
         ^ 0x665860-> astree {'^'(94), 7:2.006, 0x6658a0->"^",
                     first=0x665800, last=0x6658c0, next=(nil)}
            r 0x665800-> astree {IDENT(259), 7:2.005, 0x665840->"r",
                        first=(nil), last=(nil), next=0x6658c0}
            2 0x6658c0-> astree {NUMBER(260), 7:2.007, 0x665900->"2",
                        first=(nil), last=(nil), next=(nil)}
   3.141592653589793238462643383280 0x665920-> astree {NUMBER(260), 7:3.000, 0x665980->"3.141592653589793238462643383280",
               first=(nil), last=(nil), next=0x665a30}
   * 0x665a30-> astree {'*'(42), 8:4.001, 0x665a70->"*",
               first=0x6659b0, last=0x665a90, next=(nil)}
      3 0x6659b0-> astree {NUMBER(260), 8:4.000, 0x665a10->"3",
                  first=(nil), last=(nil), next=0x665a90}
      4 0x665a90-> astree {NUMBER(260), 8:4.002, 0x665ad0->"4",
                  first=(nil), last=(nil), next=(nil)}
DEBUGF(f): astree.c[127] freeast():
free [6655A0]-> 5:4.0: IDENT: 0x6655e0->"pi")
DEBUGF(f): astree.c[127] freeast():
free [665600]-> 7:2.0: IDENT: 0x6656c0->"a")
DEBUGF(f): astree.c[127] freeast():
free [665740]-> 7:2.2: IDENT: 0x665780->"pi")
DEBUGF(f): astree.c[127] freeast():
free [665800]-> 7:2.5: IDENT: 0x665840->"r")
DEBUGF(f): astree.c[127] freeast():
free [6658C0]-> 7:2.7: NUMBER: 0x665900->"2")
DEBUGF(f): astree.c[127] freeast():
free [665860]-> 7:2.6: '^': 0x6658a0->"^")
DEBUGF(f): astree.c[127] freeast():
free [6657A0]-> 7:2.4: '*': 0x6657e0->"*")
DEBUGF(f): astree.c[127] freeast():
free [6656E0]-> 7:2.1: '=': 0x665720->"=")
DEBUGF(f): astree.c[127] freeast():
free [665920]-> 7:3.0: NUMBER: 0x665980->"3.141592653589793238462643383280")
DEBUGF(f): astree.c[127] freeast():
free [6659B0]-> 8:4.0: NUMBER: 0x665a10->"3")
DEBUGF(f): astree.c[127] freeast():
free [665A90]-> 8:4.2: NUMBER: 0x665ad0->"4")
DEBUGF(f): astree.c[127] freeast():
free [665A30]-> 8:4.1: '*': 0x665a70->"*")
DEBUGF(f): astree.c[127] freeast():
free [6611F0]-> 0:0.0: ROOT: 0x661230->"<<ROOT>>")
