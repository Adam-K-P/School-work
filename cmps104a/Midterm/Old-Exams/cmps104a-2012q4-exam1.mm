.so Tmac.mm-etc
.INITR* \n[.F]
.GETST* SCORE-TOTAL-END SCORE-TOTAL-END
.TITLE CMPS-104A "Compiler Design I" Fall\~2012 Test\~#1
.RCS "$Id: cmps104a-2012q4-exam1.mm,v 1.30 2012-10-24 17:41:45-07 - - $"
.DS
.PS
examboxes(3)
.PE
.DE
.P
.ft BI
No books\(;;
No calculator\(;;
No computer\(;;
No email\(;;
No internet\(;;
No notes\(;;
No phone.
Neatness counts\(!!
Do your scratch work elsewhere and enter only your final
answer into the spaces provided.
.ft R
.EQ
delim $$
.EN
.highacc@over-def +> \[cq]
.highacc@over-def +' \[aa]
.ds-nt automata automata \
\[*a]\[*u]\*[+>]\[*t]\[*o]\*[+']\[*m]\[*a]\[*t]\[*a]
.ds-nt automaton automaton \
\[*a]\[*u]\*[+>]\[*t]\[*o]\*[+']\[*m]\[*a]\[*t]\[*o]\[*n]
.ALX 1 . 4
.LI
For each of the following 
.V= flex
regular expressions,
draw an equivalent deterministic finite \*[automaton],
using the
.E= minimum
possible number of states.
Do not show garbage states.
.SCORE-HERE 5
.ALX i ()
.LI
.V= ab*c+
.SP .5i
.LI
.V= ab+|c*d
.SP .5i
.LI
.V= a*b*c*
.SP .5i
.LI
.V= a+b+c+
.SP .5i
.LI
.V= (a|b|c)*
.SP .5i
.LE
.LI
Express each of the following
.V= flex
expressions as
.V= flex
expressions, but your answer may use only the Kleene closure
.=V ( * ),
concatenation,
alternation
.=V ( | ),
and parentheses as metacharacters.
.SCORE-HERE 2
.ALX i ()
.LI
.V= [1-4]+
.SP .5i
.LI
.V= x{2,4}
.SP .5i
.LE
.LI
Use Thompson's construction exactly as in the textbook
to convert the following regular expression into a non-deterministic
finite \*[automaton].
.SCORE-HERE 3
.SP
.V= xy|(cd)*
.SP 10i
.LI
Write two files, 
.V= export.c ,
which declares an external 
.V= "int foo"
variable and exports it,
and
.V= import.c ,
which makes use of the external variable
and declares it as having been created in a different module.
Show only declarations.
.SCORE-HERE 1
.DS
.TS
tab(|); |cew(211.5p)fCB |cefCB |.
_
export.c|import.c
_
.SP 0.75i
_
.TE
.DE
.LI
Draw abstract syntax trees for each of the following C expressions.
.SCORE-HERE 3
.DS
.TS
tab(|); |cew(136p)fCB |cefCB |cefCB |.
_
a + b + c + d|a + b / c + d|a * b / c * d
_
.SP 1.5i
_
.TE
.DE
.LI
Draw the deterministic finite
\*[automaton] for a scanner for the following language.
You may use set notation to label transitions.
Draw an arrow into the initial state,
and label each final state with two circles.
For each final state that returns from the scanner,
write 
.=E `` R ''
next to it,
and for each final state that continues scanning, write
.=E `` C ''.
Ignore invalid or jamming states.
Do not show garbage states.
.SCORE-HERE 3
.ALX i () "" 0
.LI
An identifier starts with a lower case letter and is followed by
any number of digits and lower case letters.
.LI
An integer is one ore more digits.
.LI
An operator is any one of the characters add
.=V ( + ),
subtract
.=V ( - ),
multiply
.=V ( * ),
or divide
.=V ( / ).
.LI
A comment is two slashes
.=V ( // )
followed by all characters up to but not including a newline.
.LI
White space consists of spaces tabs and newlines.
.LE
.SP 2i
.LI
Using the specifications for the language above,
write a grammar using 
.V= flex ,
showing only what goes in the second section (between the
.V= %%
symbols.
Use regular expressions, but no macros.
For semantic actions on each,
write
.V= return
or
.V= continue .
.SCORE-HERE 3
.LE
.SP 10i
.if t .2C
.\".nr Ds 0
Multiple choice.
To the
.E= left
of each question,
write the letter that indicates your answer.
Write
.E= Z
if you don't want to risk a wrong answer.
Wrong answers are worth negative points.
.nr MULTCHOICE_MAX 11
.SCORE-HERE \n[MULTCHOICE_MAX]
.P
.DS
.TS
tab(|); |l |r2w(.4i) |l1 r1 l |rw(.2i) l |.
_
number of||×|1|\&=||$= a$
correct answers
_
number of||×|\[12]|\&=||$= b$
wrong answers
_
number of|\0\0\0|×|0|\&=|0
missing answers
_
column total|\n[MULTCHOICE_MAX]|||||$= c$
$ c = max ( a - b , 0 ) $
_
.TE
.DE
.ALX 1 . 4
.CHOOSE-BEGIN
What external variable should be set to make
.V= yylex
produce debug output\(??
.CHOOSE4V yy_debug yy_flex_debug yy_set_interactive yy_stack_print
.CHOOSE-END
.CHOOSE-BEGIN
The
.V= flex
expression
.V= a|bc*
means\(::
.CHOOSE4V (a|(bc))* (a|b)(c*) a|((bc)*) a|(b(c*))
.CHOOSE-END
.CHOOSE-BEGIN
The
.V= bison
generated parser makes use of a deterministic finite \*[automaton],
plus what data structure\(??
.CHOOSE4 hash queue stack tree
.CHOOSE-END
.CHOOSE-BEGIN
The machine generated by
.V= flex
comes from a language of what type in the Chomsky hierarchy\(??
.CHOOSE4 type\~0 type\~1 type\~2 type\~3
.CHOOSE-END
.CHOOSE-BEGIN
In your compiler project, 
how is a node pointed at by a hash table array element
allocated\(??
.CHOOSE4V "malloc (sizeof (struct node *));" \
"malloc (sizeof (struct node));" "malloc (struct node);" \
"new node();"
.CHOOSE-END
.CHOOSE-BEGIN
A deterministic finite \*[automaton] with $ O ( s ) $ states
will read an input string of length $ O ( n ) $ in how much time\(??
.CHOOSE
$ O ( log n times s ) $
.CHOOSE
$ O ( n ) $
.CHOOSE
$ O ( s ) $
.CHOOSE
$ O ( s times n ) $
.CHOOSE-END
.CHOOSE-BEGIN
A hash table that uses collision resolution by linear probing
should be doubled when the loading factor exceeds what\(??
(Choose the best of these answers.)
.CHOOSE4 0.02 0.30 0.90 1.20
.CHOOSE-END
.CHOOSE-BEGIN
Which
.V= flex
semantic action is clearly incorrect\(??
.CHOOSE4V return\~"*"; return\~'*'; return\~42; return\~STAR;
.CHOOSE-END
.CHOOSE-BEGIN
What kind of grammar does
.V= bison
use\(??
.CHOOSE4 context-free context-sensitive regular unrestricted
.CHOOSE-END
.CHOOSE-BEGIN
For a grammar
$G = \[la] V sub N , V sub T , P , S \[ra] $,
the left hand side of a rule in the set of productions $P$
consists of one symbol from the set\(::
.CHOOSE
$ V sub N $
.CHOOSE
$ V sub N inter V sub T $
.CHOOSE
$ V sub N union V sub T $
.CHOOSE
$ V sub T $
.CHOOSE-END
.CHOOSE-BEGIN
Comments in
.V= oc
are stripped off by the\(::
.CHOOSE4 parser preprocessor scanner string\~table
.CHOOSE-END
.LE
.if dPSPIC \{
.   sp -1.5v
.   DS
.   PSPIC jpgs/antikythera-0140x125.ps 3i
.   DE
.\} 
.br 
.S -2.2 -3.2
The Antikythera mechanism,
built ca.\~150\[en]100 \s[-2]BCE\s[+2],
is the oldest known complex scientific calculator,
and is sometimes called the first known analog computer,
with operational instructions written in Greek.
.=V [ http://en.wikipedia.org/wiki/Antikythera_mechanism ]
.br 
.S +2.2 +3.2
.FINISH
