# 1 "oc-programs/20-fib-array.oc"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "oc-programs/20-fib-array.oc"
# 23 "oc-programs/oclib.oh"
   8   2.001 263 TOK_KW_VOID      (void)
   8   2.006 259 TOK_IDENT        (__assert_fail)
   8   2.020  40 '('              (()
   8   2.021 267 TOK_KW_STRING    (string)
   8   2.028 259 TOK_IDENT        (expr)
   8   2.032  44 ','              (,)
   8   2.034 267 TOK_KW_STRING    (string)
   8   2.041 259 TOK_IDENT        (file)
   8   2.045  44 ','              (,)
   8   2.047 266 TOK_KW_INT       (int)
   8   2.051 259 TOK_IDENT        (line)
   8   2.055  41 ')'              ())
   8   2.056  59 ';'              (;)
   8   3.001 263 TOK_KW_VOID      (void)
   8   3.006 259 TOK_IDENT        (putb)
   8   3.011  40 '('              (()
   8   3.012 264 TOK_KW_BOOL      (bool)
   8   3.017 259 TOK_IDENT        (b)
   8   3.018  41 ')'              ())
   8   3.019  59 ';'              (;)
   8   4.001 263 TOK_KW_VOID      (void)
   8   4.006 259 TOK_IDENT        (putc)
   8   4.011  40 '('              (()
   8   4.012 265 TOK_KW_CHAR      (char)
   8   4.017 259 TOK_IDENT        (c)
   8   4.018  41 ')'              ())
   8   4.019  59 ';'              (;)
   8   5.001 263 TOK_KW_VOID      (void)
   8   5.006 259 TOK_IDENT        (puti)
   8   5.011  40 '('              (()
   8   5.012 266 TOK_KW_INT       (int)
   8   5.016 259 TOK_IDENT        (i)
   8   5.017  41 ')'              ())
   8   5.018  59 ';'              (;)
   8   6.001 263 TOK_KW_VOID      (void)
   8   6.006 259 TOK_IDENT        (puts)
   8   6.011  40 '('              (()
   8   6.012 267 TOK_KW_STRING    (string)
   8   6.019 259 TOK_IDENT        (s)
   8   6.020  41 ')'              ())
   8   6.021  59 ';'              (;)
   8   7.001 263 TOK_KW_VOID      (void)
   8   7.006 259 TOK_IDENT        (endl)
   8   7.011  40 '('              (()
   8   7.012  41 ')'              ())
   8   7.013  59 ';'              (;)
   8   8.001 266 TOK_KW_INT       (int)
   8   8.005 259 TOK_IDENT        (getc)
   8   8.010  40 '('              (()
   8   8.011  41 ')'              ())
   8   8.012  59 ';'              (;)
   8   9.001 267 TOK_KW_STRING    (string)
   8   9.008 259 TOK_IDENT        (getw)
   8   9.013  40 '('              (()
   8   9.014  41 ')'              ())
   8   9.015  59 ';'              (;)
   8  10.001 267 TOK_KW_STRING    (string)
   8  10.008 259 TOK_IDENT        (getln)
   8  10.014  40 '('              (()
   8  10.015  41 ')'              ())
   8  10.016  59 ';'              (;)
   8  11.001 267 TOK_KW_STRING    (string)
   8  11.007  91 '['              ([)
   8  11.008  93 ']'              (])
   8  11.010 259 TOK_IDENT        (getargv)
   8  11.018  40 '('              (()
   8  11.019  41 ')'              ())
   8  11.020  59 ';'              (;)
   8  12.001 263 TOK_KW_VOID      (void)
   8  12.006 259 TOK_IDENT        (exit)
   8  12.011  40 '('              (()
   8  12.012 266 TOK_KW_INT       (int)
   8  12.016 259 TOK_IDENT        (status)
   8  12.022  41 ')'              ())
   8  12.023  59 ';'              (;)
   9   9.001 266 TOK_KW_INT       (int)
   9   9.004  91 '['              ([)
   9   9.005  93 ']'              (])
   9   9.007 259 TOK_IDENT        (fibonacci)
   9   9.017  61 '='              (=)
   9   9.019 278 TOK_KW_NEW       (new)
   9   9.023 266 TOK_KW_INT       (int)
   9   9.026  91 '['              ([)
   9   9.027 260 NUMBER           (30)
   9   9.029  93 ']'              (])
   9   9.030  59 ';'              (;)
   9  11.001 259 TOK_IDENT        (fibonacci)
   9  11.010  91 '['              ([)
   9  11.011 260 NUMBER           (0)
   9  11.012  93 ']'              (])
   9  11.014  61 '='              (=)
   9  11.016 260 NUMBER           (0)
   9  11.017  59 ';'              (;)
   9  12.001 259 TOK_IDENT        (fibonacci)
   9  12.010  91 '['              ([)
   9  12.011 260 NUMBER           (1)
   9  12.012  93 ']'              (])
   9  12.014  61 '='              (=)
   9  12.016 260 NUMBER           (1)
   9  12.017  59 ';'              (;)
   9  14.001 266 TOK_KW_INT       (int)
   9  14.005 259 TOK_IDENT        (index)
   9  14.011  61 '='              (=)
   9  14.013 260 NUMBER           (2)
   9  14.014  59 ';'              (;)
   9  15.001 271 TOK_KW_WHILE     (while)
   9  15.007  40 '('              (()
   9  15.008 259 TOK_IDENT        (index)
   9  15.014  60 '<'              (<)
   9  15.016 260 NUMBER           (30)
   9  15.018  41 ')'              ())
   9  15.020 123 '{'              ({)
   9  16.004 259 TOK_IDENT        (fibonacci)
   9  16.013  91 '['              ([)
   9  16.014 259 TOK_IDENT        (index)
   9  16.019  93 ']'              (])
   9  16.021  61 '='              (=)
   9  16.023 259 TOK_IDENT        (fibonacci)
   9  16.032  91 '['              ([)
   9  16.033 259 TOK_IDENT        (index)
   9  16.039  45 '-'              (-)
   9  16.041 260 NUMBER           (1)
   9  16.042  93 ']'              (])
   9  16.044  43 '+'              (+)
   9  16.046 259 TOK_IDENT        (fibonacci)
   9  16.055  91 '['              ([)
   9  16.056 259 TOK_IDENT        (index)
   9  16.062  45 '-'              (-)
   9  16.064 260 NUMBER           (2)
   9  16.065  93 ']'              (])
   9  16.066  59 ';'              (;)
   9  17.004 259 TOK_IDENT        (index)
   9  17.010  61 '='              (=)
   9  17.012 259 TOK_IDENT        (index)
   9  17.018  43 '+'              (+)
   9  17.020 260 NUMBER           (1)
   9  17.021  59 ';'              (;)
   9  18.001 125 '}'              (})
   9  20.001 259 TOK_IDENT        (index)
   9  20.007  61 '='              (=)
   9  20.009 260 NUMBER           (0)
   9  20.010  59 ';'              (;)
   9  21.001 259 TOK_IDENT        (puts)
   9  21.006  40 '('              (()
   9  21.007 279 STRING_LIT       ("Numeri di figlio Bonacci\n")
   9  21.035  41 ')'              ())
   9  21.036  59 ';'              (;)
   9  22.001 271 TOK_KW_WHILE     (while)
   9  22.007  40 '('              (()
   9  22.008 259 TOK_IDENT        (index)
   9  22.014  60 '<'              (<)
   9  22.016 260 NUMBER           (30)
   9  22.018  41 ')'              ())
   9  22.020 123 '{'              ({)
   9  23.004 259 TOK_IDENT        (puts)
   9  23.009  40 '('              (()
   9  23.010 279 STRING_LIT       ("fibonacci[")
   9  23.022  41 ')'              ())
   9  23.023  59 ';'              (;)
   9  24.004 259 TOK_IDENT        (puti)
   9  24.009  40 '('              (()
   9  24.010 259 TOK_IDENT        (index)
   9  24.015  41 ')'              ())
   9  24.016  59 ';'              (;)
   9  25.004 259 TOK_IDENT        (puts)
   9  25.009  40 '('              (()
   9  25.010 279 STRING_LIT       (" = ")
   9  25.015  41 ')'              ())
   9  25.016  59 ';'              (;)
   9  26.004 259 TOK_IDENT        (puti)
   9  26.009  40 '('              (()
   9  26.010 259 TOK_IDENT        (fibonacci)
   9  26.019  91 '['              ([)
   9  26.020 259 TOK_IDENT        (index)
   9  26.025  93 ']'              (])
   9  26.026  41 ')'              ())
   9  26.027  59 ';'              (;)
   9  27.004 259 TOK_IDENT        (endl)
   9  27.009  40 '('              (()
   9  27.010  41 ')'              ())
   9  27.011  59 ';'              (;)
   9  28.004 259 TOK_IDENT        (index)
   9  28.010  61 '='              (=)
   9  28.012 259 TOK_IDENT        (index)
   9  28.018  43 '+'              (+)
   9  28.020 260 NUMBER           (1)
   9  28.021  59 ';'              (;)
   9  29.001 125 '}'              (})
