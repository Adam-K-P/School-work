Terminals unused in grammar

   ROOT
   RESERVED
   FIELD
   TYPEID
   DECLID
   TOK_FUNCTION
   TOK_RETURNVOID
   TOK_PROTOTYPE
   TOK_VARDECL
   TOK_ARRAY
   TOK_CALL
   TOK_NEWARRAY
   TOK_NEWSTRING
   TOK_BLOCK
   TOK_PARAM


State 5 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program structd
    3        | program statmnt
    4        | program fnction
    5        | program DIRECTIVE
    6        | program error '}'
    7        | program error ';'
    8        | %empty

    9 structd: TOK_KW_STRUCT TOK_IDENT '{' fieldsq '}'
   10        | TOK_KW_STRUCT TOK_IDENT '{' '}'

   11 fieldsq: fieldsq fieldec
   12        | fieldec

   13 fieldec: basetype TOK_IDENT ';'
   14        | basetype '[' ']' TOK_IDENT ';'

   15 fnction: identdc '(' identsq ')' block
   16        | identdc '(' ')' block

   17 block: '{' stmtseq '}'
   18      | '{' '}'
   19      | ';'

   20 stmtseq: stmtseq statmnt
   21        | statmnt

   22 statmnt: expr ';'
   23        | vardecl
   24        | ifelse
   25        | while
   26        | return
   27        | block

   28 while: TOK_KW_WHILE '(' expr ')' statmnt

   29 ifelse: TOK_KW_IF '(' expr ')' statmnt TOK_KW_ELSE statmnt
   30       | TOK_KW_IF '(' expr ')' statmnt

   31 expr: expr BOOL_EQ expr
   32     | expr BOOL_LESS_EQ expr
   33     | expr BOOL_GRT_EQ expr
   34     | expr BOOL_NOT_EQ expr
   35     | TOK_KW_CHR expr
   36     | TOK_KW_ORD expr
   37     | '!' expr
   38     | expr '=' expr
   39     | expr '+' expr
   40     | expr '-' expr
   41     | expr '*' expr
   42     | expr '/' expr
   43     | expr '^' expr
   44     | expr '<' expr
   45     | expr '>' expr
   46     | '+' expr
   47     | '-' expr
   48     | '(' expr ')'
   49     | '{' expr '}'
   50     | call
   51     | const
   52     | variabl
   53     | alloc

   54 return: TOK_KW_RETURN ';'
   55       | TOK_KW_RETURN expr ';'

   56 alloc: TOK_KW_NEW TOK_IDENT '(' ')'
   57      | TOK_KW_NEW TOK_KW_STRING '(' expr ')'
   58      | TOK_KW_NEW basetype '[' expr ']'

   59 const: NUMBER
   60      | CHAR_LIT
   61      | STRING_LIT
   62      | TOK_KW_FALSE
   63      | TOK_KW_TRUE
   64      | TOK_KW_NULL

   65 call: TOK_IDENT '(' ')'
   66     | TOK_IDENT '(' exprseq ')'

   67 variabl: TOK_IDENT
   68        | expr '[' expr ']'
   69        | expr '.' TOK_IDENT

   70 exprseq: exprhlp
   71        | expr exprhlp
   72        | expr

   73 exprhlp: ',' exprseq

   74 identsq: isqhelp
   75        | identdc isqhelp
   76        | identdc

   77 isqhelp: ',' identsq

   78 vardecl: identdc '=' expr ';'

   79 identdc: basetype '[' ']' TOK_IDENT
   80        | basetype TOK_IDENT

   81 basetype: TOK_KW_VOID
   82         | TOK_KW_BOOL
   83         | TOK_KW_CHAR
   84         | TOK_KW_INT
   85         | TOK_KW_STRING
   86         | TOK_IDENT


Terminals, with rules where they appear

$end (0) 0
'!' (33) 37
'(' (40) 15 16 28 29 30 48 56 57 65 66
')' (41) 15 16 28 29 30 48 56 57 65 66
'*' (42) 41
'+' (43) 39 46
',' (44) 73 77
'-' (45) 40 47
'.' (46) 69
'/' (47) 42
';' (59) 7 13 14 19 22 54 55 78
'<' (60) 44
'=' (61) 38 78
'>' (62) 45
'[' (91) 14 58 68 79
']' (93) 14 58 68 79
'^' (94) 43
'{' (123) 9 10 17 18 49
'}' (125) 6 9 10 17 18 49
error (256) 6 7
ROOT (258)
TOK_IDENT (259) 9 10 13 14 56 65 66 67 69 79 80 86
NUMBER (260) 59
DIRECTIVE (261) 5
RESERVED (262)
TOK_KW_VOID (263) 81
TOK_KW_BOOL (264) 82
TOK_KW_CHAR (265) 83
TOK_KW_INT (266) 84
TOK_KW_STRING (267) 57 85
TOK_KW_STRUCT (268) 9 10
TOK_KW_IF (269) 29 30
TOK_KW_ELSE (270) 29
TOK_KW_WHILE (271) 28
TOK_KW_RETURN (272) 54 55
TOK_KW_FALSE (273) 62
TOK_KW_TRUE (274) 63
TOK_KW_NULL (275) 64
TOK_KW_ORD (276) 36
TOK_KW_CHR (277) 35
TOK_KW_NEW (278) 56 57 58
STRING_LIT (279) 61
CHAR_LIT (280) 60
BOOL_EQ (281) 31
BOOL_LESS_EQ (282) 32
BOOL_GRT_EQ (283) 33
BOOL_NOT_EQ (284) 34
FIELD (285)
TYPEID (286)
DECLID (287)
TOK_FUNCTION (288)
TOK_RETURNVOID (289)
TOK_PROTOTYPE (290)
TOK_VARDECL (291)
TOK_ARRAY (292)
TOK_CALL (293)
TOK_NEWARRAY (294)
TOK_NEWSTRING (295)
TOK_BLOCK (296)
TOK_PARAM (297)
POS (298)
NEG (299)


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
start (64)
    on left: 1, on right: 0
program (65)
    on left: 2 3 4 5 6 7 8, on right: 1 2 3 4 5 6 7
structd (66)
    on left: 9 10, on right: 2
fieldsq (67)
    on left: 11 12, on right: 9 11
fieldec (68)
    on left: 13 14, on right: 11 12
fnction (69)
    on left: 15 16, on right: 4
block (70)
    on left: 17 18 19, on right: 15 16 27
stmtseq (71)
    on left: 20 21, on right: 17 20
statmnt (72)
    on left: 22 23 24 25 26 27, on right: 3 20 21 28 29 30
while (73)
    on left: 28, on right: 25
ifelse (74)
    on left: 29 30, on right: 24
expr (75)
    on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
    49 50 51 52 53, on right: 22 28 29 30 31 32 33 34 35 36 37 38 39
    40 41 42 43 44 45 46 47 48 49 55 57 58 68 69 71 72 78
return (76)
    on left: 54 55, on right: 26
alloc (77)
    on left: 56 57 58, on right: 53
const (78)
    on left: 59 60 61 62 63 64, on right: 51
call (79)
    on left: 65 66, on right: 50
variabl (80)
    on left: 67 68 69, on right: 52
exprseq (81)
    on left: 70 71 72, on right: 66 73
exprhlp (82)
    on left: 73, on right: 70 71
identsq (83)
    on left: 74 75 76, on right: 15 77
isqhelp (84)
    on left: 77, on right: 74 75
vardecl (85)
    on left: 78, on right: 23
identdc (86)
    on left: 79 80, on right: 15 16 75 76 78
basetype (87)
    on left: 81 82 83 84 85 86, on right: 13 14 58 79 80


State 0

    0 $accept: . start $end

    $default  reduce using rule 8 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    2 program: program . structd
    3        | program . statmnt
    4        | program . fnction
    5        | program . DIRECTIVE
    6        | program . error '}'
    7        | program . error ';'

    error          shift, and go to state 4
    TOK_IDENT      shift, and go to state 5
    NUMBER         shift, and go to state 6
    DIRECTIVE      shift, and go to state 7
    TOK_KW_VOID    shift, and go to state 8
    TOK_KW_BOOL    shift, and go to state 9
    TOK_KW_CHAR    shift, and go to state 10
    TOK_KW_INT     shift, and go to state 11
    TOK_KW_STRING  shift, and go to state 12
    TOK_KW_STRUCT  shift, and go to state 13
    TOK_KW_IF      shift, and go to state 14
    TOK_KW_WHILE   shift, and go to state 15
    TOK_KW_RETURN  shift, and go to state 16
    TOK_KW_FALSE   shift, and go to state 17
    TOK_KW_TRUE    shift, and go to state 18
    TOK_KW_NULL    shift, and go to state 19
    TOK_KW_ORD     shift, and go to state 20
    TOK_KW_CHR     shift, and go to state 21
    TOK_KW_NEW     shift, and go to state 22
    STRING_LIT     shift, and go to state 23
    CHAR_LIT       shift, and go to state 24
    '{'            shift, and go to state 25
    '+'            shift, and go to state 26
    '-'            shift, and go to state 27
    '!'            shift, and go to state 28
    '('            shift, and go to state 29
    ';'            shift, and go to state 30

    $end  reduce using rule 1 (start)

    structd   go to state 31
    fnction   go to state 32
    block     go to state 33
    statmnt   go to state 34
    while     go to state 35
    ifelse    go to state 36
    expr      go to state 37
    return    go to state 38
    alloc     go to state 39
    const     go to state 40
    call      go to state 41
    variabl   go to state 42
    vardecl   go to state 43
    identdc   go to state 44
    basetype  go to state 45


State 3

    0 $accept: start $end .

    $default  accept


State 4

    6 program: program error . '}'
    7        | program error . ';'

    '}'  shift, and go to state 46
    ';'  shift, and go to state 47


State 5

   65 call: TOK_IDENT . '(' ')'
   66     | TOK_IDENT . '(' exprseq ')'
   67 variabl: TOK_IDENT .
   86 basetype: TOK_IDENT .

    '('  shift, and go to state 48

    TOK_IDENT  reduce using rule 86 (basetype)
    '['        reduce using rule 67 (variabl)
    '['        [reduce using rule 86 (basetype)]
    $default   reduce using rule 67 (variabl)


State 6

   59 const: NUMBER .

    $default  reduce using rule 59 (const)


State 7

    5 program: program DIRECTIVE .

    $default  reduce using rule 5 (program)


State 8

   81 basetype: TOK_KW_VOID .

    $default  reduce using rule 81 (basetype)


State 9

   82 basetype: TOK_KW_BOOL .

    $default  reduce using rule 82 (basetype)


State 10

   83 basetype: TOK_KW_CHAR .

    $default  reduce using rule 83 (basetype)


State 11

   84 basetype: TOK_KW_INT .

    $default  reduce using rule 84 (basetype)


State 12

   85 basetype: TOK_KW_STRING .

    $default  reduce using rule 85 (basetype)


State 13

    9 structd: TOK_KW_STRUCT . TOK_IDENT '{' fieldsq '}'
   10        | TOK_KW_STRUCT . TOK_IDENT '{' '}'

    TOK_IDENT  shift, and go to state 49


State 14

   29 ifelse: TOK_KW_IF . '(' expr ')' statmnt TOK_KW_ELSE statmnt
   30       | TOK_KW_IF . '(' expr ')' statmnt

    '('  shift, and go to state 50


State 15

   28 while: TOK_KW_WHILE . '(' expr ')' statmnt

    '('  shift, and go to state 51


State 16

   54 return: TOK_KW_RETURN . ';'
   55       | TOK_KW_RETURN . expr ';'

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29
    ';'           shift, and go to state 54

    expr     go to state 55
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 17

   62 const: TOK_KW_FALSE .

    $default  reduce using rule 62 (const)


State 18

   63 const: TOK_KW_TRUE .

    $default  reduce using rule 63 (const)


State 19

   64 const: TOK_KW_NULL .

    $default  reduce using rule 64 (const)


State 20

   36 expr: TOK_KW_ORD . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 56
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 21

   35 expr: TOK_KW_CHR . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 57
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 22

   56 alloc: TOK_KW_NEW . TOK_IDENT '(' ')'
   57      | TOK_KW_NEW . TOK_KW_STRING '(' expr ')'
   58      | TOK_KW_NEW . basetype '[' expr ']'

    TOK_IDENT      shift, and go to state 58
    TOK_KW_VOID    shift, and go to state 8
    TOK_KW_BOOL    shift, and go to state 9
    TOK_KW_CHAR    shift, and go to state 10
    TOK_KW_INT     shift, and go to state 11
    TOK_KW_STRING  shift, and go to state 59

    basetype  go to state 60


State 23

   61 const: STRING_LIT .

    $default  reduce using rule 61 (const)


State 24

   60 const: CHAR_LIT .

    $default  reduce using rule 60 (const)


State 25

   17 block: '{' . stmtseq '}'
   18      | '{' . '}'
   49 expr: '{' . expr '}'

    TOK_IDENT      shift, and go to state 5
    NUMBER         shift, and go to state 6
    TOK_KW_VOID    shift, and go to state 8
    TOK_KW_BOOL    shift, and go to state 9
    TOK_KW_CHAR    shift, and go to state 10
    TOK_KW_INT     shift, and go to state 11
    TOK_KW_STRING  shift, and go to state 12
    TOK_KW_IF      shift, and go to state 14
    TOK_KW_WHILE   shift, and go to state 15
    TOK_KW_RETURN  shift, and go to state 16
    TOK_KW_FALSE   shift, and go to state 17
    TOK_KW_TRUE    shift, and go to state 18
    TOK_KW_NULL    shift, and go to state 19
    TOK_KW_ORD     shift, and go to state 20
    TOK_KW_CHR     shift, and go to state 21
    TOK_KW_NEW     shift, and go to state 22
    STRING_LIT     shift, and go to state 23
    CHAR_LIT       shift, and go to state 24
    '}'            shift, and go to state 61
    '{'            shift, and go to state 25
    '+'            shift, and go to state 26
    '-'            shift, and go to state 27
    '!'            shift, and go to state 28
    '('            shift, and go to state 29
    ';'            shift, and go to state 30

    block     go to state 33
    stmtseq   go to state 62
    statmnt   go to state 63
    while     go to state 35
    ifelse    go to state 36
    expr      go to state 64
    return    go to state 38
    alloc     go to state 39
    const     go to state 40
    call      go to state 41
    variabl   go to state 42
    vardecl   go to state 43
    identdc   go to state 65
    basetype  go to state 45


State 26

   46 expr: '+' . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 66
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 27

   47 expr: '-' . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 67
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 28

   37 expr: '!' . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 68
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 29

   48 expr: '(' . expr ')'

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 69
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 30

   19 block: ';' .

    $default  reduce using rule 19 (block)


State 31

    2 program: program structd .

    $default  reduce using rule 2 (program)


State 32

    4 program: program fnction .

    $default  reduce using rule 4 (program)


State 33

   27 statmnt: block .

    $default  reduce using rule 27 (statmnt)


State 34

    3 program: program statmnt .

    $default  reduce using rule 3 (program)


State 35

   25 statmnt: while .

    $default  reduce using rule 25 (statmnt)


State 36

   24 statmnt: ifelse .

    $default  reduce using rule 24 (statmnt)


State 37

   22 statmnt: expr . ';'
   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['           shift, and go to state 70
    BOOL_EQ       shift, and go to state 71
    BOOL_LESS_EQ  shift, and go to state 72
    BOOL_GRT_EQ   shift, and go to state 73
    BOOL_NOT_EQ   shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '^'           shift, and go to state 80
    '<'           shift, and go to state 81
    '>'           shift, and go to state 82
    '.'           shift, and go to state 83
    ';'           shift, and go to state 84


State 38

   26 statmnt: return .

    $default  reduce using rule 26 (statmnt)


State 39

   53 expr: alloc .

    $default  reduce using rule 53 (expr)


State 40

   51 expr: const .

    $default  reduce using rule 51 (expr)


State 41

   50 expr: call .

    $default  reduce using rule 50 (expr)


State 42

   52 expr: variabl .

    $default  reduce using rule 52 (expr)


State 43

   23 statmnt: vardecl .

    $default  reduce using rule 23 (statmnt)


State 44

   15 fnction: identdc . '(' identsq ')' block
   16        | identdc . '(' ')' block
   78 vardecl: identdc . '=' expr ';'

    '='  shift, and go to state 85
    '('  shift, and go to state 86


State 45

   79 identdc: basetype . '[' ']' TOK_IDENT
   80        | basetype . TOK_IDENT

    TOK_IDENT  shift, and go to state 87
    '['        shift, and go to state 88


State 46

    6 program: program error '}' .

    $default  reduce using rule 6 (program)


State 47

    7 program: program error ';' .

    $default  reduce using rule 7 (program)


State 48

   65 call: TOK_IDENT '(' . ')'
   66     | TOK_IDENT '(' . exprseq ')'

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29
    ')'           shift, and go to state 89
    ','           shift, and go to state 90

    expr     go to state 91
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42
    exprseq  go to state 92
    exprhlp  go to state 93


State 49

    9 structd: TOK_KW_STRUCT TOK_IDENT . '{' fieldsq '}'
   10        | TOK_KW_STRUCT TOK_IDENT . '{' '}'

    '{'  shift, and go to state 94


State 50

   29 ifelse: TOK_KW_IF '(' . expr ')' statmnt TOK_KW_ELSE statmnt
   30       | TOK_KW_IF '(' . expr ')' statmnt

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 95
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 51

   28 while: TOK_KW_WHILE '(' . expr ')' statmnt

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 96
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 52

   65 call: TOK_IDENT . '(' ')'
   66     | TOK_IDENT . '(' exprseq ')'
   67 variabl: TOK_IDENT .

    '('  shift, and go to state 48

    $default  reduce using rule 67 (variabl)


State 53

   49 expr: '{' . expr '}'

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 97
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 54

   54 return: TOK_KW_RETURN ';' .

    $default  reduce using rule 54 (return)


State 55

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   55 return: TOK_KW_RETURN expr . ';'
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['           shift, and go to state 70
    BOOL_EQ       shift, and go to state 71
    BOOL_LESS_EQ  shift, and go to state 72
    BOOL_GRT_EQ   shift, and go to state 73
    BOOL_NOT_EQ   shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '^'           shift, and go to state 80
    '<'           shift, and go to state 81
    '>'           shift, and go to state 82
    '.'           shift, and go to state 83
    ';'           shift, and go to state 98


State 56

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   36     | TOK_KW_ORD expr .
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '.'  shift, and go to state 83

    $default  reduce using rule 36 (expr)


State 57

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   35     | TOK_KW_CHR expr .
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '.'  shift, and go to state 83

    $default  reduce using rule 35 (expr)


State 58

   56 alloc: TOK_KW_NEW TOK_IDENT . '(' ')'
   86 basetype: TOK_IDENT .

    '('  shift, and go to state 99

    $default  reduce using rule 86 (basetype)


State 59

   57 alloc: TOK_KW_NEW TOK_KW_STRING . '(' expr ')'
   85 basetype: TOK_KW_STRING .

    '('  shift, and go to state 100

    $default  reduce using rule 85 (basetype)


State 60

   58 alloc: TOK_KW_NEW basetype . '[' expr ']'

    '['  shift, and go to state 101


State 61

   18 block: '{' '}' .

    $default  reduce using rule 18 (block)


State 62

   17 block: '{' stmtseq . '}'
   20 stmtseq: stmtseq . statmnt

    TOK_IDENT      shift, and go to state 5
    NUMBER         shift, and go to state 6
    TOK_KW_VOID    shift, and go to state 8
    TOK_KW_BOOL    shift, and go to state 9
    TOK_KW_CHAR    shift, and go to state 10
    TOK_KW_INT     shift, and go to state 11
    TOK_KW_STRING  shift, and go to state 12
    TOK_KW_IF      shift, and go to state 14
    TOK_KW_WHILE   shift, and go to state 15
    TOK_KW_RETURN  shift, and go to state 16
    TOK_KW_FALSE   shift, and go to state 17
    TOK_KW_TRUE    shift, and go to state 18
    TOK_KW_NULL    shift, and go to state 19
    TOK_KW_ORD     shift, and go to state 20
    TOK_KW_CHR     shift, and go to state 21
    TOK_KW_NEW     shift, and go to state 22
    STRING_LIT     shift, and go to state 23
    CHAR_LIT       shift, and go to state 24
    '}'            shift, and go to state 102
    '{'            shift, and go to state 25
    '+'            shift, and go to state 26
    '-'            shift, and go to state 27
    '!'            shift, and go to state 28
    '('            shift, and go to state 29
    ';'            shift, and go to state 30

    block     go to state 33
    statmnt   go to state 103
    while     go to state 35
    ifelse    go to state 36
    expr      go to state 37
    return    go to state 38
    alloc     go to state 39
    const     go to state 40
    call      go to state 41
    variabl   go to state 42
    vardecl   go to state 43
    identdc   go to state 65
    basetype  go to state 45


State 63

   21 stmtseq: statmnt .

    $default  reduce using rule 21 (stmtseq)


State 64

   22 statmnt: expr . ';'
   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   49     | '{' expr . '}'
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '}'           shift, and go to state 104
    '['           shift, and go to state 70
    BOOL_EQ       shift, and go to state 71
    BOOL_LESS_EQ  shift, and go to state 72
    BOOL_GRT_EQ   shift, and go to state 73
    BOOL_NOT_EQ   shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '^'           shift, and go to state 80
    '<'           shift, and go to state 81
    '>'           shift, and go to state 82
    '.'           shift, and go to state 83
    ';'           shift, and go to state 84


State 65

   78 vardecl: identdc . '=' expr ';'

    '='  shift, and go to state 85


State 66

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | '+' expr .
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82
    '.'  shift, and go to state 83

    $default  reduce using rule 46 (expr)


State 67

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   47     | '-' expr .
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82
    '.'  shift, and go to state 83

    $default  reduce using rule 47 (expr)


State 68

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   37     | '!' expr .
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '.'  shift, and go to state 83

    $default  reduce using rule 37 (expr)


State 69

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   48     | '(' expr . ')'
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['           shift, and go to state 70
    BOOL_EQ       shift, and go to state 71
    BOOL_LESS_EQ  shift, and go to state 72
    BOOL_GRT_EQ   shift, and go to state 73
    BOOL_NOT_EQ   shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '^'           shift, and go to state 80
    '<'           shift, and go to state 81
    '>'           shift, and go to state 82
    '.'           shift, and go to state 83
    ')'           shift, and go to state 105


State 70

   68 variabl: expr '[' . expr ']'

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 106
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 71

   31 expr: expr BOOL_EQ . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 107
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 72

   32 expr: expr BOOL_LESS_EQ . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 108
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 73

   33 expr: expr BOOL_GRT_EQ . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 109
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 74

   34 expr: expr BOOL_NOT_EQ . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 110
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 75

   38 expr: expr '=' . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 111
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 76

   39 expr: expr '+' . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 112
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 77

   40 expr: expr '-' . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 113
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 78

   41 expr: expr '*' . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 114
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 79

   42 expr: expr '/' . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 115
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 80

   43 expr: expr '^' . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 116
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 81

   44 expr: expr '<' . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 117
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 82

   45 expr: expr '>' . expr

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 118
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 83

   69 variabl: expr '.' . TOK_IDENT

    TOK_IDENT  shift, and go to state 119


State 84

   22 statmnt: expr ';' .

    $default  reduce using rule 22 (statmnt)


State 85

   78 vardecl: identdc '=' . expr ';'

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 120
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 86

   15 fnction: identdc '(' . identsq ')' block
   16        | identdc '(' . ')' block

    TOK_IDENT      shift, and go to state 121
    TOK_KW_VOID    shift, and go to state 8
    TOK_KW_BOOL    shift, and go to state 9
    TOK_KW_CHAR    shift, and go to state 10
    TOK_KW_INT     shift, and go to state 11
    TOK_KW_STRING  shift, and go to state 12
    ')'            shift, and go to state 122
    ','            shift, and go to state 123

    identsq   go to state 124
    isqhelp   go to state 125
    identdc   go to state 126
    basetype  go to state 45


State 87

   80 identdc: basetype TOK_IDENT .

    $default  reduce using rule 80 (identdc)


State 88

   79 identdc: basetype '[' . ']' TOK_IDENT

    ']'  shift, and go to state 127


State 89

   65 call: TOK_IDENT '(' ')' .

    $default  reduce using rule 65 (call)


State 90

   73 exprhlp: ',' . exprseq

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29
    ','           shift, and go to state 90

    expr     go to state 91
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42
    exprseq  go to state 128
    exprhlp  go to state 93


State 91

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT
   71 exprseq: expr . exprhlp
   72        | expr .

    '['           shift, and go to state 70
    BOOL_EQ       shift, and go to state 71
    BOOL_LESS_EQ  shift, and go to state 72
    BOOL_GRT_EQ   shift, and go to state 73
    BOOL_NOT_EQ   shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '^'           shift, and go to state 80
    '<'           shift, and go to state 81
    '>'           shift, and go to state 82
    '.'           shift, and go to state 83
    ','           shift, and go to state 90

    $default  reduce using rule 72 (exprseq)

    exprhlp  go to state 129


State 92

   66 call: TOK_IDENT '(' exprseq . ')'

    ')'  shift, and go to state 130


State 93

   70 exprseq: exprhlp .

    $default  reduce using rule 70 (exprseq)


State 94

    9 structd: TOK_KW_STRUCT TOK_IDENT '{' . fieldsq '}'
   10        | TOK_KW_STRUCT TOK_IDENT '{' . '}'

    TOK_IDENT      shift, and go to state 121
    TOK_KW_VOID    shift, and go to state 8
    TOK_KW_BOOL    shift, and go to state 9
    TOK_KW_CHAR    shift, and go to state 10
    TOK_KW_INT     shift, and go to state 11
    TOK_KW_STRING  shift, and go to state 12
    '}'            shift, and go to state 131

    fieldsq   go to state 132
    fieldec   go to state 133
    basetype  go to state 134


State 95

   29 ifelse: TOK_KW_IF '(' expr . ')' statmnt TOK_KW_ELSE statmnt
   30       | TOK_KW_IF '(' expr . ')' statmnt
   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['           shift, and go to state 70
    BOOL_EQ       shift, and go to state 71
    BOOL_LESS_EQ  shift, and go to state 72
    BOOL_GRT_EQ   shift, and go to state 73
    BOOL_NOT_EQ   shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '^'           shift, and go to state 80
    '<'           shift, and go to state 81
    '>'           shift, and go to state 82
    '.'           shift, and go to state 83
    ')'           shift, and go to state 135


State 96

   28 while: TOK_KW_WHILE '(' expr . ')' statmnt
   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['           shift, and go to state 70
    BOOL_EQ       shift, and go to state 71
    BOOL_LESS_EQ  shift, and go to state 72
    BOOL_GRT_EQ   shift, and go to state 73
    BOOL_NOT_EQ   shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '^'           shift, and go to state 80
    '<'           shift, and go to state 81
    '>'           shift, and go to state 82
    '.'           shift, and go to state 83
    ')'           shift, and go to state 136


State 97

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   49     | '{' expr . '}'
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '}'           shift, and go to state 104
    '['           shift, and go to state 70
    BOOL_EQ       shift, and go to state 71
    BOOL_LESS_EQ  shift, and go to state 72
    BOOL_GRT_EQ   shift, and go to state 73
    BOOL_NOT_EQ   shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '^'           shift, and go to state 80
    '<'           shift, and go to state 81
    '>'           shift, and go to state 82
    '.'           shift, and go to state 83


State 98

   55 return: TOK_KW_RETURN expr ';' .

    $default  reduce using rule 55 (return)


State 99

   56 alloc: TOK_KW_NEW TOK_IDENT '(' . ')'

    ')'  shift, and go to state 137


State 100

   57 alloc: TOK_KW_NEW TOK_KW_STRING '(' . expr ')'

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 138
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 101

   58 alloc: TOK_KW_NEW basetype '[' . expr ']'

    TOK_IDENT     shift, and go to state 52
    NUMBER        shift, and go to state 6
    TOK_KW_FALSE  shift, and go to state 17
    TOK_KW_TRUE   shift, and go to state 18
    TOK_KW_NULL   shift, and go to state 19
    TOK_KW_ORD    shift, and go to state 20
    TOK_KW_CHR    shift, and go to state 21
    TOK_KW_NEW    shift, and go to state 22
    STRING_LIT    shift, and go to state 23
    CHAR_LIT      shift, and go to state 24
    '{'           shift, and go to state 53
    '+'           shift, and go to state 26
    '-'           shift, and go to state 27
    '!'           shift, and go to state 28
    '('           shift, and go to state 29

    expr     go to state 139
    alloc    go to state 39
    const    go to state 40
    call     go to state 41
    variabl  go to state 42


State 102

   17 block: '{' stmtseq '}' .

    $default  reduce using rule 17 (block)


State 103

   20 stmtseq: stmtseq statmnt .

    $default  reduce using rule 20 (stmtseq)


State 104

   49 expr: '{' expr '}' .

    $default  reduce using rule 49 (expr)


State 105

   48 expr: '(' expr ')' .

    $default  reduce using rule 48 (expr)


State 106

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   68        | expr '[' expr . ']'
   69        | expr . '.' TOK_IDENT

    '['           shift, and go to state 70
    ']'           shift, and go to state 140
    BOOL_EQ       shift, and go to state 71
    BOOL_LESS_EQ  shift, and go to state 72
    BOOL_GRT_EQ   shift, and go to state 73
    BOOL_NOT_EQ   shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '^'           shift, and go to state 80
    '<'           shift, and go to state 81
    '>'           shift, and go to state 82
    '.'           shift, and go to state 83


State 107

   31 expr: expr . BOOL_EQ expr
   31     | expr BOOL_EQ expr .
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '^'  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82
    '.'  shift, and go to state 83

    $default  reduce using rule 31 (expr)


State 108

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   32     | expr BOOL_LESS_EQ expr .
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '^'  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82
    '.'  shift, and go to state 83

    $default  reduce using rule 32 (expr)


State 109

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   33     | expr BOOL_GRT_EQ expr .
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '^'  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82
    '.'  shift, and go to state 83

    $default  reduce using rule 33 (expr)


State 110

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   34     | expr BOOL_NOT_EQ expr .
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '^'  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82
    '.'  shift, and go to state 83

    $default  reduce using rule 34 (expr)


State 111

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   38     | expr '=' expr .
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['           shift, and go to state 70
    BOOL_EQ       shift, and go to state 71
    BOOL_LESS_EQ  shift, and go to state 72
    BOOL_GRT_EQ   shift, and go to state 73
    BOOL_NOT_EQ   shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '^'           shift, and go to state 80
    '<'           shift, and go to state 81
    '>'           shift, and go to state 82
    '.'           shift, and go to state 83

    $default  reduce using rule 38 (expr)


State 112

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   39     | expr '+' expr .
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '^'  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82
    '.'  shift, and go to state 83

    $default  reduce using rule 39 (expr)


State 113

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   40     | expr '-' expr .
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '^'  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82
    '.'  shift, and go to state 83

    $default  reduce using rule 40 (expr)


State 114

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   41     | expr '*' expr .
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '^'  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82
    '.'  shift, and go to state 83

    $default  reduce using rule 41 (expr)


State 115

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   42     | expr '/' expr .
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '^'  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82
    '.'  shift, and go to state 83

    $default  reduce using rule 42 (expr)


State 116

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   43     | expr '^' expr .
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '^'  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82
    '.'  shift, and go to state 83

    $default  reduce using rule 43 (expr)


State 117

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   44     | expr '<' expr .
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '.'  shift, and go to state 83

    $default  reduce using rule 44 (expr)


State 118

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   45     | expr '>' expr .
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['  shift, and go to state 70
    '.'  shift, and go to state 83

    $default  reduce using rule 45 (expr)


State 119

   69 variabl: expr '.' TOK_IDENT .

    $default  reduce using rule 69 (variabl)


State 120

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT
   78 vardecl: identdc '=' expr . ';'

    '['           shift, and go to state 70
    BOOL_EQ       shift, and go to state 71
    BOOL_LESS_EQ  shift, and go to state 72
    BOOL_GRT_EQ   shift, and go to state 73
    BOOL_NOT_EQ   shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '^'           shift, and go to state 80
    '<'           shift, and go to state 81
    '>'           shift, and go to state 82
    '.'           shift, and go to state 83
    ';'           shift, and go to state 141


State 121

   86 basetype: TOK_IDENT .

    $default  reduce using rule 86 (basetype)


State 122

   16 fnction: identdc '(' ')' . block

    '{'  shift, and go to state 142
    ';'  shift, and go to state 30

    block  go to state 143


State 123

   77 isqhelp: ',' . identsq

    TOK_IDENT      shift, and go to state 121
    TOK_KW_VOID    shift, and go to state 8
    TOK_KW_BOOL    shift, and go to state 9
    TOK_KW_CHAR    shift, and go to state 10
    TOK_KW_INT     shift, and go to state 11
    TOK_KW_STRING  shift, and go to state 12
    ','            shift, and go to state 123

    identsq   go to state 144
    isqhelp   go to state 125
    identdc   go to state 126
    basetype  go to state 45


State 124

   15 fnction: identdc '(' identsq . ')' block

    ')'  shift, and go to state 145


State 125

   74 identsq: isqhelp .

    $default  reduce using rule 74 (identsq)


State 126

   75 identsq: identdc . isqhelp
   76        | identdc .

    ','  shift, and go to state 123

    $default  reduce using rule 76 (identsq)

    isqhelp  go to state 146


State 127

   79 identdc: basetype '[' ']' . TOK_IDENT

    TOK_IDENT  shift, and go to state 147


State 128

   73 exprhlp: ',' exprseq .

    $default  reduce using rule 73 (exprhlp)


State 129

   71 exprseq: expr exprhlp .

    $default  reduce using rule 71 (exprseq)


State 130

   66 call: TOK_IDENT '(' exprseq ')' .

    $default  reduce using rule 66 (call)


State 131

   10 structd: TOK_KW_STRUCT TOK_IDENT '{' '}' .

    $default  reduce using rule 10 (structd)


State 132

    9 structd: TOK_KW_STRUCT TOK_IDENT '{' fieldsq . '}'
   11 fieldsq: fieldsq . fieldec

    TOK_IDENT      shift, and go to state 121
    TOK_KW_VOID    shift, and go to state 8
    TOK_KW_BOOL    shift, and go to state 9
    TOK_KW_CHAR    shift, and go to state 10
    TOK_KW_INT     shift, and go to state 11
    TOK_KW_STRING  shift, and go to state 12
    '}'            shift, and go to state 148

    fieldec   go to state 149
    basetype  go to state 134


State 133

   12 fieldsq: fieldec .

    $default  reduce using rule 12 (fieldsq)


State 134

   13 fieldec: basetype . TOK_IDENT ';'
   14        | basetype . '[' ']' TOK_IDENT ';'

    TOK_IDENT  shift, and go to state 150
    '['        shift, and go to state 151


State 135

   29 ifelse: TOK_KW_IF '(' expr ')' . statmnt TOK_KW_ELSE statmnt
   30       | TOK_KW_IF '(' expr ')' . statmnt

    TOK_IDENT      shift, and go to state 5
    NUMBER         shift, and go to state 6
    TOK_KW_VOID    shift, and go to state 8
    TOK_KW_BOOL    shift, and go to state 9
    TOK_KW_CHAR    shift, and go to state 10
    TOK_KW_INT     shift, and go to state 11
    TOK_KW_STRING  shift, and go to state 12
    TOK_KW_IF      shift, and go to state 14
    TOK_KW_WHILE   shift, and go to state 15
    TOK_KW_RETURN  shift, and go to state 16
    TOK_KW_FALSE   shift, and go to state 17
    TOK_KW_TRUE    shift, and go to state 18
    TOK_KW_NULL    shift, and go to state 19
    TOK_KW_ORD     shift, and go to state 20
    TOK_KW_CHR     shift, and go to state 21
    TOK_KW_NEW     shift, and go to state 22
    STRING_LIT     shift, and go to state 23
    CHAR_LIT       shift, and go to state 24
    '{'            shift, and go to state 25
    '+'            shift, and go to state 26
    '-'            shift, and go to state 27
    '!'            shift, and go to state 28
    '('            shift, and go to state 29
    ';'            shift, and go to state 30

    block     go to state 33
    statmnt   go to state 152
    while     go to state 35
    ifelse    go to state 36
    expr      go to state 37
    return    go to state 38
    alloc     go to state 39
    const     go to state 40
    call      go to state 41
    variabl   go to state 42
    vardecl   go to state 43
    identdc   go to state 65
    basetype  go to state 45


State 136

   28 while: TOK_KW_WHILE '(' expr ')' . statmnt

    TOK_IDENT      shift, and go to state 5
    NUMBER         shift, and go to state 6
    TOK_KW_VOID    shift, and go to state 8
    TOK_KW_BOOL    shift, and go to state 9
    TOK_KW_CHAR    shift, and go to state 10
    TOK_KW_INT     shift, and go to state 11
    TOK_KW_STRING  shift, and go to state 12
    TOK_KW_IF      shift, and go to state 14
    TOK_KW_WHILE   shift, and go to state 15
    TOK_KW_RETURN  shift, and go to state 16
    TOK_KW_FALSE   shift, and go to state 17
    TOK_KW_TRUE    shift, and go to state 18
    TOK_KW_NULL    shift, and go to state 19
    TOK_KW_ORD     shift, and go to state 20
    TOK_KW_CHR     shift, and go to state 21
    TOK_KW_NEW     shift, and go to state 22
    STRING_LIT     shift, and go to state 23
    CHAR_LIT       shift, and go to state 24
    '{'            shift, and go to state 25
    '+'            shift, and go to state 26
    '-'            shift, and go to state 27
    '!'            shift, and go to state 28
    '('            shift, and go to state 29
    ';'            shift, and go to state 30

    block     go to state 33
    statmnt   go to state 153
    while     go to state 35
    ifelse    go to state 36
    expr      go to state 37
    return    go to state 38
    alloc     go to state 39
    const     go to state 40
    call      go to state 41
    variabl   go to state 42
    vardecl   go to state 43
    identdc   go to state 65
    basetype  go to state 45


State 137

   56 alloc: TOK_KW_NEW TOK_IDENT '(' ')' .

    $default  reduce using rule 56 (alloc)


State 138

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   57 alloc: TOK_KW_NEW TOK_KW_STRING '(' expr . ')'
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['           shift, and go to state 70
    BOOL_EQ       shift, and go to state 71
    BOOL_LESS_EQ  shift, and go to state 72
    BOOL_GRT_EQ   shift, and go to state 73
    BOOL_NOT_EQ   shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '^'           shift, and go to state 80
    '<'           shift, and go to state 81
    '>'           shift, and go to state 82
    '.'           shift, and go to state 83
    ')'           shift, and go to state 154


State 139

   31 expr: expr . BOOL_EQ expr
   32     | expr . BOOL_LESS_EQ expr
   33     | expr . BOOL_GRT_EQ expr
   34     | expr . BOOL_NOT_EQ expr
   38     | expr . '=' expr
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '^' expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   58 alloc: TOK_KW_NEW basetype '[' expr . ']'
   68 variabl: expr . '[' expr ']'
   69        | expr . '.' TOK_IDENT

    '['           shift, and go to state 70
    ']'           shift, and go to state 155
    BOOL_EQ       shift, and go to state 71
    BOOL_LESS_EQ  shift, and go to state 72
    BOOL_GRT_EQ   shift, and go to state 73
    BOOL_NOT_EQ   shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79
    '^'           shift, and go to state 80
    '<'           shift, and go to state 81
    '>'           shift, and go to state 82
    '.'           shift, and go to state 83


State 140

   68 variabl: expr '[' expr ']' .

    $default  reduce using rule 68 (variabl)


State 141

   78 vardecl: identdc '=' expr ';' .

    $default  reduce using rule 78 (vardecl)


State 142

   17 block: '{' . stmtseq '}'
   18      | '{' . '}'

    TOK_IDENT      shift, and go to state 5
    NUMBER         shift, and go to state 6
    TOK_KW_VOID    shift, and go to state 8
    TOK_KW_BOOL    shift, and go to state 9
    TOK_KW_CHAR    shift, and go to state 10
    TOK_KW_INT     shift, and go to state 11
    TOK_KW_STRING  shift, and go to state 12
    TOK_KW_IF      shift, and go to state 14
    TOK_KW_WHILE   shift, and go to state 15
    TOK_KW_RETURN  shift, and go to state 16
    TOK_KW_FALSE   shift, and go to state 17
    TOK_KW_TRUE    shift, and go to state 18
    TOK_KW_NULL    shift, and go to state 19
    TOK_KW_ORD     shift, and go to state 20
    TOK_KW_CHR     shift, and go to state 21
    TOK_KW_NEW     shift, and go to state 22
    STRING_LIT     shift, and go to state 23
    CHAR_LIT       shift, and go to state 24
    '}'            shift, and go to state 61
    '{'            shift, and go to state 25
    '+'            shift, and go to state 26
    '-'            shift, and go to state 27
    '!'            shift, and go to state 28
    '('            shift, and go to state 29
    ';'            shift, and go to state 30

    block     go to state 33
    stmtseq   go to state 62
    statmnt   go to state 63
    while     go to state 35
    ifelse    go to state 36
    expr      go to state 37
    return    go to state 38
    alloc     go to state 39
    const     go to state 40
    call      go to state 41
    variabl   go to state 42
    vardecl   go to state 43
    identdc   go to state 65
    basetype  go to state 45


State 143

   16 fnction: identdc '(' ')' block .

    $default  reduce using rule 16 (fnction)


State 144

   77 isqhelp: ',' identsq .

    $default  reduce using rule 77 (isqhelp)


State 145

   15 fnction: identdc '(' identsq ')' . block

    '{'  shift, and go to state 142
    ';'  shift, and go to state 30

    block  go to state 156


State 146

   75 identsq: identdc isqhelp .

    $default  reduce using rule 75 (identsq)


State 147

   79 identdc: basetype '[' ']' TOK_IDENT .

    $default  reduce using rule 79 (identdc)


State 148

    9 structd: TOK_KW_STRUCT TOK_IDENT '{' fieldsq '}' .

    $default  reduce using rule 9 (structd)


State 149

   11 fieldsq: fieldsq fieldec .

    $default  reduce using rule 11 (fieldsq)


State 150

   13 fieldec: basetype TOK_IDENT . ';'

    ';'  shift, and go to state 157


State 151

   14 fieldec: basetype '[' . ']' TOK_IDENT ';'

    ']'  shift, and go to state 158


State 152

   29 ifelse: TOK_KW_IF '(' expr ')' statmnt . TOK_KW_ELSE statmnt
   30       | TOK_KW_IF '(' expr ')' statmnt .

    TOK_KW_ELSE  shift, and go to state 159

    $default  reduce using rule 30 (ifelse)


State 153

   28 while: TOK_KW_WHILE '(' expr ')' statmnt .

    $default  reduce using rule 28 (while)


State 154

   57 alloc: TOK_KW_NEW TOK_KW_STRING '(' expr ')' .

    $default  reduce using rule 57 (alloc)


State 155

   58 alloc: TOK_KW_NEW basetype '[' expr ']' .

    $default  reduce using rule 58 (alloc)


State 156

   15 fnction: identdc '(' identsq ')' block .

    $default  reduce using rule 15 (fnction)


State 157

   13 fieldec: basetype TOK_IDENT ';' .

    $default  reduce using rule 13 (fieldec)


State 158

   14 fieldec: basetype '[' ']' . TOK_IDENT ';'

    TOK_IDENT  shift, and go to state 160


State 159

   29 ifelse: TOK_KW_IF '(' expr ')' statmnt TOK_KW_ELSE . statmnt

    TOK_IDENT      shift, and go to state 5
    NUMBER         shift, and go to state 6
    TOK_KW_VOID    shift, and go to state 8
    TOK_KW_BOOL    shift, and go to state 9
    TOK_KW_CHAR    shift, and go to state 10
    TOK_KW_INT     shift, and go to state 11
    TOK_KW_STRING  shift, and go to state 12
    TOK_KW_IF      shift, and go to state 14
    TOK_KW_WHILE   shift, and go to state 15
    TOK_KW_RETURN  shift, and go to state 16
    TOK_KW_FALSE   shift, and go to state 17
    TOK_KW_TRUE    shift, and go to state 18
    TOK_KW_NULL    shift, and go to state 19
    TOK_KW_ORD     shift, and go to state 20
    TOK_KW_CHR     shift, and go to state 21
    TOK_KW_NEW     shift, and go to state 22
    STRING_LIT     shift, and go to state 23
    CHAR_LIT       shift, and go to state 24
    '{'            shift, and go to state 25
    '+'            shift, and go to state 26
    '-'            shift, and go to state 27
    '!'            shift, and go to state 28
    '('            shift, and go to state 29
    ';'            shift, and go to state 30

    block     go to state 33
    statmnt   go to state 161
    while     go to state 35
    ifelse    go to state 36
    expr      go to state 37
    return    go to state 38
    alloc     go to state 39
    const     go to state 40
    call      go to state 41
    variabl   go to state 42
    vardecl   go to state 43
    identdc   go to state 65
    basetype  go to state 45


State 160

   14 fieldec: basetype '[' ']' TOK_IDENT . ';'

    ';'  shift, and go to state 162


State 161

   29 ifelse: TOK_KW_IF '(' expr ')' statmnt TOK_KW_ELSE statmnt .

    $default  reduce using rule 29 (ifelse)


State 162

   14 fieldec: basetype '[' ']' TOK_IDENT ';' .

    $default  reduce using rule 14 (fieldec)
