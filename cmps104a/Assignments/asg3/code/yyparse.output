Terminals unused in grammar

   ROOT
   RESERVED


State 0 conflicts: 26 shift/reduce
State 2 conflicts: 1 shift/reduce
State 13 conflicts: 18 shift/reduce
State 42 conflicts: 1 shift/reduce
State 48 conflicts: 2 shift/reduce
State 50 conflicts: 11 shift/reduce
State 51 conflicts: 11 shift/reduce
State 57 conflicts: 1 shift/reduce
State 58 conflicts: 2 shift/reduce
State 59 conflicts: 2 shift/reduce
State 96 conflicts: 2 shift/reduce
State 97 conflicts: 2 shift/reduce
State 98 conflicts: 2 shift/reduce
State 99 conflicts: 2 shift/reduce
State 100 conflicts: 2 shift/reduce
State 101 conflicts: 2 shift/reduce
State 103 conflicts: 2 shift/reduce
State 105 conflicts: 2 shift/reduce
State 124 conflicts: 2 shift/reduce
State 125 conflicts: 2 shift/reduce
State 126 conflicts: 2 shift/reduce
State 127 conflicts: 2 shift/reduce
State 138 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: structd
    2        | statmnt
    3        | function
    4        | DIRECTIVE
    5        | program statmnt
    6        | program function
    7        | program structd
    8        | program DIRECTIVE
    9        | %empty

   10 structd: TOK_KW_STRUCT TOK_IDENT '{' '}'
   11        | TOK_KW_STRUCT TOK_IDENT '{' fields '}'

   12 fields: fields basetype '[' ']' TOK_IDENT ';'
   13       | fields basetype TOK_IDENT ';'
   14       | basetype '[' ']' TOK_IDENT ';'
   15       | basetype TOK_IDENT ';'

   16 function: identdec '(' ')' block
   17         | identdec '(' identseq ')' block

   18 identseq: identdec
   19         | identseq ',' identseq

   20 block: '{' stmtseq '}'
   21      | ';'

   22 stmtseq: statmnt
   23        | stmtseq statmnt

   24 statmnt: ifelse
   25        | vardecl
   26        | expr ';'
   27        | error ';'
   28        | block
   29        | return
   30        | while

   31 while: TOK_KW_WHILE '(' expr ')' statmnt

   32 return: TOK_KW_RETURN
   33       | TOK_KW_RETURN expr

   34 vardecl: identdec '=' expr ';'

   35 expr: expr '=' expr
   36     | expr '+' expr
   37     | expr '-' expr
   38     | expr '*' expr
   39     | expr '/' expr
   40     | expr '^' expr
   41     | expr '<' expr
   42     | expr '>' expr
   43     | expr '=' '=' expr
   44     | expr '!' '=' expr
   45     | expr '<' '=' expr
   46     | expr '>' '=' expr
   47     | '+' expr
   48     | '-' expr
   49     | TOK_KW_CHR expr
   50     | TOK_KW_ORD expr
   51     | '(' expr ')'
   52     | call
   53     | identdec
   54     | variable
   55     | constant
   56     | allocatr

   57 constant: NUMBER
   58         | STRING_LIT
   59         | CHAR_LIT
   60         | TOK_KW_TRUE
   61         | TOK_KW_FALSE
   62         | TOK_KW_NULL

   63 variable: TOK_IDENT
   64         | expr '[' expr ']'
   65         | expr '.' TOK_IDENT

   66 allocatr: TOK_KW_NEW TOK_IDENT '(' ')'
   67         | TOK_KW_NEW TOK_KW_STRING '(' expr ')'
   68         | TOK_KW_NEW basetype '[' expr ']'

   69 ifelse: TOK_KW_IF '(' expr ')' statmnt
   70       | TOK_KW_IF '(' expr ')' statmnt TOK_KW_ELSE statmnt

   71 exprseq: expr ',' exprseq
   72        | expr

   73 call: TOK_IDENT '(' ')'
   74     | TOK_IDENT '(' exprseq ')'

   75 basetype: TOK_KW_VOID
   76         | TOK_KW_BOOL
   77         | TOK_KW_CHAR
   78         | TOK_KW_INT
   79         | TOK_KW_STRING

   80 identdec: basetype '[' ']' TOK_IDENT
   81         | basetype TOK_IDENT


Terminals, with rules where they appear

$end (0) 0
'!' (33) 44
'(' (40) 16 17 31 51 66 67 69 70 73 74
')' (41) 16 17 31 51 66 67 69 70 73 74
'*' (42) 38
'+' (43) 36 47
',' (44) 19 71
'-' (45) 37 48
'.' (46) 65
'/' (47) 39
';' (59) 12 13 14 15 21 26 27 34
'<' (60) 41 45
'=' (61) 34 35 43 44 45 46
'>' (62) 42 46
'[' (91) 12 14 64 68 80
']' (93) 12 14 64 68 80
'^' (94) 40
'{' (123) 10 11 20
'}' (125) 10 11 20
error (256) 27
ROOT (258)
TOK_IDENT (259) 10 11 12 13 14 15 63 65 66 73 74 80 81
NUMBER (260) 57
DIRECTIVE (261) 4 8
RESERVED (262)
TOK_KW_VOID (263) 75
TOK_KW_BOOL (264) 76
TOK_KW_CHAR (265) 77
TOK_KW_INT (266) 78
TOK_KW_STRING (267) 67 79
TOK_KW_STRUCT (268) 10 11
TOK_KW_IF (269) 69 70
TOK_KW_ELSE (270) 70
TOK_KW_WHILE (271) 31
TOK_KW_RETURN (272) 32 33
TOK_KW_FALSE (273) 61
TOK_KW_TRUE (274) 60
TOK_KW_NULL (275) 62
TOK_KW_ORD (276) 50
TOK_KW_CHR (277) 49
TOK_KW_NEW (278) 66 67 68
STRING_LIT (279) 58
CHAR_LIT (280) 59
POS (281)
NEG (282)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1 2 3 4 5 6 7 8 9, on right: 0 5 6 7 8
structd (48)
    on left: 10 11, on right: 1 7
fields (49)
    on left: 12 13 14 15, on right: 11 12 13
function (50)
    on left: 16 17, on right: 3 6
identseq (51)
    on left: 18 19, on right: 17 19
block (52)
    on left: 20 21, on right: 16 17 28
stmtseq (53)
    on left: 22 23, on right: 20 23
statmnt (54)
    on left: 24 25 26 27 28 29 30, on right: 2 5 22 23 31 69 70
while (55)
    on left: 31, on right: 30
return (56)
    on left: 32 33, on right: 29
vardecl (57)
    on left: 34, on right: 25
expr (58)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
    53 54 55 56, on right: 26 31 33 34 35 36 37 38 39 40 41 42 43 44
    45 46 47 48 49 50 51 64 65 67 68 69 70 71 72
constant (59)
    on left: 57 58 59 60 61 62, on right: 55
variable (60)
    on left: 63 64 65, on right: 54
allocatr (61)
    on left: 66 67 68, on right: 56
ifelse (62)
    on left: 69 70, on right: 24
exprseq (63)
    on left: 71 72, on right: 71 74
call (64)
    on left: 73 74, on right: 52
basetype (65)
    on left: 75 76 77 78 79, on right: 12 13 14 15 68 80 81
identdec (66)
    on left: 80 81, on right: 16 17 18 34 53


State 0

    0 $accept: . program $end

    error          shift, and go to state 1
    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    DIRECTIVE      shift, and go to state 4
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_STRUCT  shift, and go to state 10
    TOK_KW_IF      shift, and go to state 11
    TOK_KW_WHILE   shift, and go to state 12
    TOK_KW_RETURN  shift, and go to state 13
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '{'            shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    ';'            shift, and go to state 25
    '('            shift, and go to state 26

    $end           reduce using rule 9 (program)
    error          [reduce using rule 9 (program)]
    TOK_IDENT      [reduce using rule 9 (program)]
    NUMBER         [reduce using rule 9 (program)]
    DIRECTIVE      [reduce using rule 9 (program)]
    TOK_KW_VOID    [reduce using rule 9 (program)]
    TOK_KW_BOOL    [reduce using rule 9 (program)]
    TOK_KW_CHAR    [reduce using rule 9 (program)]
    TOK_KW_INT     [reduce using rule 9 (program)]
    TOK_KW_STRING  [reduce using rule 9 (program)]
    TOK_KW_STRUCT  [reduce using rule 9 (program)]
    TOK_KW_IF      [reduce using rule 9 (program)]
    TOK_KW_WHILE   [reduce using rule 9 (program)]
    TOK_KW_RETURN  [reduce using rule 9 (program)]
    TOK_KW_FALSE   [reduce using rule 9 (program)]
    TOK_KW_TRUE    [reduce using rule 9 (program)]
    TOK_KW_NULL    [reduce using rule 9 (program)]
    TOK_KW_ORD     [reduce using rule 9 (program)]
    TOK_KW_CHR     [reduce using rule 9 (program)]
    TOK_KW_NEW     [reduce using rule 9 (program)]
    STRING_LIT     [reduce using rule 9 (program)]
    CHAR_LIT       [reduce using rule 9 (program)]
    '{'            [reduce using rule 9 (program)]
    '+'            [reduce using rule 9 (program)]
    '-'            [reduce using rule 9 (program)]
    ';'            [reduce using rule 9 (program)]
    '('            [reduce using rule 9 (program)]

    program   go to state 27
    structd   go to state 28
    function  go to state 29
    block     go to state 30
    statmnt   go to state 31
    while     go to state 32
    return    go to state 33
    vardecl   go to state 34
    expr      go to state 35
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    ifelse    go to state 39
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 42


State 1

   27 statmnt: error . ';'

    ';'  shift, and go to state 43


State 2

   63 variable: TOK_IDENT .
   73 call: TOK_IDENT . '(' ')'
   74     | TOK_IDENT . '(' exprseq ')'

    '('  shift, and go to state 44

    '('       [reduce using rule 63 (variable)]
    $default  reduce using rule 63 (variable)


State 3

   57 constant: NUMBER .

    $default  reduce using rule 57 (constant)


State 4

    4 program: DIRECTIVE .

    $default  reduce using rule 4 (program)


State 5

   75 basetype: TOK_KW_VOID .

    $default  reduce using rule 75 (basetype)


State 6

   76 basetype: TOK_KW_BOOL .

    $default  reduce using rule 76 (basetype)


State 7

   77 basetype: TOK_KW_CHAR .

    $default  reduce using rule 77 (basetype)


State 8

   78 basetype: TOK_KW_INT .

    $default  reduce using rule 78 (basetype)


State 9

   79 basetype: TOK_KW_STRING .

    $default  reduce using rule 79 (basetype)


State 10

   10 structd: TOK_KW_STRUCT . TOK_IDENT '{' '}'
   11        | TOK_KW_STRUCT . TOK_IDENT '{' fields '}'

    TOK_IDENT  shift, and go to state 45


State 11

   69 ifelse: TOK_KW_IF . '(' expr ')' statmnt
   70       | TOK_KW_IF . '(' expr ')' statmnt TOK_KW_ELSE statmnt

    '('  shift, and go to state 46


State 12

   31 while: TOK_KW_WHILE . '(' expr ')' statmnt

    '('  shift, and go to state 47


State 13

   32 return: TOK_KW_RETURN .
   33       | TOK_KW_RETURN . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    TOK_IDENT      [reduce using rule 32 (return)]
    NUMBER         [reduce using rule 32 (return)]
    TOK_KW_VOID    [reduce using rule 32 (return)]
    TOK_KW_BOOL    [reduce using rule 32 (return)]
    TOK_KW_CHAR    [reduce using rule 32 (return)]
    TOK_KW_INT     [reduce using rule 32 (return)]
    TOK_KW_STRING  [reduce using rule 32 (return)]
    TOK_KW_FALSE   [reduce using rule 32 (return)]
    TOK_KW_TRUE    [reduce using rule 32 (return)]
    TOK_KW_NULL    [reduce using rule 32 (return)]
    TOK_KW_ORD     [reduce using rule 32 (return)]
    TOK_KW_CHR     [reduce using rule 32 (return)]
    TOK_KW_NEW     [reduce using rule 32 (return)]
    STRING_LIT     [reduce using rule 32 (return)]
    CHAR_LIT       [reduce using rule 32 (return)]
    '+'            [reduce using rule 32 (return)]
    '-'            [reduce using rule 32 (return)]
    '('            [reduce using rule 32 (return)]
    $default       reduce using rule 32 (return)

    expr      go to state 48
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 14

   61 constant: TOK_KW_FALSE .

    $default  reduce using rule 61 (constant)


State 15

   60 constant: TOK_KW_TRUE .

    $default  reduce using rule 60 (constant)


State 16

   62 constant: TOK_KW_NULL .

    $default  reduce using rule 62 (constant)


State 17

   50 expr: TOK_KW_ORD . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 50
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 18

   49 expr: TOK_KW_CHR . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 51
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 19

   66 allocatr: TOK_KW_NEW . TOK_IDENT '(' ')'
   67         | TOK_KW_NEW . TOK_KW_STRING '(' expr ')'
   68         | TOK_KW_NEW . basetype '[' expr ']'

    TOK_IDENT      shift, and go to state 52
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 53

    basetype  go to state 54


State 20

   58 constant: STRING_LIT .

    $default  reduce using rule 58 (constant)


State 21

   59 constant: CHAR_LIT .

    $default  reduce using rule 59 (constant)


State 22

   20 block: '{' . stmtseq '}'

    error          shift, and go to state 1
    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_IF      shift, and go to state 11
    TOK_KW_WHILE   shift, and go to state 12
    TOK_KW_RETURN  shift, and go to state 13
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '{'            shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    ';'            shift, and go to state 25
    '('            shift, and go to state 26

    block     go to state 30
    stmtseq   go to state 55
    statmnt   go to state 56
    while     go to state 32
    return    go to state 33
    vardecl   go to state 34
    expr      go to state 35
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    ifelse    go to state 39
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 57


State 23

   47 expr: '+' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 58
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 24

   48 expr: '-' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 59
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 25

   21 block: ';' .

    $default  reduce using rule 21 (block)


State 26

   51 expr: '(' . expr ')'

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 60
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 27

    0 $accept: program . $end
    5 program: program . statmnt
    6        | program . function
    7        | program . structd
    8        | program . DIRECTIVE

    $end           shift, and go to state 61
    error          shift, and go to state 1
    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    DIRECTIVE      shift, and go to state 62
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_STRUCT  shift, and go to state 10
    TOK_KW_IF      shift, and go to state 11
    TOK_KW_WHILE   shift, and go to state 12
    TOK_KW_RETURN  shift, and go to state 13
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '{'            shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    ';'            shift, and go to state 25
    '('            shift, and go to state 26

    structd   go to state 63
    function  go to state 64
    block     go to state 30
    statmnt   go to state 65
    while     go to state 32
    return    go to state 33
    vardecl   go to state 34
    expr      go to state 35
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    ifelse    go to state 39
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 42


State 28

    1 program: structd .

    $default  reduce using rule 1 (program)


State 29

    3 program: function .

    $default  reduce using rule 3 (program)


State 30

   28 statmnt: block .

    $default  reduce using rule 28 (statmnt)


State 31

    2 program: statmnt .

    $default  reduce using rule 2 (program)


State 32

   30 statmnt: while .

    $default  reduce using rule 30 (statmnt)


State 33

   29 statmnt: return .

    $default  reduce using rule 29 (statmnt)


State 34

   25 statmnt: vardecl .

    $default  reduce using rule 25 (statmnt)


State 35

   26 statmnt: expr . ';'
   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    ';'  shift, and go to state 76
    '.'  shift, and go to state 77


State 36

   55 expr: constant .

    $default  reduce using rule 55 (expr)


State 37

   54 expr: variable .

    $default  reduce using rule 54 (expr)


State 38

   56 expr: allocatr .

    $default  reduce using rule 56 (expr)


State 39

   24 statmnt: ifelse .

    $default  reduce using rule 24 (statmnt)


State 40

   52 expr: call .

    $default  reduce using rule 52 (expr)


State 41

   80 identdec: basetype . '[' ']' TOK_IDENT
   81         | basetype . TOK_IDENT

    TOK_IDENT  shift, and go to state 78
    '['        shift, and go to state 79


State 42

   16 function: identdec . '(' ')' block
   17         | identdec . '(' identseq ')' block
   34 vardecl: identdec . '=' expr ';'
   53 expr: identdec .

    '='  shift, and go to state 80
    '('  shift, and go to state 81

    '='       [reduce using rule 53 (expr)]
    $default  reduce using rule 53 (expr)


State 43

   27 statmnt: error ';' .

    $default  reduce using rule 27 (statmnt)


State 44

   73 call: TOK_IDENT '(' . ')'
   74     | TOK_IDENT '(' . exprseq ')'

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26
    ')'            shift, and go to state 82

    expr      go to state 83
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    exprseq   go to state 84
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 45

   10 structd: TOK_KW_STRUCT TOK_IDENT . '{' '}'
   11        | TOK_KW_STRUCT TOK_IDENT . '{' fields '}'

    '{'  shift, and go to state 85


State 46

   69 ifelse: TOK_KW_IF '(' . expr ')' statmnt
   70       | TOK_KW_IF '(' . expr ')' statmnt TOK_KW_ELSE statmnt

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 86
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 47

   31 while: TOK_KW_WHILE '(' . expr ')' statmnt

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 87
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 48

   33 return: TOK_KW_RETURN expr .
   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '+'       [reduce using rule 33 (return)]
    '-'       [reduce using rule 33 (return)]
    $default  reduce using rule 33 (return)


State 49

   53 expr: identdec .

    $default  reduce using rule 53 (expr)


State 50

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   50     | TOK_KW_ORD expr .
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 50 (expr)]
    '='       [reduce using rule 50 (expr)]
    '+'       [reduce using rule 50 (expr)]
    '-'       [reduce using rule 50 (expr)]
    '*'       [reduce using rule 50 (expr)]
    '/'       [reduce using rule 50 (expr)]
    '^'       [reduce using rule 50 (expr)]
    '<'       [reduce using rule 50 (expr)]
    '>'       [reduce using rule 50 (expr)]
    '!'       [reduce using rule 50 (expr)]
    '.'       [reduce using rule 50 (expr)]
    $default  reduce using rule 50 (expr)


State 51

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   49     | TOK_KW_CHR expr .
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 49 (expr)]
    '='       [reduce using rule 49 (expr)]
    '+'       [reduce using rule 49 (expr)]
    '-'       [reduce using rule 49 (expr)]
    '*'       [reduce using rule 49 (expr)]
    '/'       [reduce using rule 49 (expr)]
    '^'       [reduce using rule 49 (expr)]
    '<'       [reduce using rule 49 (expr)]
    '>'       [reduce using rule 49 (expr)]
    '!'       [reduce using rule 49 (expr)]
    '.'       [reduce using rule 49 (expr)]
    $default  reduce using rule 49 (expr)


State 52

   66 allocatr: TOK_KW_NEW TOK_IDENT . '(' ')'

    '('  shift, and go to state 88


State 53

   67 allocatr: TOK_KW_NEW TOK_KW_STRING . '(' expr ')'
   79 basetype: TOK_KW_STRING .

    '('  shift, and go to state 89

    $default  reduce using rule 79 (basetype)


State 54

   68 allocatr: TOK_KW_NEW basetype . '[' expr ']'

    '['  shift, and go to state 90


State 55

   20 block: '{' stmtseq . '}'
   23 stmtseq: stmtseq . statmnt

    error          shift, and go to state 1
    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_IF      shift, and go to state 11
    TOK_KW_WHILE   shift, and go to state 12
    TOK_KW_RETURN  shift, and go to state 13
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '}'            shift, and go to state 91
    '{'            shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    ';'            shift, and go to state 25
    '('            shift, and go to state 26

    block     go to state 30
    statmnt   go to state 92
    while     go to state 32
    return    go to state 33
    vardecl   go to state 34
    expr      go to state 35
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    ifelse    go to state 39
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 57


State 56

   22 stmtseq: statmnt .

    $default  reduce using rule 22 (stmtseq)


State 57

   34 vardecl: identdec . '=' expr ';'
   53 expr: identdec .

    '='  shift, and go to state 80

    '='       [reduce using rule 53 (expr)]
    $default  reduce using rule 53 (expr)


State 58

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   47     | '+' expr .
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 47 (expr)]
    '.'       [reduce using rule 47 (expr)]
    $default  reduce using rule 47 (expr)


State 59

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   48     | '-' expr .
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 48 (expr)]
    '.'       [reduce using rule 48 (expr)]
    $default  reduce using rule 48 (expr)


State 60

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   51     | '(' expr . ')'
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    ')'  shift, and go to state 93
    '.'  shift, and go to state 77


State 61

    0 $accept: program $end .

    $default  accept


State 62

    8 program: program DIRECTIVE .

    $default  reduce using rule 8 (program)


State 63

    7 program: program structd .

    $default  reduce using rule 7 (program)


State 64

    6 program: program function .

    $default  reduce using rule 6 (program)


State 65

    5 program: program statmnt .

    $default  reduce using rule 5 (program)


State 66

   64 variable: expr '[' . expr ']'

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 94
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 67

   35 expr: expr '=' . expr
   43     | expr '=' . '=' expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '='            shift, and go to state 95
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 96
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 68

   36 expr: expr '+' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 97
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 69

   37 expr: expr '-' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 98
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 70

   38 expr: expr '*' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 99
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 71

   39 expr: expr '/' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 100
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 72

   40 expr: expr '^' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 101
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 73

   41 expr: expr '<' . expr
   45     | expr '<' . '=' expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '='            shift, and go to state 102
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 103
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 74

   42 expr: expr '>' . expr
   46     | expr '>' . '=' expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '='            shift, and go to state 104
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 105
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 75

   44 expr: expr '!' . '=' expr

    '='  shift, and go to state 106


State 76

   26 statmnt: expr ';' .

    $default  reduce using rule 26 (statmnt)


State 77

   65 variable: expr '.' . TOK_IDENT

    TOK_IDENT  shift, and go to state 107


State 78

   81 identdec: basetype TOK_IDENT .

    $default  reduce using rule 81 (identdec)


State 79

   80 identdec: basetype '[' . ']' TOK_IDENT

    ']'  shift, and go to state 108


State 80

   34 vardecl: identdec '=' . expr ';'

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 109
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 81

   16 function: identdec '(' . ')' block
   17         | identdec '(' . identseq ')' block

    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    ')'            shift, and go to state 110

    identseq  go to state 111
    basetype  go to state 41
    identdec  go to state 112


State 82

   73 call: TOK_IDENT '(' ')' .

    $default  reduce using rule 73 (call)


State 83

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT
   71 exprseq: expr . ',' exprseq
   72        | expr .

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    ','  shift, and go to state 113
    '.'  shift, and go to state 77

    $default  reduce using rule 72 (exprseq)


State 84

   74 call: TOK_IDENT '(' exprseq . ')'

    ')'  shift, and go to state 114


State 85

   10 structd: TOK_KW_STRUCT TOK_IDENT '{' . '}'
   11        | TOK_KW_STRUCT TOK_IDENT '{' . fields '}'

    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    '}'            shift, and go to state 115

    fields    go to state 116
    basetype  go to state 117


State 86

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT
   69 ifelse: TOK_KW_IF '(' expr . ')' statmnt
   70       | TOK_KW_IF '(' expr . ')' statmnt TOK_KW_ELSE statmnt

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    ')'  shift, and go to state 118
    '.'  shift, and go to state 77


State 87

   31 while: TOK_KW_WHILE '(' expr . ')' statmnt
   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    ')'  shift, and go to state 119
    '.'  shift, and go to state 77


State 88

   66 allocatr: TOK_KW_NEW TOK_IDENT '(' . ')'

    ')'  shift, and go to state 120


State 89

   67 allocatr: TOK_KW_NEW TOK_KW_STRING '(' . expr ')'

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 121
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 90

   68 allocatr: TOK_KW_NEW basetype '[' . expr ']'

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 122
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 91

   20 block: '{' stmtseq '}' .

    $default  reduce using rule 20 (block)


State 92

   23 stmtseq: stmtseq statmnt .

    $default  reduce using rule 23 (stmtseq)


State 93

   51 expr: '(' expr ')' .

    $default  reduce using rule 51 (expr)


State 94

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   64         | expr '[' expr . ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    ']'  shift, and go to state 123
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77


State 95

   43 expr: expr '=' '=' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 124
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 96

   35 expr: expr . '=' expr
   35     | expr '=' expr .
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 35 (expr)]
    '.'       [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


State 97

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   36     | expr '+' expr .
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 36 (expr)]
    '.'       [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


State 98

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   37     | expr '-' expr .
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 37 (expr)]
    '.'       [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


State 99

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   38     | expr '*' expr .
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 38 (expr)]
    '.'       [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


State 100

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   39     | expr '/' expr .
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 39 (expr)]
    '.'       [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


State 101

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   40     | expr '^' expr .
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 40 (expr)]
    '.'       [reduce using rule 40 (expr)]
    $default  reduce using rule 40 (expr)


State 102

   45 expr: expr '<' '=' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 125
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 103

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   41     | expr '<' expr .
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 41 (expr)]
    '.'       [reduce using rule 41 (expr)]
    $default  reduce using rule 41 (expr)


State 104

   46 expr: expr '>' '=' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 126
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 105

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   42     | expr '>' expr .
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 42 (expr)]
    '.'       [reduce using rule 42 (expr)]
    $default  reduce using rule 42 (expr)


State 106

   44 expr: expr '!' '=' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 127
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 107

   65 variable: expr '.' TOK_IDENT .

    $default  reduce using rule 65 (variable)


State 108

   80 identdec: basetype '[' ']' . TOK_IDENT

    TOK_IDENT  shift, and go to state 128


State 109

   34 vardecl: identdec '=' expr . ';'
   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    ';'  shift, and go to state 129
    '.'  shift, and go to state 77


State 110

   16 function: identdec '(' ')' . block

    '{'  shift, and go to state 22
    ';'  shift, and go to state 25

    block  go to state 130


State 111

   17 function: identdec '(' identseq . ')' block
   19 identseq: identseq . ',' identseq

    ','  shift, and go to state 131
    ')'  shift, and go to state 132


State 112

   18 identseq: identdec .

    $default  reduce using rule 18 (identseq)


State 113

   71 exprseq: expr ',' . exprseq

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 83
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    exprseq   go to state 133
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 49


State 114

   74 call: TOK_IDENT '(' exprseq ')' .

    $default  reduce using rule 74 (call)


State 115

   10 structd: TOK_KW_STRUCT TOK_IDENT '{' '}' .

    $default  reduce using rule 10 (structd)


State 116

   11 structd: TOK_KW_STRUCT TOK_IDENT '{' fields . '}'
   12 fields: fields . basetype '[' ']' TOK_IDENT ';'
   13       | fields . basetype TOK_IDENT ';'

    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    '}'            shift, and go to state 134

    basetype  go to state 135


State 117

   14 fields: basetype . '[' ']' TOK_IDENT ';'
   15       | basetype . TOK_IDENT ';'

    TOK_IDENT  shift, and go to state 136
    '['        shift, and go to state 137


State 118

   69 ifelse: TOK_KW_IF '(' expr ')' . statmnt
   70       | TOK_KW_IF '(' expr ')' . statmnt TOK_KW_ELSE statmnt

    error          shift, and go to state 1
    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_IF      shift, and go to state 11
    TOK_KW_WHILE   shift, and go to state 12
    TOK_KW_RETURN  shift, and go to state 13
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '{'            shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    ';'            shift, and go to state 25
    '('            shift, and go to state 26

    block     go to state 30
    statmnt   go to state 138
    while     go to state 32
    return    go to state 33
    vardecl   go to state 34
    expr      go to state 35
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    ifelse    go to state 39
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 57


State 119

   31 while: TOK_KW_WHILE '(' expr ')' . statmnt

    error          shift, and go to state 1
    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_IF      shift, and go to state 11
    TOK_KW_WHILE   shift, and go to state 12
    TOK_KW_RETURN  shift, and go to state 13
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '{'            shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    ';'            shift, and go to state 25
    '('            shift, and go to state 26

    block     go to state 30
    statmnt   go to state 139
    while     go to state 32
    return    go to state 33
    vardecl   go to state 34
    expr      go to state 35
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    ifelse    go to state 39
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 57


State 120

   66 allocatr: TOK_KW_NEW TOK_IDENT '(' ')' .

    $default  reduce using rule 66 (allocatr)


State 121

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT
   67 allocatr: TOK_KW_NEW TOK_KW_STRING '(' expr . ')'

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    ')'  shift, and go to state 140
    '.'  shift, and go to state 77


State 122

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT
   68 allocatr: TOK_KW_NEW basetype '[' expr . ']'

    '['  shift, and go to state 66
    ']'  shift, and go to state 141
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77


State 123

   64 variable: expr '[' expr ']' .

    $default  reduce using rule 64 (variable)


State 124

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   43     | expr '=' '=' expr .
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 43 (expr)]
    '.'       [reduce using rule 43 (expr)]
    $default  reduce using rule 43 (expr)


State 125

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   45     | expr '<' '=' expr .
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 45 (expr)]
    '.'       [reduce using rule 45 (expr)]
    $default  reduce using rule 45 (expr)


State 126

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   46     | expr '>' '=' expr .
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 46 (expr)]
    '.'       [reduce using rule 46 (expr)]
    $default  reduce using rule 46 (expr)


State 127

   35 expr: expr . '=' expr
   36     | expr . '+' expr
   37     | expr . '-' expr
   38     | expr . '*' expr
   39     | expr . '/' expr
   40     | expr . '^' expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '=' '=' expr
   44     | expr . '!' '=' expr
   44     | expr '!' '=' expr .
   45     | expr . '<' '=' expr
   46     | expr . '>' '=' expr
   64 variable: expr . '[' expr ']'
   65         | expr . '.' TOK_IDENT

    '['  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '^'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '!'  shift, and go to state 75
    '.'  shift, and go to state 77

    '['       [reduce using rule 44 (expr)]
    '.'       [reduce using rule 44 (expr)]
    $default  reduce using rule 44 (expr)


State 128

   80 identdec: basetype '[' ']' TOK_IDENT .

    $default  reduce using rule 80 (identdec)


State 129

   34 vardecl: identdec '=' expr ';' .

    $default  reduce using rule 34 (vardecl)


State 130

   16 function: identdec '(' ')' block .

    $default  reduce using rule 16 (function)


State 131

   19 identseq: identseq ',' . identseq

    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9

    identseq  go to state 142
    basetype  go to state 41
    identdec  go to state 112


State 132

   17 function: identdec '(' identseq ')' . block

    '{'  shift, and go to state 22
    ';'  shift, and go to state 25

    block  go to state 143


State 133

   71 exprseq: expr ',' exprseq .

    $default  reduce using rule 71 (exprseq)


State 134

   11 structd: TOK_KW_STRUCT TOK_IDENT '{' fields '}' .

    $default  reduce using rule 11 (structd)


State 135

   12 fields: fields basetype . '[' ']' TOK_IDENT ';'
   13       | fields basetype . TOK_IDENT ';'

    TOK_IDENT  shift, and go to state 144
    '['        shift, and go to state 145


State 136

   15 fields: basetype TOK_IDENT . ';'

    ';'  shift, and go to state 146


State 137

   14 fields: basetype '[' . ']' TOK_IDENT ';'

    ']'  shift, and go to state 147


State 138

   69 ifelse: TOK_KW_IF '(' expr ')' statmnt .
   70       | TOK_KW_IF '(' expr ')' statmnt . TOK_KW_ELSE statmnt

    TOK_KW_ELSE  shift, and go to state 148

    TOK_KW_ELSE  [reduce using rule 69 (ifelse)]
    $default     reduce using rule 69 (ifelse)


State 139

   31 while: TOK_KW_WHILE '(' expr ')' statmnt .

    $default  reduce using rule 31 (while)


State 140

   67 allocatr: TOK_KW_NEW TOK_KW_STRING '(' expr ')' .

    $default  reduce using rule 67 (allocatr)


State 141

   68 allocatr: TOK_KW_NEW basetype '[' expr ']' .

    $default  reduce using rule 68 (allocatr)


State 142

   19 identseq: identseq . ',' identseq
   19         | identseq ',' identseq .

    $default  reduce using rule 19 (identseq)


State 143

   17 function: identdec '(' identseq ')' block .

    $default  reduce using rule 17 (function)


State 144

   13 fields: fields basetype TOK_IDENT . ';'

    ';'  shift, and go to state 149


State 145

   12 fields: fields basetype '[' . ']' TOK_IDENT ';'

    ']'  shift, and go to state 150


State 146

   15 fields: basetype TOK_IDENT ';' .

    $default  reduce using rule 15 (fields)


State 147

   14 fields: basetype '[' ']' . TOK_IDENT ';'

    TOK_IDENT  shift, and go to state 151


State 148

   70 ifelse: TOK_KW_IF '(' expr ')' statmnt TOK_KW_ELSE . statmnt

    error          shift, and go to state 1
    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_IF      shift, and go to state 11
    TOK_KW_WHILE   shift, and go to state 12
    TOK_KW_RETURN  shift, and go to state 13
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '{'            shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    ';'            shift, and go to state 25
    '('            shift, and go to state 26

    block     go to state 30
    statmnt   go to state 152
    while     go to state 32
    return    go to state 33
    vardecl   go to state 34
    expr      go to state 35
    constant  go to state 36
    variable  go to state 37
    allocatr  go to state 38
    ifelse    go to state 39
    call      go to state 40
    basetype  go to state 41
    identdec  go to state 57


State 149

   13 fields: fields basetype TOK_IDENT ';' .

    $default  reduce using rule 13 (fields)


State 150

   12 fields: fields basetype '[' ']' . TOK_IDENT ';'

    TOK_IDENT  shift, and go to state 153


State 151

   14 fields: basetype '[' ']' TOK_IDENT . ';'

    ';'  shift, and go to state 154


State 152

   70 ifelse: TOK_KW_IF '(' expr ')' statmnt TOK_KW_ELSE statmnt .

    $default  reduce using rule 70 (ifelse)


State 153

   12 fields: fields basetype '[' ']' TOK_IDENT . ';'

    ';'  shift, and go to state 155


State 154

   14 fields: basetype '[' ']' TOK_IDENT ';' .

    $default  reduce using rule 14 (fields)


State 155

   12 fields: fields basetype '[' ']' TOK_IDENT ';' .

    $default  reduce using rule 12 (fields)
