Terminals unused in grammar

   ROOT
   RESERVED


State 0 conflicts: 26 shift/reduce
State 2 conflicts: 1 shift/reduce
State 13 conflicts: 18 shift/reduce
State 43 conflicts: 1 shift/reduce
State 49 conflicts: 2 shift/reduce
State 51 conflicts: 11 shift/reduce
State 52 conflicts: 11 shift/reduce
State 58 conflicts: 1 shift/reduce
State 59 conflicts: 2 shift/reduce
State 60 conflicts: 2 shift/reduce
State 97 conflicts: 2 shift/reduce
State 98 conflicts: 2 shift/reduce
State 99 conflicts: 2 shift/reduce
State 100 conflicts: 2 shift/reduce
State 101 conflicts: 2 shift/reduce
State 102 conflicts: 2 shift/reduce
State 104 conflicts: 2 shift/reduce
State 106 conflicts: 2 shift/reduce
State 125 conflicts: 2 shift/reduce
State 126 conflicts: 2 shift/reduce
State 127 conflicts: 2 shift/reduce
State 128 conflicts: 2 shift/reduce
State 139 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: structd
    3        | statmnt
    4        | function
    5        | DIRECTIVE
    6        | program statmnt
    7        | program function
    8        | program structd
    9        | program DIRECTIVE
   10        | %empty

   11 structd: TOK_KW_STRUCT TOK_IDENT '{' '}'
   12        | TOK_KW_STRUCT TOK_IDENT '{' fields '}'

   13 fields: fields basetype '[' ']' TOK_IDENT ';'
   14       | fields basetype TOK_IDENT ';'
   15       | basetype '[' ']' TOK_IDENT ';'
   16       | basetype TOK_IDENT ';'

   17 function: identdec '(' ')' block
   18         | identdec '(' identseq ')' block

   19 identseq: identdec
   20         | identseq ',' identseq

   21 block: '{' stmtseq '}'
   22      | ';'

   23 stmtseq: statmnt
   24        | stmtseq statmnt

   25 statmnt: ifelse
   26        | vardecl
   27        | expr ';'
   28        | error ';'
   29        | block
   30        | return
   31        | while

   32 while: TOK_KW_WHILE '(' expr ')' statmnt

   33 return: TOK_KW_RETURN
   34       | TOK_KW_RETURN expr

   35 vardecl: identdec '=' expr ';'

   36 expr: expr '=' expr
   37     | expr '+' expr
   38     | expr '-' expr
   39     | expr '*' expr
   40     | expr '/' expr
   41     | expr '^' expr
   42     | expr '<' expr
   43     | expr '>' expr
   44     | expr '=' '=' expr
   45     | expr '!' '=' expr
   46     | expr '<' '=' expr
   47     | expr '>' '=' expr
   48     | '+' expr
   49     | '-' expr
   50     | TOK_KW_CHR expr
   51     | TOK_KW_ORD expr
   52     | '(' expr ')'
   53     | call
   54     | identdec
   55     | variable
   56     | constant
   57     | allocatr

   58 constant: NUMBER
   59         | STRING_LIT
   60         | CHAR_LIT
   61         | TOK_KW_TRUE
   62         | TOK_KW_FALSE
   63         | TOK_KW_NULL

   64 variable: TOK_IDENT
   65         | expr '[' expr ']'
   66         | expr '.' TOK_IDENT

   67 allocatr: TOK_KW_NEW TOK_IDENT '(' ')'
   68         | TOK_KW_NEW TOK_KW_STRING '(' expr ')'
   69         | TOK_KW_NEW basetype '[' expr ']'

   70 ifelse: TOK_KW_IF '(' expr ')' statmnt
   71       | TOK_KW_IF '(' expr ')' statmnt TOK_KW_ELSE statmnt

   72 exprseq: expr ',' exprseq
   73        | expr

   74 call: TOK_IDENT '(' ')'
   75     | TOK_IDENT '(' exprseq ')'

   76 basetype: TOK_KW_VOID
   77         | TOK_KW_BOOL
   78         | TOK_KW_CHAR
   79         | TOK_KW_INT
   80         | TOK_KW_STRING

   81 identdec: basetype '[' ']' TOK_IDENT
   82         | basetype TOK_IDENT


Terminals, with rules where they appear

$end (0) 0
'!' (33) 45
'(' (40) 17 18 32 52 67 68 70 71 74 75
')' (41) 17 18 32 52 67 68 70 71 74 75
'*' (42) 39
'+' (43) 37 48
',' (44) 20 72
'-' (45) 38 49
'.' (46) 66
'/' (47) 40
';' (59) 13 14 15 16 22 27 28 35
'<' (60) 42 46
'=' (61) 35 36 44 45 46 47
'>' (62) 43 47
'[' (91) 13 15 65 69 81
']' (93) 13 15 65 69 81
'^' (94) 41
'{' (123) 11 12 21
'}' (125) 11 12 21
error (256) 28
ROOT (258)
TOK_IDENT (259) 11 12 13 14 15 16 64 66 67 74 75 81 82
NUMBER (260) 58
DIRECTIVE (261) 5 9
RESERVED (262)
TOK_KW_VOID (263) 76
TOK_KW_BOOL (264) 77
TOK_KW_CHAR (265) 78
TOK_KW_INT (266) 79
TOK_KW_STRING (267) 68 80
TOK_KW_STRUCT (268) 11 12
TOK_KW_IF (269) 70 71
TOK_KW_ELSE (270) 71
TOK_KW_WHILE (271) 32
TOK_KW_RETURN (272) 33 34
TOK_KW_FALSE (273) 62
TOK_KW_TRUE (274) 61
TOK_KW_NULL (275) 63
TOK_KW_ORD (276) 51
TOK_KW_CHR (277) 50
TOK_KW_NEW (278) 67 68 69
STRING_LIT (279) 59
CHAR_LIT (280) 60
POS (281)
NEG (282)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
start (47)
    on left: 1, on right: 0
program (48)
    on left: 2 3 4 5 6 7 8 9 10, on right: 1 6 7 8 9
structd (49)
    on left: 11 12, on right: 2 8
fields (50)
    on left: 13 14 15 16, on right: 12 13 14
function (51)
    on left: 17 18, on right: 4 7
identseq (52)
    on left: 19 20, on right: 18 20
block (53)
    on left: 21 22, on right: 17 18 29
stmtseq (54)
    on left: 23 24, on right: 21 24
statmnt (55)
    on left: 25 26 27 28 29 30 31, on right: 3 6 23 24 32 70 71
while (56)
    on left: 32, on right: 31
return (57)
    on left: 33 34, on right: 30
vardecl (58)
    on left: 35, on right: 26
expr (59)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54 55 56 57, on right: 27 32 34 35 36 37 38 39 40 41 42 43 44 45
    46 47 48 49 50 51 52 65 66 68 69 70 71 72 73
constant (60)
    on left: 58 59 60 61 62 63, on right: 56
variable (61)
    on left: 64 65 66, on right: 55
allocatr (62)
    on left: 67 68 69, on right: 57
ifelse (63)
    on left: 70 71, on right: 25
exprseq (64)
    on left: 72 73, on right: 72 75
call (65)
    on left: 74 75, on right: 53
basetype (66)
    on left: 76 77 78 79 80, on right: 13 14 15 16 69 81 82
identdec (67)
    on left: 81 82, on right: 17 18 19 35 54


State 0

    0 $accept: . start $end

    error          shift, and go to state 1
    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    DIRECTIVE      shift, and go to state 4
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_STRUCT  shift, and go to state 10
    TOK_KW_IF      shift, and go to state 11
    TOK_KW_WHILE   shift, and go to state 12
    TOK_KW_RETURN  shift, and go to state 13
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '{'            shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    ';'            shift, and go to state 25
    '('            shift, and go to state 26

    $end           reduce using rule 10 (program)
    error          [reduce using rule 10 (program)]
    TOK_IDENT      [reduce using rule 10 (program)]
    NUMBER         [reduce using rule 10 (program)]
    DIRECTIVE      [reduce using rule 10 (program)]
    TOK_KW_VOID    [reduce using rule 10 (program)]
    TOK_KW_BOOL    [reduce using rule 10 (program)]
    TOK_KW_CHAR    [reduce using rule 10 (program)]
    TOK_KW_INT     [reduce using rule 10 (program)]
    TOK_KW_STRING  [reduce using rule 10 (program)]
    TOK_KW_STRUCT  [reduce using rule 10 (program)]
    TOK_KW_IF      [reduce using rule 10 (program)]
    TOK_KW_WHILE   [reduce using rule 10 (program)]
    TOK_KW_RETURN  [reduce using rule 10 (program)]
    TOK_KW_FALSE   [reduce using rule 10 (program)]
    TOK_KW_TRUE    [reduce using rule 10 (program)]
    TOK_KW_NULL    [reduce using rule 10 (program)]
    TOK_KW_ORD     [reduce using rule 10 (program)]
    TOK_KW_CHR     [reduce using rule 10 (program)]
    TOK_KW_NEW     [reduce using rule 10 (program)]
    STRING_LIT     [reduce using rule 10 (program)]
    CHAR_LIT       [reduce using rule 10 (program)]
    '{'            [reduce using rule 10 (program)]
    '+'            [reduce using rule 10 (program)]
    '-'            [reduce using rule 10 (program)]
    ';'            [reduce using rule 10 (program)]
    '('            [reduce using rule 10 (program)]

    start     go to state 27
    program   go to state 28
    structd   go to state 29
    function  go to state 30
    block     go to state 31
    statmnt   go to state 32
    while     go to state 33
    return    go to state 34
    vardecl   go to state 35
    expr      go to state 36
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    ifelse    go to state 40
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 43


State 1

   28 statmnt: error . ';'

    ';'  shift, and go to state 44


State 2

   64 variable: TOK_IDENT .
   74 call: TOK_IDENT . '(' ')'
   75     | TOK_IDENT . '(' exprseq ')'

    '('  shift, and go to state 45

    '('       [reduce using rule 64 (variable)]
    $default  reduce using rule 64 (variable)


State 3

   58 constant: NUMBER .

    $default  reduce using rule 58 (constant)


State 4

    5 program: DIRECTIVE .

    $default  reduce using rule 5 (program)


State 5

   76 basetype: TOK_KW_VOID .

    $default  reduce using rule 76 (basetype)


State 6

   77 basetype: TOK_KW_BOOL .

    $default  reduce using rule 77 (basetype)


State 7

   78 basetype: TOK_KW_CHAR .

    $default  reduce using rule 78 (basetype)


State 8

   79 basetype: TOK_KW_INT .

    $default  reduce using rule 79 (basetype)


State 9

   80 basetype: TOK_KW_STRING .

    $default  reduce using rule 80 (basetype)


State 10

   11 structd: TOK_KW_STRUCT . TOK_IDENT '{' '}'
   12        | TOK_KW_STRUCT . TOK_IDENT '{' fields '}'

    TOK_IDENT  shift, and go to state 46


State 11

   70 ifelse: TOK_KW_IF . '(' expr ')' statmnt
   71       | TOK_KW_IF . '(' expr ')' statmnt TOK_KW_ELSE statmnt

    '('  shift, and go to state 47


State 12

   32 while: TOK_KW_WHILE . '(' expr ')' statmnt

    '('  shift, and go to state 48


State 13

   33 return: TOK_KW_RETURN .
   34       | TOK_KW_RETURN . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    TOK_IDENT      [reduce using rule 33 (return)]
    NUMBER         [reduce using rule 33 (return)]
    TOK_KW_VOID    [reduce using rule 33 (return)]
    TOK_KW_BOOL    [reduce using rule 33 (return)]
    TOK_KW_CHAR    [reduce using rule 33 (return)]
    TOK_KW_INT     [reduce using rule 33 (return)]
    TOK_KW_STRING  [reduce using rule 33 (return)]
    TOK_KW_FALSE   [reduce using rule 33 (return)]
    TOK_KW_TRUE    [reduce using rule 33 (return)]
    TOK_KW_NULL    [reduce using rule 33 (return)]
    TOK_KW_ORD     [reduce using rule 33 (return)]
    TOK_KW_CHR     [reduce using rule 33 (return)]
    TOK_KW_NEW     [reduce using rule 33 (return)]
    STRING_LIT     [reduce using rule 33 (return)]
    CHAR_LIT       [reduce using rule 33 (return)]
    '+'            [reduce using rule 33 (return)]
    '-'            [reduce using rule 33 (return)]
    '('            [reduce using rule 33 (return)]
    $default       reduce using rule 33 (return)

    expr      go to state 49
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 14

   62 constant: TOK_KW_FALSE .

    $default  reduce using rule 62 (constant)


State 15

   61 constant: TOK_KW_TRUE .

    $default  reduce using rule 61 (constant)


State 16

   63 constant: TOK_KW_NULL .

    $default  reduce using rule 63 (constant)


State 17

   51 expr: TOK_KW_ORD . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 51
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 18

   50 expr: TOK_KW_CHR . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 52
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 19

   67 allocatr: TOK_KW_NEW . TOK_IDENT '(' ')'
   68         | TOK_KW_NEW . TOK_KW_STRING '(' expr ')'
   69         | TOK_KW_NEW . basetype '[' expr ']'

    TOK_IDENT      shift, and go to state 53
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 54

    basetype  go to state 55


State 20

   59 constant: STRING_LIT .

    $default  reduce using rule 59 (constant)


State 21

   60 constant: CHAR_LIT .

    $default  reduce using rule 60 (constant)


State 22

   21 block: '{' . stmtseq '}'

    error          shift, and go to state 1
    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_IF      shift, and go to state 11
    TOK_KW_WHILE   shift, and go to state 12
    TOK_KW_RETURN  shift, and go to state 13
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '{'            shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    ';'            shift, and go to state 25
    '('            shift, and go to state 26

    block     go to state 31
    stmtseq   go to state 56
    statmnt   go to state 57
    while     go to state 33
    return    go to state 34
    vardecl   go to state 35
    expr      go to state 36
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    ifelse    go to state 40
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 58


State 23

   48 expr: '+' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 59
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 24

   49 expr: '-' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 60
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 25

   22 block: ';' .

    $default  reduce using rule 22 (block)


State 26

   52 expr: '(' . expr ')'

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 61
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 27

    0 $accept: start . $end

    $end  shift, and go to state 62


State 28

    1 start: program .
    6 program: program . statmnt
    7        | program . function
    8        | program . structd
    9        | program . DIRECTIVE

    error          shift, and go to state 1
    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    DIRECTIVE      shift, and go to state 63
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_STRUCT  shift, and go to state 10
    TOK_KW_IF      shift, and go to state 11
    TOK_KW_WHILE   shift, and go to state 12
    TOK_KW_RETURN  shift, and go to state 13
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '{'            shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    ';'            shift, and go to state 25
    '('            shift, and go to state 26

    $end  reduce using rule 1 (start)

    structd   go to state 64
    function  go to state 65
    block     go to state 31
    statmnt   go to state 66
    while     go to state 33
    return    go to state 34
    vardecl   go to state 35
    expr      go to state 36
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    ifelse    go to state 40
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 43


State 29

    2 program: structd .

    $default  reduce using rule 2 (program)


State 30

    4 program: function .

    $default  reduce using rule 4 (program)


State 31

   29 statmnt: block .

    $default  reduce using rule 29 (statmnt)


State 32

    3 program: statmnt .

    $default  reduce using rule 3 (program)


State 33

   31 statmnt: while .

    $default  reduce using rule 31 (statmnt)


State 34

   30 statmnt: return .

    $default  reduce using rule 30 (statmnt)


State 35

   26 statmnt: vardecl .

    $default  reduce using rule 26 (statmnt)


State 36

   27 statmnt: expr . ';'
   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    ';'  shift, and go to state 77
    '.'  shift, and go to state 78


State 37

   56 expr: constant .

    $default  reduce using rule 56 (expr)


State 38

   55 expr: variable .

    $default  reduce using rule 55 (expr)


State 39

   57 expr: allocatr .

    $default  reduce using rule 57 (expr)


State 40

   25 statmnt: ifelse .

    $default  reduce using rule 25 (statmnt)


State 41

   53 expr: call .

    $default  reduce using rule 53 (expr)


State 42

   81 identdec: basetype . '[' ']' TOK_IDENT
   82         | basetype . TOK_IDENT

    TOK_IDENT  shift, and go to state 79
    '['        shift, and go to state 80


State 43

   17 function: identdec . '(' ')' block
   18         | identdec . '(' identseq ')' block
   35 vardecl: identdec . '=' expr ';'
   54 expr: identdec .

    '='  shift, and go to state 81
    '('  shift, and go to state 82

    '='       [reduce using rule 54 (expr)]
    $default  reduce using rule 54 (expr)


State 44

   28 statmnt: error ';' .

    $default  reduce using rule 28 (statmnt)


State 45

   74 call: TOK_IDENT '(' . ')'
   75     | TOK_IDENT '(' . exprseq ')'

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26
    ')'            shift, and go to state 83

    expr      go to state 84
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    exprseq   go to state 85
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 46

   11 structd: TOK_KW_STRUCT TOK_IDENT . '{' '}'
   12        | TOK_KW_STRUCT TOK_IDENT . '{' fields '}'

    '{'  shift, and go to state 86


State 47

   70 ifelse: TOK_KW_IF '(' . expr ')' statmnt
   71       | TOK_KW_IF '(' . expr ')' statmnt TOK_KW_ELSE statmnt

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 87
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 48

   32 while: TOK_KW_WHILE '(' . expr ')' statmnt

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 88
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 49

   34 return: TOK_KW_RETURN expr .
   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '+'       [reduce using rule 34 (return)]
    '-'       [reduce using rule 34 (return)]
    $default  reduce using rule 34 (return)


State 50

   54 expr: identdec .

    $default  reduce using rule 54 (expr)


State 51

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   51     | TOK_KW_ORD expr .
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 51 (expr)]
    '='       [reduce using rule 51 (expr)]
    '+'       [reduce using rule 51 (expr)]
    '-'       [reduce using rule 51 (expr)]
    '*'       [reduce using rule 51 (expr)]
    '/'       [reduce using rule 51 (expr)]
    '^'       [reduce using rule 51 (expr)]
    '<'       [reduce using rule 51 (expr)]
    '>'       [reduce using rule 51 (expr)]
    '!'       [reduce using rule 51 (expr)]
    '.'       [reduce using rule 51 (expr)]
    $default  reduce using rule 51 (expr)


State 52

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   50     | TOK_KW_CHR expr .
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 50 (expr)]
    '='       [reduce using rule 50 (expr)]
    '+'       [reduce using rule 50 (expr)]
    '-'       [reduce using rule 50 (expr)]
    '*'       [reduce using rule 50 (expr)]
    '/'       [reduce using rule 50 (expr)]
    '^'       [reduce using rule 50 (expr)]
    '<'       [reduce using rule 50 (expr)]
    '>'       [reduce using rule 50 (expr)]
    '!'       [reduce using rule 50 (expr)]
    '.'       [reduce using rule 50 (expr)]
    $default  reduce using rule 50 (expr)


State 53

   67 allocatr: TOK_KW_NEW TOK_IDENT . '(' ')'

    '('  shift, and go to state 89


State 54

   68 allocatr: TOK_KW_NEW TOK_KW_STRING . '(' expr ')'
   80 basetype: TOK_KW_STRING .

    '('  shift, and go to state 90

    $default  reduce using rule 80 (basetype)


State 55

   69 allocatr: TOK_KW_NEW basetype . '[' expr ']'

    '['  shift, and go to state 91


State 56

   21 block: '{' stmtseq . '}'
   24 stmtseq: stmtseq . statmnt

    error          shift, and go to state 1
    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_IF      shift, and go to state 11
    TOK_KW_WHILE   shift, and go to state 12
    TOK_KW_RETURN  shift, and go to state 13
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '}'            shift, and go to state 92
    '{'            shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    ';'            shift, and go to state 25
    '('            shift, and go to state 26

    block     go to state 31
    statmnt   go to state 93
    while     go to state 33
    return    go to state 34
    vardecl   go to state 35
    expr      go to state 36
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    ifelse    go to state 40
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 58


State 57

   23 stmtseq: statmnt .

    $default  reduce using rule 23 (stmtseq)


State 58

   35 vardecl: identdec . '=' expr ';'
   54 expr: identdec .

    '='  shift, and go to state 81

    '='       [reduce using rule 54 (expr)]
    $default  reduce using rule 54 (expr)


State 59

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   48     | '+' expr .
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 48 (expr)]
    '.'       [reduce using rule 48 (expr)]
    $default  reduce using rule 48 (expr)


State 60

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   49     | '-' expr .
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 49 (expr)]
    '.'       [reduce using rule 49 (expr)]
    $default  reduce using rule 49 (expr)


State 61

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   52     | '(' expr . ')'
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    ')'  shift, and go to state 94
    '.'  shift, and go to state 78


State 62

    0 $accept: start $end .

    $default  accept


State 63

    9 program: program DIRECTIVE .

    $default  reduce using rule 9 (program)


State 64

    8 program: program structd .

    $default  reduce using rule 8 (program)


State 65

    7 program: program function .

    $default  reduce using rule 7 (program)


State 66

    6 program: program statmnt .

    $default  reduce using rule 6 (program)


State 67

   65 variable: expr '[' . expr ']'

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 95
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 68

   36 expr: expr '=' . expr
   44     | expr '=' . '=' expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '='            shift, and go to state 96
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 97
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 69

   37 expr: expr '+' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 98
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 70

   38 expr: expr '-' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 99
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 71

   39 expr: expr '*' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 100
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 72

   40 expr: expr '/' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 101
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 73

   41 expr: expr '^' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 102
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 74

   42 expr: expr '<' . expr
   46     | expr '<' . '=' expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '='            shift, and go to state 103
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 104
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 75

   43 expr: expr '>' . expr
   47     | expr '>' . '=' expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '='            shift, and go to state 105
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 106
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 76

   45 expr: expr '!' . '=' expr

    '='  shift, and go to state 107


State 77

   27 statmnt: expr ';' .

    $default  reduce using rule 27 (statmnt)


State 78

   66 variable: expr '.' . TOK_IDENT

    TOK_IDENT  shift, and go to state 108


State 79

   82 identdec: basetype TOK_IDENT .

    $default  reduce using rule 82 (identdec)


State 80

   81 identdec: basetype '[' . ']' TOK_IDENT

    ']'  shift, and go to state 109


State 81

   35 vardecl: identdec '=' . expr ';'

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 110
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 82

   17 function: identdec '(' . ')' block
   18         | identdec '(' . identseq ')' block

    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    ')'            shift, and go to state 111

    identseq  go to state 112
    basetype  go to state 42
    identdec  go to state 113


State 83

   74 call: TOK_IDENT '(' ')' .

    $default  reduce using rule 74 (call)


State 84

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT
   72 exprseq: expr . ',' exprseq
   73        | expr .

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    ','  shift, and go to state 114
    '.'  shift, and go to state 78

    $default  reduce using rule 73 (exprseq)


State 85

   75 call: TOK_IDENT '(' exprseq . ')'

    ')'  shift, and go to state 115


State 86

   11 structd: TOK_KW_STRUCT TOK_IDENT '{' . '}'
   12        | TOK_KW_STRUCT TOK_IDENT '{' . fields '}'

    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    '}'            shift, and go to state 116

    fields    go to state 117
    basetype  go to state 118


State 87

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT
   70 ifelse: TOK_KW_IF '(' expr . ')' statmnt
   71       | TOK_KW_IF '(' expr . ')' statmnt TOK_KW_ELSE statmnt

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    ')'  shift, and go to state 119
    '.'  shift, and go to state 78


State 88

   32 while: TOK_KW_WHILE '(' expr . ')' statmnt
   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    ')'  shift, and go to state 120
    '.'  shift, and go to state 78


State 89

   67 allocatr: TOK_KW_NEW TOK_IDENT '(' . ')'

    ')'  shift, and go to state 121


State 90

   68 allocatr: TOK_KW_NEW TOK_KW_STRING '(' . expr ')'

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 122
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 91

   69 allocatr: TOK_KW_NEW basetype '[' . expr ']'

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 123
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 92

   21 block: '{' stmtseq '}' .

    $default  reduce using rule 21 (block)


State 93

   24 stmtseq: stmtseq statmnt .

    $default  reduce using rule 24 (stmtseq)


State 94

   52 expr: '(' expr ')' .

    $default  reduce using rule 52 (expr)


State 95

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   65         | expr '[' expr . ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    ']'  shift, and go to state 124
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78


State 96

   44 expr: expr '=' '=' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 125
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 97

   36 expr: expr . '=' expr
   36     | expr '=' expr .
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 36 (expr)]
    '.'       [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


State 98

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   37     | expr '+' expr .
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 37 (expr)]
    '.'       [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


State 99

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   38     | expr '-' expr .
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 38 (expr)]
    '.'       [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


State 100

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   39     | expr '*' expr .
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 39 (expr)]
    '.'       [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


State 101

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   40     | expr '/' expr .
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 40 (expr)]
    '.'       [reduce using rule 40 (expr)]
    $default  reduce using rule 40 (expr)


State 102

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   41     | expr '^' expr .
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 41 (expr)]
    '.'       [reduce using rule 41 (expr)]
    $default  reduce using rule 41 (expr)


State 103

   46 expr: expr '<' '=' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 126
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 104

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   42     | expr '<' expr .
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 42 (expr)]
    '.'       [reduce using rule 42 (expr)]
    $default  reduce using rule 42 (expr)


State 105

   47 expr: expr '>' '=' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 127
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 106

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   43     | expr '>' expr .
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 43 (expr)]
    '.'       [reduce using rule 43 (expr)]
    $default  reduce using rule 43 (expr)


State 107

   45 expr: expr '!' '=' . expr

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 128
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 108

   66 variable: expr '.' TOK_IDENT .

    $default  reduce using rule 66 (variable)


State 109

   81 identdec: basetype '[' ']' . TOK_IDENT

    TOK_IDENT  shift, and go to state 129


State 110

   35 vardecl: identdec '=' expr . ';'
   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    ';'  shift, and go to state 130
    '.'  shift, and go to state 78


State 111

   17 function: identdec '(' ')' . block

    '{'  shift, and go to state 22
    ';'  shift, and go to state 25

    block  go to state 131


State 112

   18 function: identdec '(' identseq . ')' block
   20 identseq: identseq . ',' identseq

    ','  shift, and go to state 132
    ')'  shift, and go to state 133


State 113

   19 identseq: identdec .

    $default  reduce using rule 19 (identseq)


State 114

   72 exprseq: expr ',' . exprseq

    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    '('            shift, and go to state 26

    expr      go to state 84
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    exprseq   go to state 134
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 50


State 115

   75 call: TOK_IDENT '(' exprseq ')' .

    $default  reduce using rule 75 (call)


State 116

   11 structd: TOK_KW_STRUCT TOK_IDENT '{' '}' .

    $default  reduce using rule 11 (structd)


State 117

   12 structd: TOK_KW_STRUCT TOK_IDENT '{' fields . '}'
   13 fields: fields . basetype '[' ']' TOK_IDENT ';'
   14       | fields . basetype TOK_IDENT ';'

    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    '}'            shift, and go to state 135

    basetype  go to state 136


State 118

   15 fields: basetype . '[' ']' TOK_IDENT ';'
   16       | basetype . TOK_IDENT ';'

    TOK_IDENT  shift, and go to state 137
    '['        shift, and go to state 138


State 119

   70 ifelse: TOK_KW_IF '(' expr ')' . statmnt
   71       | TOK_KW_IF '(' expr ')' . statmnt TOK_KW_ELSE statmnt

    error          shift, and go to state 1
    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_IF      shift, and go to state 11
    TOK_KW_WHILE   shift, and go to state 12
    TOK_KW_RETURN  shift, and go to state 13
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '{'            shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    ';'            shift, and go to state 25
    '('            shift, and go to state 26

    block     go to state 31
    statmnt   go to state 139
    while     go to state 33
    return    go to state 34
    vardecl   go to state 35
    expr      go to state 36
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    ifelse    go to state 40
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 58


State 120

   32 while: TOK_KW_WHILE '(' expr ')' . statmnt

    error          shift, and go to state 1
    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_IF      shift, and go to state 11
    TOK_KW_WHILE   shift, and go to state 12
    TOK_KW_RETURN  shift, and go to state 13
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '{'            shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    ';'            shift, and go to state 25
    '('            shift, and go to state 26

    block     go to state 31
    statmnt   go to state 140
    while     go to state 33
    return    go to state 34
    vardecl   go to state 35
    expr      go to state 36
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    ifelse    go to state 40
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 58


State 121

   67 allocatr: TOK_KW_NEW TOK_IDENT '(' ')' .

    $default  reduce using rule 67 (allocatr)


State 122

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT
   68 allocatr: TOK_KW_NEW TOK_KW_STRING '(' expr . ')'

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    ')'  shift, and go to state 141
    '.'  shift, and go to state 78


State 123

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT
   69 allocatr: TOK_KW_NEW basetype '[' expr . ']'

    '['  shift, and go to state 67
    ']'  shift, and go to state 142
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78


State 124

   65 variable: expr '[' expr ']' .

    $default  reduce using rule 65 (variable)


State 125

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   44     | expr '=' '=' expr .
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 44 (expr)]
    '.'       [reduce using rule 44 (expr)]
    $default  reduce using rule 44 (expr)


State 126

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   46     | expr '<' '=' expr .
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 46 (expr)]
    '.'       [reduce using rule 46 (expr)]
    $default  reduce using rule 46 (expr)


State 127

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   47     | expr '>' '=' expr .
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 47 (expr)]
    '.'       [reduce using rule 47 (expr)]
    $default  reduce using rule 47 (expr)


State 128

   36 expr: expr . '=' expr
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | expr . '^' expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '=' '=' expr
   45     | expr . '!' '=' expr
   45     | expr '!' '=' expr .
   46     | expr . '<' '=' expr
   47     | expr . '>' '=' expr
   65 variable: expr . '[' expr ']'
   66         | expr . '.' TOK_IDENT

    '['  shift, and go to state 67
    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '^'  shift, and go to state 73
    '<'  shift, and go to state 74
    '>'  shift, and go to state 75
    '!'  shift, and go to state 76
    '.'  shift, and go to state 78

    '['       [reduce using rule 45 (expr)]
    '.'       [reduce using rule 45 (expr)]
    $default  reduce using rule 45 (expr)


State 129

   81 identdec: basetype '[' ']' TOK_IDENT .

    $default  reduce using rule 81 (identdec)


State 130

   35 vardecl: identdec '=' expr ';' .

    $default  reduce using rule 35 (vardecl)


State 131

   17 function: identdec '(' ')' block .

    $default  reduce using rule 17 (function)


State 132

   20 identseq: identseq ',' . identseq

    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9

    identseq  go to state 143
    basetype  go to state 42
    identdec  go to state 113


State 133

   18 function: identdec '(' identseq ')' . block

    '{'  shift, and go to state 22
    ';'  shift, and go to state 25

    block  go to state 144


State 134

   72 exprseq: expr ',' exprseq .

    $default  reduce using rule 72 (exprseq)


State 135

   12 structd: TOK_KW_STRUCT TOK_IDENT '{' fields '}' .

    $default  reduce using rule 12 (structd)


State 136

   13 fields: fields basetype . '[' ']' TOK_IDENT ';'
   14       | fields basetype . TOK_IDENT ';'

    TOK_IDENT  shift, and go to state 145
    '['        shift, and go to state 146


State 137

   16 fields: basetype TOK_IDENT . ';'

    ';'  shift, and go to state 147


State 138

   15 fields: basetype '[' . ']' TOK_IDENT ';'

    ']'  shift, and go to state 148


State 139

   70 ifelse: TOK_KW_IF '(' expr ')' statmnt .
   71       | TOK_KW_IF '(' expr ')' statmnt . TOK_KW_ELSE statmnt

    TOK_KW_ELSE  shift, and go to state 149

    TOK_KW_ELSE  [reduce using rule 70 (ifelse)]
    $default     reduce using rule 70 (ifelse)


State 140

   32 while: TOK_KW_WHILE '(' expr ')' statmnt .

    $default  reduce using rule 32 (while)


State 141

   68 allocatr: TOK_KW_NEW TOK_KW_STRING '(' expr ')' .

    $default  reduce using rule 68 (allocatr)


State 142

   69 allocatr: TOK_KW_NEW basetype '[' expr ']' .

    $default  reduce using rule 69 (allocatr)


State 143

   20 identseq: identseq . ',' identseq
   20         | identseq ',' identseq .

    $default  reduce using rule 20 (identseq)


State 144

   18 function: identdec '(' identseq ')' block .

    $default  reduce using rule 18 (function)


State 145

   14 fields: fields basetype TOK_IDENT . ';'

    ';'  shift, and go to state 150


State 146

   13 fields: fields basetype '[' . ']' TOK_IDENT ';'

    ']'  shift, and go to state 151


State 147

   16 fields: basetype TOK_IDENT ';' .

    $default  reduce using rule 16 (fields)


State 148

   15 fields: basetype '[' ']' . TOK_IDENT ';'

    TOK_IDENT  shift, and go to state 152


State 149

   71 ifelse: TOK_KW_IF '(' expr ')' statmnt TOK_KW_ELSE . statmnt

    error          shift, and go to state 1
    TOK_IDENT      shift, and go to state 2
    NUMBER         shift, and go to state 3
    TOK_KW_VOID    shift, and go to state 5
    TOK_KW_BOOL    shift, and go to state 6
    TOK_KW_CHAR    shift, and go to state 7
    TOK_KW_INT     shift, and go to state 8
    TOK_KW_STRING  shift, and go to state 9
    TOK_KW_IF      shift, and go to state 11
    TOK_KW_WHILE   shift, and go to state 12
    TOK_KW_RETURN  shift, and go to state 13
    TOK_KW_FALSE   shift, and go to state 14
    TOK_KW_TRUE    shift, and go to state 15
    TOK_KW_NULL    shift, and go to state 16
    TOK_KW_ORD     shift, and go to state 17
    TOK_KW_CHR     shift, and go to state 18
    TOK_KW_NEW     shift, and go to state 19
    STRING_LIT     shift, and go to state 20
    CHAR_LIT       shift, and go to state 21
    '{'            shift, and go to state 22
    '+'            shift, and go to state 23
    '-'            shift, and go to state 24
    ';'            shift, and go to state 25
    '('            shift, and go to state 26

    block     go to state 31
    statmnt   go to state 153
    while     go to state 33
    return    go to state 34
    vardecl   go to state 35
    expr      go to state 36
    constant  go to state 37
    variable  go to state 38
    allocatr  go to state 39
    ifelse    go to state 40
    call      go to state 41
    basetype  go to state 42
    identdec  go to state 58


State 150

   14 fields: fields basetype TOK_IDENT ';' .

    $default  reduce using rule 14 (fields)


State 151

   13 fields: fields basetype '[' ']' . TOK_IDENT ';'

    TOK_IDENT  shift, and go to state 154


State 152

   15 fields: basetype '[' ']' TOK_IDENT . ';'

    ';'  shift, and go to state 155


State 153

   71 ifelse: TOK_KW_IF '(' expr ')' statmnt TOK_KW_ELSE statmnt .

    $default  reduce using rule 71 (ifelse)


State 154

   13 fields: fields basetype '[' ']' TOK_IDENT . ';'

    ';'  shift, and go to state 156


State 155

   15 fields: basetype '[' ']' TOK_IDENT ';' .

    $default  reduce using rule 15 (fields)


State 156

   13 fields: fields basetype '[' ']' TOK_IDENT ';' .

    $default  reduce using rule 13 (fields)
