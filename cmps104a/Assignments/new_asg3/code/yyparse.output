Terminals unused in grammar

   ROOT
   RESERVED
   TOK_KW_STRUCT
   TOK_KW_IF
   TOK_KW_ELSE
   TOK_KW_WHILE
   TOK_KW_RETURN
   TOK_KW_FALSE
   TOK_KW_TRUE
   TOK_KW_NULL
   TOK_KW_ORD
   TOK_KW_CHR
   TOK_KW_NEW
   STRING_LIT
   CHAR_LIT


Grammar

    0 $accept: program $end

    1 program: program statmnt
    2        | program fnction
    3        | program DIRECTIVE
    4        | %empty

    5 fnction: identdc '(' identsq ')' block
    6        | identdc '(' ')' block

    7 block: '{' stmtseq '}'
    8      | ';'

    9 stmtseq: stmtseq statmnt
   10        | statmnt

   11 statmnt: expr ';'
   12        | error ';'

   13 expr: expr '=' expr
   14     | expr '+' expr
   15     | expr '-' expr
   16     | expr '*' expr
   17     | expr '/' expr
   18     | expr '^' expr
   19     | expr '<' expr
   20     | expr '>' expr
   21     | '+' expr
   22     | '-' expr
   23     | '(' expr ')'
   24     | '[' expr ']'
   25     | '{' expr '}'
   26     | TOK_IDENT
   27     | NUMBER

   28 identsq: isqhelp
   29        | identdc isqhelp
   30        | identdc

   31 isqhelp: ',' identsq

   32 identdc: basetype '[' ']' TOK_IDENT
   33        | basetype TOK_IDENT

   34 basetype: TOK_KW_VOID
   35         | TOK_KW_BOOL
   36         | TOK_KW_CHAR
   37         | TOK_KW_INT
   38         | TOK_KW_STRING


Terminals, with rules where they appear

$end (0) 0
'(' (40) 5 6 23
')' (41) 5 6 23
'*' (42) 16
'+' (43) 14 21
',' (44) 31
'-' (45) 15 22
'/' (47) 17
';' (59) 8 11 12
'<' (60) 19
'=' (61) 13
'>' (62) 20
'[' (91) 24 32
']' (93) 24 32
'^' (94) 18
'{' (123) 7 25
'}' (125) 7 25
error (256) 12
ROOT (258)
TOK_IDENT (259) 26 32 33
NUMBER (260) 27
DIRECTIVE (261) 3
RESERVED (262)
TOK_KW_VOID (263) 34
TOK_KW_BOOL (264) 35
TOK_KW_CHAR (265) 36
TOK_KW_INT (266) 37
TOK_KW_STRING (267) 38
TOK_KW_STRUCT (268)
TOK_KW_IF (269)
TOK_KW_ELSE (270)
TOK_KW_WHILE (271)
TOK_KW_RETURN (272)
TOK_KW_FALSE (273)
TOK_KW_TRUE (274)
TOK_KW_NULL (275)
TOK_KW_ORD (276)
TOK_KW_CHR (277)
TOK_KW_NEW (278)
STRING_LIT (279)
CHAR_LIT (280)
POS (281)
NEG (282)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1 2 3 4, on right: 0 1 2 3
fnction (46)
    on left: 5 6, on right: 2
block (47)
    on left: 7 8, on right: 5 6
stmtseq (48)
    on left: 9 10, on right: 7 9
statmnt (49)
    on left: 11 12, on right: 1 9 10
expr (50)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27, on right:
    11 13 14 15 16 17 18 19 20 21 22 23 24 25
identsq (51)
    on left: 28 29 30, on right: 5 31
isqhelp (52)
    on left: 31, on right: 28 29
identdc (53)
    on left: 32 33, on right: 5 6 29 30
basetype (54)
    on left: 34 35 36 37 38, on right: 32 33


State 0

    0 $accept: . program $end

    $default  reduce using rule 4 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . statmnt
    2        | program . fnction
    3        | program . DIRECTIVE

    $end           shift, and go to state 2
    error          shift, and go to state 3
    TOK_IDENT      shift, and go to state 4
    NUMBER         shift, and go to state 5
    DIRECTIVE      shift, and go to state 6
    TOK_KW_VOID    shift, and go to state 7
    TOK_KW_BOOL    shift, and go to state 8
    TOK_KW_CHAR    shift, and go to state 9
    TOK_KW_INT     shift, and go to state 10
    TOK_KW_STRING  shift, and go to state 11
    '{'            shift, and go to state 12
    '['            shift, and go to state 13
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '('            shift, and go to state 16

    fnction   go to state 17
    statmnt   go to state 18
    expr      go to state 19
    identdc   go to state 20
    basetype  go to state 21


State 2

    0 $accept: program $end .

    $default  accept


State 3

   12 statmnt: error . ';'

    ';'  shift, and go to state 22


State 4

   26 expr: TOK_IDENT .

    $default  reduce using rule 26 (expr)


State 5

   27 expr: NUMBER .

    $default  reduce using rule 27 (expr)


State 6

    3 program: program DIRECTIVE .

    $default  reduce using rule 3 (program)


State 7

   34 basetype: TOK_KW_VOID .

    $default  reduce using rule 34 (basetype)


State 8

   35 basetype: TOK_KW_BOOL .

    $default  reduce using rule 35 (basetype)


State 9

   36 basetype: TOK_KW_CHAR .

    $default  reduce using rule 36 (basetype)


State 10

   37 basetype: TOK_KW_INT .

    $default  reduce using rule 37 (basetype)


State 11

   38 basetype: TOK_KW_STRING .

    $default  reduce using rule 38 (basetype)


State 12

   25 expr: '{' . expr '}'

    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    expr  go to state 23


State 13

   24 expr: '[' . expr ']'

    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    expr  go to state 24


State 14

   21 expr: '+' . expr

    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    expr  go to state 25


State 15

   22 expr: '-' . expr

    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    expr  go to state 26


State 16

   23 expr: '(' . expr ')'

    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    expr  go to state 27


State 17

    2 program: program fnction .

    $default  reduce using rule 2 (program)


State 18

    1 program: program statmnt .

    $default  reduce using rule 1 (program)


State 19

   11 statmnt: expr . ';'
   13 expr: expr . '=' expr
   14     | expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . '^' expr
   19     | expr . '<' expr
   20     | expr . '>' expr

    '='  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '^'  shift, and go to state 33
    '<'  shift, and go to state 34
    '>'  shift, and go to state 35
    ';'  shift, and go to state 36


State 20

    5 fnction: identdc . '(' identsq ')' block
    6        | identdc . '(' ')' block

    '('  shift, and go to state 37


State 21

   32 identdc: basetype . '[' ']' TOK_IDENT
   33        | basetype . TOK_IDENT

    TOK_IDENT  shift, and go to state 38
    '['        shift, and go to state 39


State 22

   12 statmnt: error ';' .

    $default  reduce using rule 12 (statmnt)


State 23

   13 expr: expr . '=' expr
   14     | expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . '^' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   25     | '{' expr . '}'

    '}'  shift, and go to state 40
    '='  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '^'  shift, and go to state 33
    '<'  shift, and go to state 34
    '>'  shift, and go to state 35


State 24

   13 expr: expr . '=' expr
   14     | expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . '^' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   24     | '[' expr . ']'

    ']'  shift, and go to state 41
    '='  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '^'  shift, and go to state 33
    '<'  shift, and go to state 34
    '>'  shift, and go to state 35


State 25

   13 expr: expr . '=' expr
   14     | expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . '^' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | '+' expr .

    '<'  shift, and go to state 34
    '>'  shift, and go to state 35

    $default  reduce using rule 21 (expr)


State 26

   13 expr: expr . '=' expr
   14     | expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . '^' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   22     | '-' expr .

    '<'  shift, and go to state 34
    '>'  shift, and go to state 35

    $default  reduce using rule 22 (expr)


State 27

   13 expr: expr . '=' expr
   14     | expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . '^' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   23     | '(' expr . ')'

    '='  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '^'  shift, and go to state 33
    '<'  shift, and go to state 34
    '>'  shift, and go to state 35
    ')'  shift, and go to state 42


State 28

   13 expr: expr '=' . expr

    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    expr  go to state 43


State 29

   14 expr: expr '+' . expr

    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    expr  go to state 44


State 30

   15 expr: expr '-' . expr

    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    expr  go to state 45


State 31

   16 expr: expr '*' . expr

    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    expr  go to state 46


State 32

   17 expr: expr '/' . expr

    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    expr  go to state 47


State 33

   18 expr: expr '^' . expr

    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    expr  go to state 48


State 34

   19 expr: expr '<' . expr

    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    expr  go to state 49


State 35

   20 expr: expr '>' . expr

    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    expr  go to state 50


State 36

   11 statmnt: expr ';' .

    $default  reduce using rule 11 (statmnt)


State 37

    5 fnction: identdc '(' . identsq ')' block
    6        | identdc '(' . ')' block

    TOK_KW_VOID    shift, and go to state 7
    TOK_KW_BOOL    shift, and go to state 8
    TOK_KW_CHAR    shift, and go to state 9
    TOK_KW_INT     shift, and go to state 10
    TOK_KW_STRING  shift, and go to state 11
    ')'            shift, and go to state 51
    ','            shift, and go to state 52

    identsq   go to state 53
    isqhelp   go to state 54
    identdc   go to state 55
    basetype  go to state 21


State 38

   33 identdc: basetype TOK_IDENT .

    $default  reduce using rule 33 (identdc)


State 39

   32 identdc: basetype '[' . ']' TOK_IDENT

    ']'  shift, and go to state 56


State 40

   25 expr: '{' expr '}' .

    $default  reduce using rule 25 (expr)


State 41

   24 expr: '[' expr ']' .

    $default  reduce using rule 24 (expr)


State 42

   23 expr: '(' expr ')' .

    $default  reduce using rule 23 (expr)


State 43

   13 expr: expr . '=' expr
   13     | expr '=' expr .
   14     | expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . '^' expr
   19     | expr . '<' expr
   20     | expr . '>' expr

    '='  shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '^'  shift, and go to state 33
    '<'  shift, and go to state 34
    '>'  shift, and go to state 35

    $default  reduce using rule 13 (expr)


State 44

   13 expr: expr . '=' expr
   14     | expr . '+' expr
   14     | expr '+' expr .
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . '^' expr
   19     | expr . '<' expr
   20     | expr . '>' expr

    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '^'  shift, and go to state 33
    '<'  shift, and go to state 34
    '>'  shift, and go to state 35

    $default  reduce using rule 14 (expr)


State 45

   13 expr: expr . '=' expr
   14     | expr . '+' expr
   15     | expr . '-' expr
   15     | expr '-' expr .
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . '^' expr
   19     | expr . '<' expr
   20     | expr . '>' expr

    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    '^'  shift, and go to state 33
    '<'  shift, and go to state 34
    '>'  shift, and go to state 35

    $default  reduce using rule 15 (expr)


State 46

   13 expr: expr . '=' expr
   14     | expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   16     | expr '*' expr .
   17     | expr . '/' expr
   18     | expr . '^' expr
   19     | expr . '<' expr
   20     | expr . '>' expr

    '^'  shift, and go to state 33
    '<'  shift, and go to state 34
    '>'  shift, and go to state 35

    $default  reduce using rule 16 (expr)


State 47

   13 expr: expr . '=' expr
   14     | expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   17     | expr '/' expr .
   18     | expr . '^' expr
   19     | expr . '<' expr
   20     | expr . '>' expr

    '^'  shift, and go to state 33
    '<'  shift, and go to state 34
    '>'  shift, and go to state 35

    $default  reduce using rule 17 (expr)


State 48

   13 expr: expr . '=' expr
   14     | expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . '^' expr
   18     | expr '^' expr .
   19     | expr . '<' expr
   20     | expr . '>' expr

    '^'  shift, and go to state 33
    '<'  shift, and go to state 34
    '>'  shift, and go to state 35

    $default  reduce using rule 18 (expr)


State 49

   13 expr: expr . '=' expr
   14     | expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . '^' expr
   19     | expr . '<' expr
   19     | expr '<' expr .
   20     | expr . '>' expr

    $default  reduce using rule 19 (expr)


State 50

   13 expr: expr . '=' expr
   14     | expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . '^' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   20     | expr '>' expr .

    $default  reduce using rule 20 (expr)


State 51

    6 fnction: identdc '(' ')' . block

    '{'  shift, and go to state 57
    ';'  shift, and go to state 58

    block  go to state 59


State 52

   31 isqhelp: ',' . identsq

    TOK_KW_VOID    shift, and go to state 7
    TOK_KW_BOOL    shift, and go to state 8
    TOK_KW_CHAR    shift, and go to state 9
    TOK_KW_INT     shift, and go to state 10
    TOK_KW_STRING  shift, and go to state 11
    ','            shift, and go to state 52

    identsq   go to state 60
    isqhelp   go to state 54
    identdc   go to state 55
    basetype  go to state 21


State 53

    5 fnction: identdc '(' identsq . ')' block

    ')'  shift, and go to state 61


State 54

   28 identsq: isqhelp .

    $default  reduce using rule 28 (identsq)


State 55

   29 identsq: identdc . isqhelp
   30        | identdc .

    ','  shift, and go to state 52

    $default  reduce using rule 30 (identsq)

    isqhelp  go to state 62


State 56

   32 identdc: basetype '[' ']' . TOK_IDENT

    TOK_IDENT  shift, and go to state 63


State 57

    7 block: '{' . stmtseq '}'

    error      shift, and go to state 3
    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    stmtseq  go to state 64
    statmnt  go to state 65
    expr     go to state 19


State 58

    8 block: ';' .

    $default  reduce using rule 8 (block)


State 59

    6 fnction: identdc '(' ')' block .

    $default  reduce using rule 6 (fnction)


State 60

   31 isqhelp: ',' identsq .

    $default  reduce using rule 31 (isqhelp)


State 61

    5 fnction: identdc '(' identsq ')' . block

    '{'  shift, and go to state 57
    ';'  shift, and go to state 58

    block  go to state 66


State 62

   29 identsq: identdc isqhelp .

    $default  reduce using rule 29 (identsq)


State 63

   32 identdc: basetype '[' ']' TOK_IDENT .

    $default  reduce using rule 32 (identdc)


State 64

    7 block: '{' stmtseq . '}'
    9 stmtseq: stmtseq . statmnt

    error      shift, and go to state 3
    TOK_IDENT  shift, and go to state 4
    NUMBER     shift, and go to state 5
    '}'        shift, and go to state 67
    '{'        shift, and go to state 12
    '['        shift, and go to state 13
    '+'        shift, and go to state 14
    '-'        shift, and go to state 15
    '('        shift, and go to state 16

    statmnt  go to state 68
    expr     go to state 19


State 65

   10 stmtseq: statmnt .

    $default  reduce using rule 10 (stmtseq)


State 66

    5 fnction: identdc '(' identsq ')' block .

    $default  reduce using rule 5 (fnction)


State 67

    7 block: '{' stmtseq '}' .

    $default  reduce using rule 7 (block)


State 68

    9 stmtseq: stmtseq statmnt .

    $default  reduce using rule 9 (stmtseq)
